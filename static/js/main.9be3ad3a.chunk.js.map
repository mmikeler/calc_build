{"version":3,"sources":["components/loops.js","components/groove.js","components/edge.js","components/summary.js","components/checkout.js","calcDetailPlanBG.jpg","App.js","reportWebVitals.js","index.js"],"names":["LoopsOptions","state","side","count","before","after","minSpace","error","handleInputChange","e","fieldName","target","name","value","key","closest","dataset","steps","Math","round","setState","props","func","isFree","r","A1","A2","this","set","beforeMin","beforeMax","afterMax","nominalwidth","nominalheight","afterMin","countMax","LTangle","lt","x","RTangle","rt","RBangle","rb","LBangle","lb","reserve","resL","left","resT","top","resR","right","resB","bot","className","onChange","defaultValue","loops","disabled","type","min","max","step","React","Component","Loops","m","indent","radius","undefined","width","height","circles","push","d","stroke","strokeDasharray","fill","Circle","cx","cy","i","circleCX","circleCY","line","numberX","numberY","number","fontSize","y","GrooveOptions","groove","Groove","grooveIndent","grooveWidth","vector","size","strokeWidth","EdgeOptions","handleChange","lta","rta","rba","lba","newValue","edge","edgeMin","edgeMax","Edge","length","lx","ly","rx","getCount","o","listS","SHEET_WIDTH","SHEET_LENGHT","SHEET_FILLING_AREA","S","listCount","detailsCount","values","detail","lists","details","Summary","options","summaryOut","summary","SHEET_NAME","SHEET_DEPTH","SHEET_PRICE","materialImageUrl","window","importOptions","SHEET_PICTURE_URL","SummItem","title","id","style","backgroundImage","summ","MoreOrderDetails","open","onClick","final","sm","lg","angle","billing","billingOptions","edgeSide","edgeSize","edgeSM","EDGE_MULTIPLICATOR","abs","PRICE_EDGE_04","edgeLG","PRICE_EDGE_02","edgeSumm","PRICE_EDGING","material","work","PRICE_SHEET_CUTTING","angles","PRICE_CURVATURE","finalLoops","PRICE_LOOP","finalGrooves","PRICE_GROOVE","pack","inbox","finalSumm","faster","poddon","Checkout","setRequest","preventDefault","json","createRequestData","data","svgs","url","REQUEST_URL","formData","FormData","append","JSON","stringify","fetch","method","body","then","res","console","log","heandleChange","checked","setOrderDataFunc","onSubmit","required","username","placeholder","userphone","useremail","usercomment","billingaddress","toOrderFunc","form","order","Date","toString","ind","forEach","row","CopyDetail","prev","next","App","stage","Map","inputType","activeDetail","addNewDetailFunc","newDetail","detailKey","getTime","fromCheckout","field","inputOnChange","angleTitle","obj","get","clearReserve","item","handleSetDetailSize","loopChange","loopSide","grooveChange","edgeChange","changeDetailOptions","action","create","forceUpdate","textureRotate","confirm","delete","toCheckoutFunc","saveSVG","toOrder","svgsDOM","document","querySelectorAll","el","arr","outerHTML","hasDetails","rel","href","FormControls","isDisabled","saveSVGfunc","list","loopF","grooveF","edgeF","f","ff","DetailsList","setSizeF","activeKey","dkey","Detail","handleSetSize","classList","add","remove","handleSetTitle","data-key","data-action","DetailPlan","angleName","AngleOptions","active","send","event","breakPoint","break","handleTypeChange","handleInputActive","maxX","maxY","input","closedAngle","reserveL","reserveT","reserveR","reserveB","motive","data-active","data-break","correctSize","minWidth","maxWidth","minHeight","maxHeight","ltA","angleControlDotLT","rtA","angleControlDotRT","rbA","angleControlDotRB","lbA","angleControlDotLB","bgVector","xmlns","version","viewBox","patternUnits","preserveAspectRatio","patternTransform","DetailPlanImage","strokeLinejoin","opacity","transform","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.9be3ad3a.chunk.js","sourcesContent":["import React from 'react';\r\nimport '../App.css';\r\n\r\n// ============================================ LOOPS\r\nclass LoopsOptions extends React.Component{\r\n    state = {\r\n      side: 'none',\r\n      count: 2,\r\n      before: 100,\r\n      after: 500,\r\n      minSpace: 50,\r\n      error: false,\r\n    }\r\n  \r\n    handleInputChange = (e) => {\r\n      let fieldName = e.target.name; // Поле формы\r\n      let value = e.target.value; // Значение формы\r\n      let key = e.target.closest('.detail').dataset.key; // Ключ детали\r\n      let steps = this.state.count - 1; // желаемое кол-во отрезков между первой и последней деталью\r\n      let step = Math.round((this.state.after-this.state.before)/steps, 1); // размер одного отрезка\r\n    //  Не позволяем добавлять больше петель, \r\n    //  чем это возможно при сохранении минимального расстояния между центрами петель,\r\n    //  обозначенного как minSpace, не путать с indent(отступ петли от края детали)\r\n      if(step >= this.state.minSpace){\r\n        this.setState({\r\n          [fieldName]: value,\r\n          error: false\r\n        }, () => {\r\n          this.props.func(this.state, key); // отправлем данные в Арр\r\n        })\r\n        \r\n      }\r\n      else{\r\n        this.setState({\r\n          [fieldName]: value,\r\n          error: true\r\n        });\r\n        \r\n      }\r\n    }\r\n\r\n    isFree = (r,A1,A2) => {\r\n        if(r === 'groove' || A1 || A2){\r\n            return true;\r\n        }\r\n        if(!r) return false;\r\n    }\r\n  \r\n    render(){\r\n        let {side,before,after,minSpace} = this.state;\r\n        let set = this.props.set;\r\n        let beforeMin = +minSpace*2;\r\n        let beforeMax = after - minSpace*2;\r\n        let afterMax = side === 'top' || side === 'bot' ? set.nominalwidth - minSpace*2 : set.nominalheight - minSpace*2;\r\n        let afterMin = +minSpace*2 + +before;\r\n        let countMax = Math.round((after-before)/minSpace) + 1;\r\n        let LTangle = +set.lt.x === 0 ? false : true;\r\n        let RTangle = +set.rt.x === 0 ? false : true;\r\n        let RBangle = +set.rb.x === 0 ? false : true;\r\n        let LBangle = +set.lb.x === 0 ? false : true;\r\n        let r = set.reserve;\r\n        let resL = this.isFree(r.left,LTangle,LBangle);\r\n        let resT = this.isFree(r.top,LTangle,RTangle);\r\n        let resR = this.isFree(r.right,RTangle,RBangle);\r\n        let resB = this.isFree(r.bot,RBangle,LBangle);\r\n        \r\n        if(set.nominalwidth < 150)\r\n            resT = resB = true;\r\n        if(set.nominalheight < 150)\r\n            resL = resR = true;\r\n\r\n        if(r.left==='groove' || r.top==='groove' || r.right==='groove' || r.bot==='groove'){\r\n            return(\r\n                <span className=\"fons12 red\">Петли несовместимы с пазами</span>\r\n            )\r\n        }\r\n        if(resL && resT && resR && resB){\r\n            return(\r\n                <span className=\"fons12 red\">Нет вариантов</span>\r\n            )\r\n        }\r\n\r\n        return(\r\n            <>\r\n            <label className=\"flex-center\">\r\n                <span>Сторона</span>\r\n                <select onChange={this.handleInputChange} name=\"side\" defaultValue=\"none\" value={set.loops.side}>\r\n                    <option key=\"loopnone\" value=\"none\">Нет</option>\r\n                    <option key=\"loopleft\" value=\"left\"  disabled={resL}>Слева{resL && ' (занято)'}</option>\r\n                    <option key=\"looptop\" value=\"top\"   disabled={resT}>Сверху{resT && ' (занято)'}</option>\r\n                    <option key=\"loopright\" value=\"right\" disabled={resR}>Справа{resR && ' (занято)'}</option>\r\n                    <option key=\"loopbot\" value=\"bot\"   disabled={resB}>Снизу{resB && ' (занято)'}</option>\r\n                </select>\r\n            </label>\r\n            <label className=\"flex-center ml-a\"><span className=\"fons12\">От верхнего/нижнего края отступ отверстий {beforeMin}мм.</span></label>\r\n            <div className=\"w100p\"></div>\r\n\r\n            {this.state.side !== 'none' &&\r\n            <>\r\n            <label className=\"flex-center\">\r\n                <span>До&nbsp;первой <br/>петли, мм</span>\r\n                <input \r\n                    onChange={this.handleInputChange} \r\n                    name=\"before\" \r\n                    type=\"number\"\r\n                    min={beforeMin}\r\n                    max={beforeMax}\r\n                    step=\"1\" \r\n                    defaultValue={beforeMin} />\r\n                    <span>max: <b>{beforeMax}</b>&nbsp;мм</span>\r\n            </label>\r\n            <label className=\"flex-center\">\r\n                <span>До&nbsp;последней <br/>петли, мм</span>\r\n                <input \r\n                    onChange={this.handleInputChange} \r\n                    name=\"after\" \r\n                    type=\"number\"\r\n                    min={afterMin}\r\n                    max={afterMax}\r\n                    step=\"1\" \r\n                    defaultValue={afterMax} />\r\n                    <span>max: <b>{afterMax}</b>&nbsp;мм</span>\r\n            </label>\r\n            <label className=\"flex-center\">\r\n                <span>Кол-во, шт</span>\r\n                <input \r\n                    className={this.state.error ? 'error' : ''}\r\n                    onChange={this.handleInputChange} \r\n                    name=\"count\" \r\n                    type=\"number\"\r\n                    min=\"2\"\r\n                    max={countMax}\r\n                    step=\"1\" \r\n                    defaultValue=\"2\" />\r\n            </label>\r\n            </>\r\n            }\r\n            </>\r\n        );\r\n    }\r\n  }\r\n\r\nfunction Loops(props){\r\n    let set = props.set;\r\n    let m = props.m;\r\n    let loops = set.loops;\r\n    let indent = 25;\r\n    let radius = 35/2;\r\n\r\n    if(loops.side === undefined || loops.side === 'none') return('');\r\n  \r\n    let width = set.width;\r\n    let height = set.height;\r\n    let circles = [];\r\n\r\n    if(loops.side === 'left'){\r\n        circles.push(<path key=\"lpath\" d={`M ${m+indent} ${m} v ${height}`} stroke=\"#72aee6\" strokeDasharray=\"10\" fill=\"transparent\"/>);\r\n        circles.push(<Circle key={'lbefore'} side={loops.side} cx={m+indent} cy={+loops.before+m} r={radius} m={m} />);\r\n        circles.push(<Circle key={'lafter'} side={loops.side} cx={m+indent} cy={+loops.after+m} r={radius} m={m} />);\r\n    }\r\n    else if(loops.side === 'top'){\r\n        circles.push(<path key=\"tpath\" d={`M ${m} ${m+indent} h ${width}`} stroke=\"#72aee6\" strokeDasharray=\"10\" fill=\"transparent\"/>);\r\n        circles.push(<Circle key={'tbefore'} side={loops.side} cx={+loops.before+m} cy={m+indent} r={radius} m={m} />);\r\n        circles.push(<Circle key={'tafter'} side={loops.side} cx={+loops.after+m} cy={m+indent} r={radius} m={m} />);\r\n    }\r\n    else if(loops.side === 'right'){\r\n        circles.push(<path key=\"rpath\" d={`M ${m+width-indent} ${m} v ${height}`} stroke=\"#72aee6\" strokeDasharray=\"10\" fill=\"transparent\"/>);\r\n        circles.push(<Circle key={'rbefore'} side={loops.side} cx={m+width-indent} cy={+loops.before+m} r={radius} m={m} />);\r\n        circles.push(<Circle key={'rafter'} side={loops.side} cx={m+width-indent} cy={+loops.after+m} r={radius} m={m} />);\r\n    }\r\n    else if(loops.side === 'bot'){\r\n        circles.push(<path key=\"bpath\" d={`M ${m} ${height+m-indent} h ${width}`} stroke=\"#72aee6\" strokeDasharray=\"10\" fill=\"transparent\"/>);\r\n        circles.push(<Circle key={'bbefore'} side={loops.side} cx={+loops.before+m} cy={height+m-indent} r={radius} m={m} />);\r\n        circles.push(<Circle key={'bafter'} side={loops.side} cx={+loops.after+m} cy={height+m-indent} r={radius} m={m} />);\r\n    }\r\n        \r\n\r\n    if(loops.count > 2){\r\n        let steps = loops.count - 1;\r\n        let step = Math.round((loops.after-loops.before)/steps, 1);\r\n        for(let i = 1; i < steps; i++){\r\n            let circleCX = m+indent;\r\n            let circleCY = +loops.before+(step*i)+m;\r\n            if(loops.side === 'top'){\r\n                circleCY = m+indent;\r\n                circleCX = +loops.before+(step*i)+m;\r\n            }\r\n            else if(loops.side === 'right'){\r\n                circleCX = width+m-indent;\r\n                circleCY = +loops.before+(step*i)+m;\r\n            }\r\n            else if(loops.side === 'bot'){\r\n                circleCY = height+m-indent;\r\n                circleCX = +loops.before+(step*i)+m;\r\n            }\r\n            circles.push(    \r\n                <Circle \r\n                    key={`${circleCX}-${circleCY}-${i}`} \r\n                    cx={circleCX} \r\n                    cy={circleCY} \r\n                    r={radius} \r\n                    width={width} \r\n                    height={height} \r\n                    side={loops.side}\r\n                    m={m} />);\r\n        }\r\n    }  \r\n    return circles;\r\n}\r\n  \r\nfunction Circle(props){\r\n    let side = props.side;\r\n    let line = `M ${props.cx} ${props.cy} h ${props.r + 20}`;\r\n    let numberX = props.cx + 45;\r\n    let numberY = props.cy + 8;\r\n    let number = props.cy-props.m;\r\n    if(side === 'top'){\r\n        line = `M ${props.cx} ${props.cy} v ${props.r + 20}`;\r\n        numberX = props.cx - 23;\r\n        numberY = props.cy + 60;\r\n        number = props.cx - props.m;\r\n    }\r\n    else if(side === 'right'){\r\n        line = `M ${props.cx} ${props.cy} h -${props.r + 20}`;\r\n        numberX = props.cx - 90;\r\n        numberY = props.cy + 10;\r\n        number = props.cy-props.m;\r\n    }\r\n    else if(side === 'bot'){\r\n        line = `M ${props.cx} ${props.cy} v -${props.r + 20}`;\r\n        numberX = props.cx - 20;\r\n        numberY = props.cy - 50;\r\n        number = props.cx - props.m;\r\n    }\r\n    return (\r\n      <>\r\n      <circle cx={props.cx} cy={props.cy} r={props.r} stroke=\"#3b8ecc\" fill=\"#3b8ecc\" />\r\n      <path d={line}  stroke=\"#3b8ecc\" />\r\n      <text fontSize=\"150%\" x={numberX} y={numberY}>{number}</text>\r\n      </>\r\n    );\r\n}\r\n\r\nexport {LoopsOptions, Loops};","import React from 'react';\r\nimport '../App.css';\r\n\r\n// ============================================ GROOVE\r\nclass GrooveOptions extends React.Component{\r\n\r\n    handleInputChange = (e) => {\r\n        let fieldName = e.target.name; // Поле формы\r\n        let value = e.target.value; // Значение формы\r\n        let key = e.target.closest('.detail').dataset.key; // Ключ детали\r\n\r\n        this.setState({\r\n            [fieldName]: value,\r\n            error: false\r\n          }, () => {\r\n            this.props.func(this.state.side, key); // отправлем данные в Арр\r\n          }\r\n        )\r\n    }\r\n\r\n    isFree = (r,A1,A2) => {\r\n        if(r === 'loops' || A1 || A2){\r\n            return true;\r\n        }\r\n        if(!r) return false;\r\n    }\r\n\r\n    render(){\r\n        let set = this.props.set;\r\n        let LTangle = +set.lt.x === 0 ? false : true;\r\n        let RTangle = +set.rt.x === 0 ? false : true;\r\n        let RBangle = +set.rb.x === 0 ? false : true;\r\n        let LBangle = +set.lb.x === 0 ? false : true;\r\n        let r = set.reserve;\r\n        let resL = this.isFree(r.left,LTangle,LBangle);\r\n        let resT = this.isFree(r.top,LTangle,RTangle);\r\n        let resR = this.isFree(r.right,RTangle,RBangle);\r\n        let resB = this.isFree(r.bot,RBangle,LBangle);\r\n\r\n        if(r.left==='loops' || r.top==='loops' || r.right==='loops' || r.bot==='loops'){\r\n            return(\r\n                <span className=\"fons12 red\">Пазы несовместимы с петлями</span>\r\n            )\r\n        }\r\n\r\n        if(resL && resT && resR && resB){\r\n            return(\r\n                <span className=\"fons12 red\">Нет вариантов</span>\r\n            )\r\n        }\r\n\r\n        return(\r\n            <div className=\"flex-nowrap flex-center\">\r\n                <label className=\"flex-column\">\r\n                    <span>Сторона</span>\r\n                    <select onChange={this.handleInputChange} name=\"side\" value={set.groove}>\r\n                        <option value=\"none\">Нет</option>\r\n                        <option value=\"left\"  disabled={resL}>Слева{resL && ' (занято)'}</option>\r\n                        <option value=\"top\"   disabled={resT}>Сверху{resT && ' (занято)'}</option>\r\n                        <option value=\"right\" disabled={resR}>Справа{resR && ' (занято)'}</option>\r\n                        <option value=\"bot\"   disabled={resB}>Снизу{resB && ' (занято)'}</option>\r\n                    </select>\r\n                </label>\r\n                <span className=\"fons12\">\r\n                    <b>Параметры паза: </b>\r\n                    глубина 8 мм,\r\n                    ширина 4 мм,\r\n                    расстояние от края 16 мм (20 мм вместе с пазом)\r\n                </span>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport {GrooveOptions};\r\n\r\nfunction Groove(props){\r\n    let set = props.set;\r\n    let m = props.m;\r\n    let side = set.groove;\r\n    \r\n    if(!side) return('');\r\n    \r\n    let indent = set.grooveIndent;\r\n    let width = set.grooveWidth;\r\n    let x = m;\r\n    let y = m;\r\n    let vector = side === 'left' || side === 'right' ? 'v' : 'h';\r\n    let size = vector === 'h' ? set.width : set.height;\r\n    \r\n    if(side === 'left')\r\n        x = m + indent; size = size*-1;\r\n    if(side === 'top')\r\n        y = m + indent;\r\n    if(side === 'right')\r\n        x = m + +set.width - indent;\r\n    if(side === 'bot')\r\n        y = +set.height + m - indent; size = size*-1;\r\n\r\n    return <path d={`M ${x} ${y} ${vector} ${size}`} stroke=\"green\" strokeWidth={width} fill=\"transparent\"/>\r\n}\r\nexport {Groove};","import React from 'react';\r\nimport '../App.css';\r\n\r\n// ============================================ GROOVE\r\nclass EdgeOptions extends React.Component{\r\n\r\n    state = {\r\n        left: '0.0', top: '0.0', right: '0.0', bot: '0.0',\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        let set   = this.props.set;\r\n        let lta = set.lt.x > 0 ? true : false;\r\n        let rta = set.rt.x > 0 ? true : false;\r\n        let rba = set.rb.x > 0 ? true : false;\r\n        let lba = set.lb.x > 0 ? true : false;\r\n\r\n        let fieldName = e.target.name; // Поле формы\r\n        let value = e.target.value; // Значение формы\r\n        let key = e.target.closest('.detail').dataset.key; // Ключ детали\r\n        let newValue = {[fieldName]: value}\r\n\r\n        if(fieldName === 'left' && lta)\r\n            newValue.top = value;\r\n        else if(fieldName === 'left' && lba)\r\n            newValue.bot = value;\r\n        else if(fieldName === 'top' && lta)\r\n            newValue.left = value;\r\n        else if(fieldName === 'top' && rta)\r\n            newValue.right = value;\r\n        else if(fieldName === 'right' && rta)\r\n            newValue.top = value;\r\n        else if(fieldName === 'right' && rba)\r\n            newValue.bot = value;\r\n        else if(fieldName === 'bot' && rba)\r\n            newValue.right = value;\r\n        else if(fieldName === 'bot' && lba)\r\n            newValue.left = value;\r\n\r\n        this.setState( newValue, () => {\r\n            this.props.func(this.state, key); // отправлем данные в Арр\r\n          }\r\n        )\r\n    }\r\n\r\n    render(){\r\n        let set   = this.props.set;\r\n        let left  = set.edge.left;\r\n        let top   = set.edge.top;\r\n        let right = set.edge.right;\r\n        let bot   = set.edge.bot;\r\n        let min   = set.edgeMin;\r\n        let max = set.edgeMax;\r\n        return(\r\n            <>\r\n            <label className=\"flex-column\">\r\n                <span>Слева</span>\r\n                <select onChange={this.handleChange} name=\"left\" value={left}>\r\n                    <option value=\"0.0\">0.0</option>\r\n                    <option value={min}>{min}</option>\r\n                    <option value={max}>{max}</option>\r\n                </select>\r\n            </label>\r\n            <label className=\"flex-column\">\r\n                <span>Сверху</span>\r\n                <select onChange={this.handleChange} name=\"top\" value={top}>\r\n                    <option value=\"0.0\">0.0</option>\r\n                    <option value={min}>{min}</option>\r\n                    <option value={max}>{max}</option>\r\n                </select>\r\n            </label>\r\n            <label className=\"flex-column\">\r\n                <span>Справа</span>\r\n                <select onChange={this.handleChange} name=\"right\" value={right}>\r\n                    <option value=\"0.0\">0.0</option>\r\n                    <option value={min}>{min}</option>\r\n                    <option value={max}>{max}</option>\r\n                </select>\r\n            </label>\r\n            <label className=\"flex-column\">\r\n                <span>Снизу</span>\r\n                <select onChange={this.handleChange} name=\"bot\" value={bot}>\r\n                    <option value=\"0.0\">0.0</option>\r\n                    <option value={min}>{min}</option>\r\n                    <option value={max}>{max}</option>\r\n                </select>\r\n            </label>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport {EdgeOptions};\r\n\r\nfunction Edge(props){\r\n    let {set,m} = props;\r\n    let length = 100;\r\n    let lx = m - 10;\r\n    let ly = m + set.height + 10;\r\n    let rx = m + set.width + 10;\r\n    return(\r\n        <>\r\n        <path d={`M ${lx} ${ly} v -${length}`} stroke=\"brown\" strokeDasharray=\"15,10\" strokeWidth=\"3\" fill=\"transparent\" />\r\n        <text fontSize=\"150%\" x={lx-45} y={ly-25} fill=\"brown\">{set.edge.left}</text>\r\n        <path d={`M ${lx} ${ly} h ${length}`} stroke=\"brown\" strokeDasharray=\"15,10\" strokeWidth=\"3\" fill=\"transparent\" />\r\n        <text fontSize=\"150%\" x={lx+30} y={ly+25} fill=\"brown\">{set.edge.bot}</text>\r\n\r\n        <path d={`M ${rx} ${lx} v ${length}`} stroke=\"brown\" strokeDasharray=\"15,10\" strokeWidth=\"3\" fill=\"transparent\" />\r\n        <text fontSize=\"150%\" x={rx-60} y={lx-10} fill=\"brown\">{set.edge.top}</text>\r\n        <path d={`M ${rx} ${lx} h -${length}`} stroke=\"brown\" strokeDasharray=\"15,10\" strokeWidth=\"3\" fill=\"transparent\" />\r\n        <text fontSize=\"150%\" x={rx+5} y={lx+50} fill=\"brown\">{set.edge.right}</text>\r\n        </>\r\n    );\r\n}\r\nexport {Edge};","import React from 'react';\r\nimport '../App.css';\r\n\r\nfunction getCount(set,o){\r\n    let listS = o.SHEET_WIDTH*o.SHEET_LENGHT*o.SHEET_FILLING_AREA;\r\n    let S = 0;\r\n    let listCount = set.size > 0 ? 1 : 0;\r\n    let detailsCount = 0;\r\n    for (let detail of set.values()) {\r\n        let width = detail.nominalwidth;\r\n        let height = detail.nominalheight;\r\n        detailsCount += detail.count;\r\n        S += width*height*detail.count; // Считаем площадь детали по чистым размерам\r\n        S > listS*listCount && listCount++;\r\n    }\r\n    return {\r\n        lists: listCount,\r\n        details: detailsCount\r\n    };\r\n}\r\n\r\nfunction Summary(props){\r\n\r\n    let set = props.set.details;\r\n    let o = props.options;\r\n    let summaryOut = [];\r\n    let summary = {\r\n        'Материал': o.SHEET_NAME,\r\n        'Размер': `${o.SHEET_WIDTH}мм x ${o.SHEET_LENGHT}мм x ${o.SHEET_DEPTH}мм`,\r\n        'Листов в раскрое': getCount(set,o).lists,\r\n        'Цена за лист': `${o.SHEET_PRICE} руб.`,\r\n        'Всего деталей': getCount(set,o).details\r\n    }\r\n    let materialImageUrl = 'http://rondo.96min.ru/' + window.importOptions.SHEET_PICTURE_URL;\r\n\r\n    for(let key in summary){\r\n        summaryOut.push(<SummItem key={key} title={key} value={summary[key]} />);\r\n    }\r\n    \r\n    return(\r\n        <div id=\"summary\" style={{backgroundImage:\"url(\" + (materialImageUrl) + \")\"}}>\r\n            {summaryOut}\r\n            <div className=\"summ-item\">\r\n                <span><b>Примерная стоимость:</b></span>\r\n                <span><b>{summ(props.set,o,true)}</b></span>\r\n            </div>\r\n            <MoreOrderDetails set={props.set} o={o} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport {Summary};\r\n\r\nclass MoreOrderDetails extends React.Component{\r\n\r\n    state = {\r\n        open: false,\r\n    }\r\n\r\n    render(){\r\n        if(this.state.open)\r\n            return(\r\n                <div className=\"summ-item more\">\r\n                    <span onClick={() => this.setState({open:false})} className=\"action-link red w100p\"><b>Свернуть</b></span>\r\n                    {summ(this.props.set, this.props.o)}\r\n                </div>\r\n            );\r\n        else\r\n            return(\r\n                <div className=\"summ-item\">\r\n                    <span onClick={() => this.setState({open:true})} className=\"action-link red\"><b>Подробнее о расчёте</b></span>\r\n                </div>\r\n            );\r\n    }\r\n}\r\n\r\nfunction SummItem(props){\r\n\r\n    return(\r\n        <div className=\"summ-item\">\r\n            <span>{props.title}: </span>\r\n            <span>{props.value}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction summ(set,o,final=false){\r\n    let listS = o.SHEET_WIDTH*o.SHEET_LENGHT*o.SHEET_FILLING_AREA;\r\n    let S = 0;\r\n    let listCount = set.size > 0 ? 1 : 0;\r\n    let edge = {sm:0, lg:0}\r\n    let angle = 0;\r\n    let groove = 0;\r\n    let loops = 0;\r\n    let billing = set.billingOptions ? set.billingOptions : false;\r\n    for (let detail of set.details.values()) {\r\n        let width = detail.nominalwidth;\r\n        let height = detail.nominalheight;\r\n        let detailsCount = detail.count;\r\n\r\n        S += width*height*detailsCount; // Считаем площадь детали по чистым размерам\r\n        S > listS*listCount && listCount++; // Если не хватает площади листа, добавляем лист\r\n        \r\n        // Кромление\r\n        for(let edgeSide in detail.edge){ \r\n            let edgeSize = detail.edge[edgeSide];\r\n            if( edgeSize > 0 && edgeSize < 1){\r\n                edgeSide === 'left' || edgeSide === 'right' ? edge.sm += height : edge.sm += width;\r\n            }\r\n            else if(edgeSize > 0 && edgeSize > 1){\r\n                edgeSide === 'left' || edgeSide === 'right' ? edge.lg += height : edge.lg += width;\r\n            }\r\n        }\r\n        // Углы\r\n        if(detail.lt.x > 0 || detail.rt.x > 0 || detail.rb.x > 0 || detail.lb.x > 0)\r\n            angle++;\r\n        // Петли\r\n        if(detail.loops && detail.loops.side !== 'none')\r\n            loops += detail.loops.count;\r\n        // Пазы\r\n        if(detail.groove)\r\n            groove++;\r\n        \r\n    }\r\n    let edgeSM = edge.sm*o.EDGE_MULTIPLICATOR/1000*Math.abs(o.PRICE_EDGE_04);\r\n    let edgeLG = edge.lg*o.EDGE_MULTIPLICATOR/1000*Math.abs(o.PRICE_EDGE_02);\r\n    let edgeSumm = Math.round(edgeSM+edgeLG+((edge.sm+edge.lg)*o.EDGE_MULTIPLICATOR/1000*Math.abs(o.PRICE_EDGING)));\r\n    let material = listCount*o.SHEET_PRICE;\r\n    let work = listCount*o.PRICE_SHEET_CUTTING;\r\n    let angles = angle*Math.abs(o.PRICE_CURVATURE);\r\n    let finalLoops = loops*Math.abs(o.PRICE_LOOP);\r\n    let finalGrooves = groove*Math.abs(o.PRICE_GROOVE);\r\n    let pack = billing && billing.inbox && listCount > 0 ? 200 : 0;\r\n    let finalSumm = material+work+edgeSumm+angles+finalLoops+finalGrooves+pack;\r\n    \r\n    // Billing options\r\n    let billingOptions = [];\r\n    if(billing){\r\n        if(billing.faster)\r\n            billingOptions.push(<tr><td>Срочный распил</td><td>{finalSumm*0.25}</td></tr>);\r\n        if(billing.inbox)\r\n            billingOptions.push(<tr><td>Упаковка</td><td>{200}</td></tr>);\r\n        if(billing.poddon)\r\n            billingOptions.push(<tr><td>На поддон</td><td>{360}</td></tr>);\r\n    }\r\n    \r\n    if(final){        \r\n        if(billing && billing.faster)\r\n            finalSumm *= 1.25;\r\n\r\n        return finalSumm + ' руб.';\r\n    }\r\n    return(\r\n        <table className=\"w100p\">\r\n            <tbody>\r\n                <tr><td>Материал</td><td>{material}</td></tr>\r\n                <tr><td>Рез</td><td>{work}</td></tr>\r\n                <tr><td>Кромление</td><td>{edgeSumm}</td></tr>\r\n                <tr><td>Криволинейность</td><td>{angles}</td></tr>\r\n                <tr><td>Петли</td><td>{finalLoops}</td></tr>\r\n                <tr><td>Пазы</td><td>{finalGrooves}</td></tr>\r\n                {billingOptions}\r\n            </tbody>\r\n        </table>\r\n    );\r\n}","import React from 'react';\r\nimport '../App.css';\r\nimport {Summary} from './summary';\r\n\r\nclass Checkout extends React.Component{\r\n\r\n    state = {}\r\n\r\n    setRequest = (e) => {\r\n        e.preventDefault()\r\n        let json = createRequestData(this.props.data, this.state);\r\n        let svgs = this.props.svgs;\r\n        let url = this.props.data.importOptions.REQUEST_URL;\r\n        let formData = new FormData();\r\n        formData.append('order', json);\r\n        formData.append('svg', JSON.stringify(svgs));\r\n        fetch(url, { method: 'POST', body: formData })\r\n            .then(\r\n                (res) => {\r\n                    console.log(res);\r\n                },\r\n                (error) => {\r\n                    console.log(error);\r\n                }\r\n            )\r\n    }\r\n\r\n    heandleChange = (e) => {\r\n        let target = e.target;\r\n        let fieldName = target.name;\r\n        const value = target.type === 'checkbox' ? target.checked : target.value;\r\n\r\n        this.setState(\r\n            {[fieldName]: value},\r\n            () => {\r\n                if(fieldName === 'faster' || fieldName === 'inbox' || fieldName === 'poddon')\r\n                    this.props.setOrderDataFunc(fieldName, this.state[fieldName]);\r\n            }\r\n        );        \r\n    }\r\n\r\n    render(){\r\n        const data = this.props.data;\r\n        const billing = data.billingOptions;\r\n        return(\r\n            <>\r\n            <Summary set={data} options={data.importOptions} />\r\n            <h4 className=\"tac\">Заполните форму ниже</h4>\r\n            <form onSubmit={this.setRequest} id=\"checkoutForm\">\r\n                <fieldset className=\"flex w100p\">\r\n                    <legend>Ваши данные</legend>\r\n                    <label className=\"\">\r\n                        <input type=\"text\" name=\"username\" required defaultValue={this.state.username} placeholder=\"ФИО\" onChange={this.heandleChange} />\r\n                    </label>\r\n                    <label className=\"\">\r\n                        <input type=\"phone\" name=\"userphone\" required defaultValue={this.state.userphone} placeholder=\"Телефон\" onChange={this.heandleChange} />\r\n                    </label>\r\n                    <label className=\"\">\r\n                        <input type=\"email\" name=\"useremail\" required defaultValue={this.state.useremail} placeholder=\"Ваш email\" onChange={this.heandleChange} />\r\n                    </label>\r\n                    <label className=\"\">\r\n                        <textarea name=\"usercomment\" defaultValue={this.state.usercomment} placeholder=\"Комментарий к заказу\" onChange={this.heandleChange}></textarea>\r\n                    </label>\r\n                </fieldset>\r\n                <fieldset className=\"flex w100p\">\r\n                    <legend>Дополнительно</legend>\r\n                    <label className=\"flex-center\">\r\n                        <span className=\"fons12\">Срочный распил</span>\r\n                        <input type=\"checkbox\" name=\"faster\" checked={billing.faster} onChange={this.heandleChange} />\r\n                    </label>\r\n                    <label className=\"flex-center\">\r\n                        <span className=\"fons12\">Упаковка в плёнку</span>\r\n                        <input type=\"checkbox\" name=\"inbox\" checked={billing.inbox} onChange={this.heandleChange} />\r\n                    </label>\r\n                    <label className=\"flex-center\">\r\n                        <span className=\"fons12\">Упаковка на поддон</span>\r\n                        <input type=\"checkbox\" name=\"poddon\" checked={billing.poddon} onChange={this.heandleChange} />\r\n                    </label>\r\n                </fieldset>\r\n                <fieldset className=\"w100p\">\r\n                    <legend>Доставка</legend>\r\n                    <label>\r\n                        <input type=\"text\" name=\"billingaddress\" defaultValue={this.state.billingaddress} placeholder=\"Адрес доставки\" onChange={this.heandleChange} />\r\n                    </label>\r\n                </fieldset>\r\n            </form>\r\n            <div id=\"calc-form-controlls-wrapper\">\r\n                <button className=\"btn\" onClick={this.props.toOrderFunc}>Назад к списку</button>\r\n                <button className=\"btn\" onClick={this.setRequest}>Создать заказ</button>\r\n            </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport {Checkout};\r\n\r\nfunction createRequestData(data,form){\r\n    let details = data.details;\r\n    let o = data.importOptions;\r\n\r\n    let order = [\r\n        ['ФИО',form.username],\r\n        ['Email',form.useremail],\r\n        ['Телефон',form.userphone],\r\n        ['Комментарий к заказу',form.usercomment],\r\n        ['Материал',o.SHEET_NAME],\r\n        ['Срочный распил',form.faster ? 'да' : '-'],\r\n        ['Упаковка в плёнку',form.inbox ? 'да' : '-'],\r\n        ['Упаковка в поддон',form.poddon ? 'да' : '-'],\r\n        ['Дата создания', new Date().toString()],\r\n        ['#######','#######'],\r\n        ['#######','<b>Список Деталей</b>'],\r\n        ['#','Комментарий','Ширина','Длина','Кол-во','Крома L1','Крома L2','Крома W1','Крома W2','Паз']\r\n    ]\r\n    let ind = 1;\r\n    details.forEach((d,key) => {\r\n        let row = [\r\n            `#${ind} ${key}`,\r\n            d.title,\r\n            d.nominalwidth,\r\n            d.nominalheight,\r\n            d.count,\r\n            d.edge.left,d.edge.right,d.edge.top,d.edge.bot,\r\n            d.groove,    \r\n        ];\r\n        order.push(row);\r\n        ind++;\r\n    })\r\n    return JSON.stringify(order);\r\n}","export default __webpack_public_path__ + \"static/media/calcDetailPlanBG.838f51d4.jpg\";","import React from 'react';\nimport './App.css';\nimport {LoopsOptions, Loops} from './components/loops';\nimport {GrooveOptions, Groove} from './components/groove';\nimport {EdgeOptions, Edge} from './components/edge';\nimport {Summary} from './components/summary';\nimport {Checkout} from './components/checkout';\nimport DetailPlanImage from './calcDetailPlanBG.jpg';\n\nclass CopyDetail{\n  constructor(data){\n    this.detail = {\n      'title': data.title + ' (копия)',\n      'width': data.width,\n      'nominalwidth': data.width,\n      'minWidth': 60,\n      'maxWidth': window.importOptions.SHEET_WIDTH,\n      'height': data.height,\n      'nominalheight': data.height,\n      'minHeight': 60,\n      'maxHeight': window.importOptions.SHEET_LENGHT,\n      'count': 1,\n      'reserve':{\n        'left': data.reserve.left,\n        'top': data.reserve.top,\n        'right': data.reserve.right,\n        'bot': data.reserve.bot\n      },\n      'lt': {title:'Левый верхний' , prev:'lb', next:'rt', x:data.lt.x, y:data.lt.y, type:data.lt.type},\n      'rt': {title:'Правый верхний', prev:'lt', next:'rb', x:data.rt.x, y:data.rt.y, type:data.rt.type},\n      'rb': {title:'Правый нижний' , prev:'rt', next:'lb', x:data.rb.x, y:data.rb.y, type:data.rb.type},\n      'lb': {title:'Левый нижний'  , prev:'rb', next:'lt', x:data.lb.x, y:data.lb.y, type:data.lb.type},\n      'loops': data.loops,\n      'groove': data.groove,\n      'grooveIndent': 16,\n      'grooveWidth': 4,\n      'grooveDeep': 8,\n      'edge': data.edge,\n      'edgeMin': 0.4,\n      'edgeMax': 2.0,\n      'textureRotate': 0,\n      'svg': null,\n    }\n  }\n  create(){\n    return this.detail;\n  }\n}\n\nclass App extends React.Component {\n\n  state = {\n    stage: 'setorder',\n    details: new Map(),\n    importOptions: window.importOptions,\n    inputType: 'number',\n    activeDetail: null,\n    billingOptions: {\n      faster: false,\n      inbox: false,\n      poddon: false,\n    }\n  }\n\n  addNewDetailFunc = (e) => {\n    let newDetail = {\n      'title': \"Деталь #\" + (this.state.details.size + 1),\n      'width': 400,\n      'nominalwidth': 400,\n      'minWidth': 60,\n      'maxWidth': 2040,\n      'height': 600,\n      'nominalheight': 600,\n      'minHeight': 60,\n      'maxHeight': 2770,\n      'count': 1,\n      'reserve':{\n        'left': false,\n        'top': false,\n        'right': false,\n        'bot': false    \n      },\n      'lt': {title:'Левый верхний' , prev:'lb', next:'rt', x:0, y:0, type:'outside'},\n      'rt': {title:'Правый верхний', prev:'lt', next:'rb', x:0, y:0, type:'outside'},\n      'rb': {title:'Правый нижний' , prev:'rt', next:'lb', x:0, y:0, type:'outside'},\n      'lb': {title:'Левый нижний'  , prev:'rb', next:'lt', x:0, y:0, type:'outside'},\n      'loops': false,\n      'groove': false,\n      'grooveIndent': 16,\n      'grooveWidth': 4,\n      'grooveDeep': 8,\n      'edge':{\n        'left': 0.0,\n        'top': 0.0,\n        'right': 0.0,\n        'bot': 0.0    \n      },\n      'edgeMin': 0.4,\n      'edgeMax': 2.0,\n      'textureRotate': 0,\n      'svg': null,\n    }\n    let details = this.state.details;\n    let detailKey = 'D-' + new Date().getTime();\n    let activeDetail = detailKey;\n    details.set(detailKey, newDetail);\n    this.setState({details,activeDetail});\n\n    return detailKey;\n  }\n\n  fromCheckout = (field,value) => {\n    let billingOptions = this.state.billingOptions;\n    billingOptions[field] = value;\n    this.setState({billingOptions});\n  }\n\n  inputOnChange = (angleTitle, obj, detailKey) => {\n    let details = this.state.details;\n    let detail = details.get(detailKey);\n\n    for(let key in obj){\n      detail[angleTitle][key] = obj[key];\n    }\n\n    details.set(detailKey,detail);\n    this.setState({details});\n  }\n\n  clearReserve = (set,item) => {\n    for(let side in set.reserve){\n      if(set.reserve[side] === item)\n        set.reserve[side] = false;\n    }\n    if(item === 'loops')\n      set.loops.side = false;\n    \n    return set;\n  }\n\n  handleSetDetailSize = (detailKey, side, value) => {\n    let details = this.state.details;\n    let detail = details.get(detailKey);\n\n    detail[side] = value;      \n    \n    if(side === 'width' && value > 500){\n      detail[side] = 500;\n    }\n    else if(side === 'width' && value < 150){\n      detail[side] = 150;\n    }\n    else if(side === 'height' && value > 700){\n      detail[side] = 700;\n    }\n    else if(side === 'height' && value < 150){\n      detail[side] = 150;\n    }\n\n    // Сбрасываем петли, если для них нет места\n    if(side === 'width' && value < 150){\n      if(detail.loops){\n        if(detail.loops.side === 'top' || detail.loops.side === 'bot'){\n          detail = this.clearReserve(detail,'loops');\n        }\n      }\n    }\n    if(side === 'height' && value < 150){\n      if(detail.loops){\n        if(detail.loops.side === 'left' || detail.loops.side === 'right'){\n          detail = this.clearReserve(detail,'loops');\n        }\n      }\n    }\n    \n    detail['nominal'+side] = value;\n    details.set(detailKey,detail);\n    this.setState({details});\n  }\n\n  loopChange = (loops, detailKey) => {\n    let details = this.state.details;\n    let detail = details.get(detailKey);\n    let width = detail.width;\n    let height = detail.height;\n\n    // Резервируем сторону детали, если она свободна\n    if(!detail.reserve[loops.side]){\n      for(let loopSide in detail.reserve){\n        if(detail.reserve[loopSide] === 'loops')\n          detail.reserve[loopSide] = false;\n      }\n      if(loops.side !== 'none')\n        detail.reserve[loops.side] = 'loops';\n    }\n    \n    // Здесь пересчитываем расположение последней петли, \n    // если оно дальше границы детали\n    if(loops.side === 'left' || loops.side === 'right'){\n      if(loops.after > height){\n        loops.after = height - 100;\n      }\n    }\n    else{\n      if(loops.after > width){\n        loops.after = width - 100;\n      }\n    }\n    // Перезаписываем объект детали с новыми данными петель\n    detail.loops = loops;\n    details.set(detailKey,detail);\n    this.setState({details});\n  }\n\n  grooveChange = (side, detailKey) => {\n    let details = this.state.details;\n    let detail = details.get(detailKey);\n\n    // Резервируем сторону детали, если она свободна\n    if(!detail.reserve[side] || detail.reserve[side] === 'groove'){\n      this.clearReserve(detail,'groove');\n      if(side !== 'none'){\n        detail.reserve[side] = 'groove';\n        detail.groove = side;\n      }\n      else{\n        detail.groove = false;\n      }\n    }\n\n    details.set(detailKey,detail);\n    this.setState({details});\n  }\n\n  edgeChange = (edge,detailKey) => {\n    let details = this.state.details;\n    let detail = details.get(detailKey);\n    detail.edge = edge;\n    details.set(detailKey,detail);\n    this.setState({details});\n  }\n\n  changeDetailOptions = (e) => {\n    let target = e.target;\n    let activeDetail = target.closest('.detail').dataset.key;\n    let action = target.dataset.action;\n    let details = this.state.details;\n    if(action === 'remove'){\n      let confirm = window.confirm('Удалить деталь? Это действие нельзя отменить.');\n      if(confirm){\n        details.delete(activeDetail);\n        this.setState({details});\n      }\n      return;\n    }\n    if(action === 'copy'){\n      let d = new CopyDetail(details.get(activeDetail));\n      let newDetail = d.create();\n      let detailKey = 'D-' + new Date().getTime();\n      activeDetail = detailKey;\n      details.set(detailKey, newDetail);\n      this.setState({details,activeDetail}, this.forceUpdate());\n    }\n    if(action === 'close'){\n      this.setState({activeDetail: null});\n      return;\n    }\n    if(action === 'rotate'){\n      let detail = details.get(activeDetail);\n      let width = detail.width;\n      let nominalwidth = detail.nominalwidth;\n      let height = detail.height;\n      let nominalheight = detail.nominalheight;\n      detail.textureRotate = detail.textureRotate > 0 ? 0 : 90;\n      detail.width = height;\n      detail.nominalwidth = nominalheight;\n      detail.height = width;\n      detail.nominalheight = nominalwidth;\n      details.set(activeDetail,detail);\n      this.setState({details});\n      return;\n    }\n    this.setState({activeDetail});\n  }\n\n  toCheckoutFunc = () => {\n    this.saveSVG();\n    this.setState({stage: 'checkout'});\n  }\n  toOrder = () => {\n    this.setState({stage: 'setorder'});\n  }\n\n  saveSVG = () => {\n    let svgsDOM = document.querySelectorAll('svg');\n    let svgs = {};\n    svgsDOM.forEach((el,ind,arr) => {\n      let key = el.id;\n      svgs[key] = arr[ind].outerHTML;\n    })\n    this.svgs = svgs;\n  }\n  \n  render(){\n    let stage = this.state.stage === 'checkout' ? true : false;\n    let hasDetails = this.state.details.size > 0 ? false: true;\n    \n    if(stage)\n      return(\n      <>\n      <Checkout \n        data={this.state} \n        toOrderFunc={this.toOrder} \n        svgs={this.svgs} \n        setOrderDataFunc={this.fromCheckout} />\n      <div className=\"copyright\">\n        Приложение разработано в интернет-агентстве <a rel=\"noreferrer\" target=\"_blank\" href=\"https://alpha-max.ru\">Альфамакс</a>\n      </div>\n      </>\n      )\n\n    return (\n      <>\n      <Summary set={this.state} options={this.state.importOptions} />\n      {this.state.details.size > 2 && \n      <FormControls isDisabled={hasDetails} addNewDetailFunc={this.addNewDetailFunc} toCheckoutFunc={this.toCheckoutFunc} />}\n      <DetailsList\n        activeDetail={this.state.activeDetail} \n        changeDetailOptions={this.changeDetailOptions}\n        saveSVGfunc = {this.saveSVG}\n        list={this.state.details}\n        loopF={this.loopChange} \n        grooveF={this.grooveChange} \n        edgeF={this.edgeChange}\n        f={this.inputOnChange} \n        ff={this.handleSetDetailSize} />\n      <FormControls isDisabled={hasDetails} addNewDetailFunc={this.addNewDetailFunc} toCheckoutFunc={this.toCheckoutFunc} />\n      <div className=\"copyright\">\n        Приложение разработано в интернет-агентстве <a rel=\"noreferrer\" target=\"_blank\" href=\"https://alpha-max.ru\">Альфамакс</a>\n      </div>\n      </>\n    );\n  }\n}\nexport default App;\n\nclass DetailsList extends React.Component{\n  state = {}\n\n  render(){\n    let list = [];\n    let set = this.props.f;\n    let setSizeF = this.props.ff;\n    let loopF = this.props.loopF;\n    let grooveF = this.props.grooveF;\n    let edgeF = this.props.edgeF;\n    let activeKey = this.props.activeDetail;\n    let saveSVG = this.props.saveSVGfunc;\n    let changeDetailOptions = this.props.changeDetailOptions;\n    this.props.list.forEach(function(value,key) {\n      list.push( <Detail \n        activeKey={activeKey === key ? 1 : 0}\n        changeDetailOptions={changeDetailOptions}\n        saveSVGfunc={saveSVG}\n        ff={setSizeF} \n        f={set} \n        loopF={loopF} \n        grooveF={grooveF}\n        edgeF={edgeF} \n        key={key} \n        dkey={key} \n        value={value} /> );\n    });\n    return(\n      <>\n      <h2>Список деталей</h2>\n      {list.length > 0 ? list : 'Список пуст'}\n      </>\n    );\n  }\n}\n\nclass Detail extends React.Component{\n  state = {}\n\n  handleSetSize = (e) => {\n    let fieldName = e.target.name;\n    let min = e.target.min;\n    let max = e.target.max;\n    let value = +e.target.value;\n    let key = this.props.dkey;\n\n    if(value < min || value > max)\n      e.target.classList.add('error')\n      if(value > max){\n        value = max;\n        e.target.classList.remove('error')\n      }\n    else\n      e.target.classList.remove('error')\n\n    this.props.ff(key,fieldName,value);\n  }\n  handleSetTitle = (e) => {\n    let fieldName = e.target.name;\n    let value = e.target.value;\n    let key = this.props.dkey;\n\n    this.props.ff(key,fieldName,value);\n  }\n\n  render(){\n    let set = this.props.value;\n    let o = window.importOptions;\n    if(this.props.activeKey === 0){\n      return(\n        <div className=\"detail not-active\" data-key={this.props.dkey}>\n          <div className=\"detail-settings w100p\">\n            <div className=\"flex-nowrap\">\n              <fieldset id=\"detail-size\" className=\"flex\">\n                <legend>Размеры</legend>\n                <label className=\"w100p\">\n                  <input onChange={this.handleSetTitle} type=\"text\" name=\"title\" placeholder=\"Комментарий\" value={set.title} />\n                </label>\n                <label className=\"flex-column\">\n                  <span>Ширина, мм</span>\n                  <input onChange={this.handleSetSize} type=\"number\" name=\"width\" min=\"60\" max={o.SHEET_WIDTH} value={set.nominalwidth} />\n                </label>\n                <label className=\"flex-column\">\n                  <span>Длина, мм</span>\n                  <input onChange={this.handleSetSize} type=\"number\" name=\"height\" min=\"60\" max={o.SHEET_LENGHT} value={set.nominalheight} />\n                </label>\n                <label className=\"flex-column\">\n                  <span>Кол-во, шт</span>\n                  <input onChange={this.handleSetSize} type=\"number\" name=\"count\" min=\"1\" max=\"1000\" value={set.count} />\n                </label>\n              </fieldset>\n              <fieldset className=\"detail-ext-options\">\n                <legend>Опции</legend>\n                <button data-action=\"change\" onClick={this.props.changeDetailOptions} className=\"btn\">Редактировать</button>\n                <button data-action=\"copy\" onClick={this.props.changeDetailOptions} className=\"btn\">Копировать</button>\n              </fieldset>\n            </div>\n          </div>\n          <div className=\"detail-plan\">\n            <DetailPlan id={this.props.dkey} set={this.props.value} saveSVGfunc={this.props.saveSVGfunc} />\n            <button className=\"remove-detail-btn\" data-action=\"remove\" onClick={this.props.changeDetailOptions} title=\"Удалить деталь\"></button>\n          </div>\n        </div>\n      )\n    }\n    return(\n      <div className=\"detail active\" data-key={this.props.dkey}>\n        <div className=\"detail-settings w100p\">\n          <div className=\"flex-nowrap\">\n            <fieldset id=\"detail-size\" className=\"flex\">\n              <legend>Размеры</legend>\n              <label className=\"w100p\">\n                <input onChange={this.handleSetSize} type=\"text\" name=\"title\" placeholder=\"Комментарий\" value={set.title} />\n              </label>\n              <label className=\"flex-column\">\n                <span>Ширина, мм</span>\n                <input onChange={this.handleSetSize} type=\"number\" name=\"width\" min=\"60\" max={o.SHEET_WIDTH} value={set.nominalwidth} />\n              </label>\n              <label className=\"flex-column\">\n                <span>Длина, мм</span>\n                <input onChange={this.handleSetSize} type=\"number\" name=\"height\" min=\"60\" max={o.SHEET_LENGHT} value={set.nominalheight} />\n              </label>\n              <label className=\"flex-column\">\n                <span>Кол-во, шт</span>\n                <input onChange={this.handleSetSize} type=\"number\" name=\"count\"  min=\"1\" max=\"1000\" value={set.count} />\n              </label>\n            </fieldset>\n\n            <fieldset id=\"edge\" className=\"flex\">\n              <legend>Кромка</legend>\n              <EdgeOptions func={this.props.edgeF} set={this.props.value} />\n            </fieldset>\n            \n            <div className=\"detail-ext-options\">\n              <button data-action=\"close\" onClick={this.props.changeDetailOptions} className=\"btn\">Свернуть</button>\n              <button data-action=\"copy\" onClick={this.props.changeDetailOptions} className=\"btn\">Копировать</button>\n              <button data-action=\"rotate\" onClick={this.props.changeDetailOptions} className=\"btn\">Повернуть текстуру</button>\n            </div>\n          </div>\n\n          <fieldset id=\"angles\" className=\"w100p\">\n            <legend>Углы</legend>\n            <AngleOptions angleName='lt' func={this.props.f} set={this.props.value} />\n            <AngleOptions angleName='rt' func={this.props.f} set={this.props.value} />\n            <AngleOptions angleName='rb' func={this.props.f} set={this.props.value} />\n            <AngleOptions angleName='lb' func={this.props.f} set={this.props.value} />\n          </fieldset>\n\n          <fieldset id=\"loops\" className={set.loops && set.loops.side !== 'none' ? 'flex w100p' : 'flex w50p'}>\n            <legend>Петли</legend>\n            <LoopsOptions func={this.props.loopF} set={this.props.value} />\n          </fieldset>\n\n          <fieldset id=\"groove\" className=\"flex w50p\">\n            <legend>Паз</legend>\n            <GrooveOptions func={this.props.grooveF} set={this.props.value} />\n          </fieldset>\n\n        </div>\n        <div className=\"detail-plan\">\n          <DetailPlan id={this.props.dkey} set={this.props.value} />\n          <button className=\"remove-detail-btn\" data-action=\"remove\" onClick={this.props.changeDetailOptions} title=\"Удалить деталь\"></button>\n        </div>\n      </div>\n    )\n  }\n}\n\nclass AngleOptions extends React.Component{\n  state = {\n    active: false,\n    type: 'outside',\n    send: true,\n    x: 30,\n    y: 30,\n  }\n\n  handleInputChange = (event) => {\n    const target = event.target;\n    const value = target.type === 'checkbox' ? target.checked : Math.abs(target.value);\n    const name = target.name;\n\n    if(target.type === 'number' && this.state.send){\n      const breakPoint = target.dataset.break;\n      this.setState({\n        x: value <= breakPoint ? value : breakPoint,\n        y: value,\n      })\n    }\n    else{\n      this.setState({\n        [name]: value\n      });\n    }\n    \n    this.props.func(\n      this.props.angleName,\n      { // Отправляем данные угла назад\n        x:this.state.x,\n        y:this.state.y,\n        type:this.state.type,\n        title:this.props.set[this.props.angleName].title,\n        next:this.props.set[this.props.angleName].next,\n        prev:this.props.set[this.props.angleName].prev\n      },\n      target.closest('.detail').dataset.key\n    );\n  }\n\n  handleTypeChange = (e) => {\n    let type = e.target.name;\n    this.setState(function(state, props){\n      this.props.func( // Отправляем данные угла назад\n        props.angleName,\n        {\n          x:state.x,\n          y:state.y,\n          type:type,\n          title:props.set[props.angleName].title,\n          next:props.set[props.angleName].next,\n          prev:props.set[props.angleName].prev,\n        },\n        e.target.closest('.detail').dataset.key\n      );\n      return {type: type};\n    });\n  }\n\n  handleInputActive = (e) => {\n    const value = e.target.checked;\n    this.setState({\n      active: value\n    })\n    this.props.func(\n      this.props.angleName,\n      { // Отправляем данные угла назад\n        x: value ? this.state.x : 0,\n        y: value ? this.state.y : 0,\n        type:this.state.type,\n        title:this.props.set[this.props.angleName].title,\n        next:this.props.set[this.props.angleName].next,\n        prev:this.props.set[this.props.angleName].prev\n      },\n      e.target.closest('.detail').dataset.key\n    );\n  }\n\n  render(){\n    let set = this.props.set;\n    let next = set[set[this.props.angleName].next];\n    let prev = set[set[this.props.angleName].prev];\n    let maxX = 101;\n    let maxY = 101;\n    \n    if(this.props.angleName === 'lt'){\n      maxY = +set.width - next.y;\n      maxX = +set.height - prev.x;\n    }\n    else if(this.props.angleName === 'rt'){\n      maxY = +set.width - prev.y;\n      maxX = +set.height - next.x;\n    }\n    else if(this.props.angleName === 'rb'){\n      maxY = +set.width - next.y;\n      maxX = +set.height - prev.x;\n    }\n    else{\n      maxY = +set.width - prev.y;\n      maxX = +set.height - next.x;\n    }\n\n    let input = <span><input onChange={this.handleInputActive} type=\"checkbox\" name=\"active\" checked={this.state.active} /></span>;\n    // Если сторона зарезервирована\n    let closedAngle = [];\n    let reserveL = set.reserve.left;\n    let reserveT = set.reserve.top;\n    let reserveR = set.reserve.right;\n    let reserveB = set.reserve.bot;\n    let motive = '';\n    if( reserveL === 'loops' || reserveL === 'groove'){\n      closedAngle = ['lb','lt'];\n      reserveL === \"loops\" ? motive = 'петлями' : motive = 'пазом';\n    }\n    else if(reserveT === 'loops' || reserveT === 'groove'){\n      closedAngle = ['lt','rt'];\n      reserveT === \"loops\" ? motive = 'петлями' : motive = 'пазом';\n    }\n    else if(reserveR === 'loops' || reserveR === 'groove'){\n      closedAngle = ['rt','rb'];\n      reserveR === \"loops\" ? motive = 'петлями' : motive = 'пазом';\n    }\n    else if(reserveB === 'loops' || reserveB === 'groove'){\n      closedAngle = ['rb','lb'];\n      reserveB === \"loops\" ? motive = 'петлями' : motive = 'пазом';\n    }\n\n    closedAngle.forEach((el)=>{\n      if(this.props.angleName === el)\n        input = <span className=\"reserve-notice red\">Сторона занята {motive}</span>;\n    })\n\n    // Закрытое положение\n    if(!this.state.active){\n      return(\n        <div className=\"angle-options-wrapper\">\n          <div className=\"angle-options-type w100p\">\n            <label className=\"angle-title-wrapper\">\n              <span className={`angle-title ${this.props.angleName}`}>{set[this.props.angleName].title}</span>\n              {input}\n            </label>\n          </div>\n        </div>\n      )\n    }\n    // Открытое положение\n    return(\n      <div className={`angle-options-wrapper ${this.state.active && 'active'}`}>\n        <div className=\"angle-options-type w100p\">\n          <label className=\"angle-title-wrapper\">\n            <span className={`angle-title ${this.props.angleName}`}>{set[this.props.angleName].title}</span>\n            <span><input onChange={this.handleInputActive} type=\"checkbox\" name=\"active\" checked={this.state.active} /> вкл.</span>\n          </label>\n          <button onClick={this.handleTypeChange} name=\"outside\" className=\"angle-type__outside ml-a\" data-active={this.state.type === 'outside' && 'active' }>Наружный</button>\n          <button onClick={this.handleTypeChange} name=\"linear\" className=\"angle-type__linear\" data-active={this.state.type === 'linear' && 'active' }>Прямой</button>\n          <button onClick={this.handleTypeChange} name=\"inside\" className=\"angle-type__inside\" data-active={this.state.type === 'inside' && 'active' }>Внутренний</button>\n        </div>\n        <label className=\"\">\n          X <input \n              onChange={this.handleInputChange} \n              type=\"number\" \n              name=\"y\" \n              min=\"30\" \n              max={maxY} \n              data-break={maxX} \n              step=\"1\" \n              value={this.state.y} />\n            <span>max: <b>{maxY}</b>&nbsp;мм</span>\n        </label>\n        <label className=\"switch\">\n          <span>Объединить<br />показатели</span>\n          <input \n            onChange={this.handleInputChange} \n            name=\"send\" \n            type=\"checkbox\" \n            checked={this.state.send} />\n        </label>\n        <label className=\"\">\n          Y <input \n              onChange={this.handleInputChange} \n              type=\"number\" \n              name=\"x\" \n              min=\"30\" \n              max={maxX} \n              step=\"1\" \n              value={this.state.x} \n              disabled={this.state.send} />\n            <span>max: <b>{maxX}</b>&nbsp;мм</span>\n        </label>\n      </div>\n    );\n  }\n}\n\nfunction correctSize(side,min,max){\n  let m = Math.abs(side);\n  if(m < min)\n    return min;\n  else if(m > max)\n    return max;\n  else\n    return m;\n}\n\nfunction DetailPlan(props){\n  let set = props.set;\n  // Раздаём значения\n  let {width,nominalwidth,minWidth,maxWidth,height,nominalheight,minHeight,maxHeight,lt,rt,lb,rb} = set;\n  let m = 70;\n\n  width = correctSize(width,minWidth,maxWidth);\n  height = correctSize(height,minHeight,maxHeight);\n\n  // Пробуем сохранить пропорции\n  if(nominalwidth >= 500)\n    height = set.height = Math.round(500/((Math.round(nominalwidth/nominalheight*10,-1)/10)));\n  if(height < 200)\n    height = set.height = 200;\n  \n  let ltA   = `M ${m} ${(Math.abs(lt.x) + m)} Q ${angleControlDotLT(m,lt)} ${(Math.abs(lt.y) + m)} ${m}`;\n  let top   = ` L ${(width-rt.y + m)} ${m}`;\n  let rtA   = ` Q ${angleControlDotRT(m,rt,set)} ${width+m} ${+rt.x + m}`;\n  let right = ` L ${(width + m)} ${(height - rb.x + m)}`;\n  let rbA   = ` Q ${angleControlDotRB(m,rb,set)} ${(width - rb.y + m)} ${(height + m)}`;\n  let bot   = ` L ${(+lb.y+m)} ${(height + m)}`;\n  let lbA   = ` Q ${angleControlDotLB(m,lb,set)} ${m} ${height-lb.x+m}`;\n\n  let bgWidth = 1169;\n  let bgHeight = 900;\n  let bgVector = set.textureRotate;\n\n  let svg = \n    <svg id={props.id} xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" viewBox={\"0 0 \" + (width+m*2) +' '+ (height+m*2)}>\n      {/* ФОН */}\n      <defs>\n        <pattern \n          id={`bg-${props.id}`} \n          patternUnits=\"userSpaceOnUse\" \n          preserveAspectRatio=\"none\" \n          patternTransform={`rotate(${bgVector}, ${width/2}, ${height/2})`}\n          width={bgWidth}\n          height={bgHeight}>\n          <image \n            href={DetailPlanImage} \n            x={0} y={0} \n            width={bgWidth} \n            height={bgHeight} />\n        </pattern>\n      </defs>\n      {/* Деталь */}\n      <path d={ltA + top + rtA + right + rbA + bot + lbA + ' z'} stroke=\"#333333\" strokeWidth=\"3\" strokeLinejoin=\"miter\" fill={`url(#bg-${props.id})`} opacity=\"0.7\"/>\n      {/* Размеры углов */}\n      <path d={`M ${m} ${Math.abs(lt.x) + m} h ${lt.y} v -${lt.x}`}        stroke=\"red\" strokeDasharray=\"10\" fill=\"transparent\"/>\n      <path d={`M ${width+m} ${Math.abs(rt.x) + m} h -${rt.y} v -${rt.x}`} stroke=\"red\" strokeDasharray=\"10\" fill=\"transparent\"/>\n      <path d={`M ${width+m} ${height - rb.x + m} h -${rb.y} v ${rb.x}`}   stroke=\"red\" strokeDasharray=\"10\" fill=\"transparent\"/>\n      <path d={`M ${m} ${height - lb.x + m} h ${+lb.y} v ${+lb.x}`}        stroke=\"red\" strokeDasharray=\"10\" fill=\"transparent\"/>\n      {/* Размер детали */}\n      <text fontSize=\"150%\" x={(m+width)/2} y={20}>{nominalwidth}мм</text>\n      <text fontSize=\"150%\" transform={`rotate(-90,${20},${(m+height)/2})`} x={m/2-50} y={(m+height)/2}>{nominalheight}мм</text>\n      {/* Петли */} <Loops set={set} m={m} />\n      {/* Паз */} <Groove set={set} m={m} />\n      {/* Кромка */} <Edge set={set} m={m} />\n    </svg>;\n  return svg;\n}\nexport {DetailPlan};\n\nfunction angleControlDotLT(m,angle){\n  if(angle.type === 'outside')\n    return `${m} ${m}`;\n  else if(angle.type === 'linear')\n    return `${angle.x/2 + m} ${angle.y/2 + m}`;\n  else if(angle.type === 'inside')\n    return `${+angle.x + m} ${+angle.y + m}`;\n}\nfunction angleControlDotRT(m,angle,set){\n  if(angle.type === 'outside')\n    return `${(+set.width + m)} ${m}`;\n  else if(angle.type === 'linear')\n    return `${+set.width - angle.y/2 + m} ${angle.x/2 + m}`;\n  else if(angle.type === 'inside')\n    return `${+set.width - angle.y + m} ${+angle.x + m}`;\n}\nfunction angleControlDotRB(m,angle,set){\n  if(angle.type === 'outside')\n    return `${(+set.width + m)} ${+set.height + m}`;\n  else if(angle.type === 'linear')\n    return `${+set.width - angle.y/2 + m} ${+set.height - angle.x/2 + m}`;\n  else if(angle.type === 'inside')\n    return `${+set.width - angle.y + m} ${+set.height - angle.x + m}`;\n}\nfunction angleControlDotLB(m,angle,set){\n  if(angle.type === 'outside')\n    return `${m} ${+set.height + m}`;\n  else if(angle.type === 'linear')\n    return `${+angle.y/2 + m} ${+set.height - angle.x/2 + m}`;\n  else if(angle.type === 'inside')\n    return `${+angle.y + m} ${+set.height - angle.x + m}`;\n}\n\nfunction FormControls(props){\n  return(\n    <div id=\"calc-form-controlls-wrapper\">\n      <button className=\"btn\" onClick={props.addNewDetailFunc}>Добавить деталь</button>\n      <button className=\"btn\" disabled={props.isDisabled} onClick={props.toCheckoutFunc}>Перейти к оформлению</button>\n    </div>\n  );\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}