{"version":3,"sources":["components/loops.js","components/groove.js","components/edge.js","components/summary.js","components/checkout.js","App.js","helper.js","reportWebVitals.js","index.js"],"names":["LoopsOptions","state","side","count","before","after","minSpace","error","handleInputChange","e","fieldName","target","name","value","key","closest","dataset","steps","step","Math","round","type","min","max","console","log","setState","props","func","isFree","r","A1","A2","this","set","beforeMin","beforeMax","afterMax","nominalwidth","nominalheight","afterMin","countMax","LTangle","lt","x","RTangle","rt","RBangle","rb","LBangle","lb","reserve","resL","left","resT","top","resR","right","resB","bot","className","onChange","defaultValue","loops","disabled","onInput","toString","React","Component","Loops","m","indent","radius","undefined","width","height","circles","push","d","stroke","strokeDasharray","fill","Circle","cx","cy","i","circleCX","circleCY","line","numberX","numberY","number","fontSize","y","GrooveOptions","groove","Groove","grooveIndent","grooveWidth","vector","size","strokeWidth","EdgeOptions","handleChange","lta","rta","rba","lba","newValue","edge","edgeMin","edgeMax","Edge","length","ly","rx","color","transform","getCount","o","listS","SHEET_WIDTH","SHEET_LENGHT","SHEET_FILLING_AREA","S","listCount","detailsCount","values","detail","lists","floor","details","Summary","options","summaryOut","summary","SHEET_NAME","SHEET_DEPTH","SHEET_PRICE","materialImageUrl","window","importOptions","SHEET_PICTURE_URL","SummItem","title","id","style","backgroundImage","summ","MoreOrderDetails","open","onClick","final","sm","lg","angle","billing","billingOptions","edgeSide","edgeSize","edgeSM","EDGE_MULTIPLICATOR","abs","PRICE_EDGE_04","edgeLG","PRICE_EDGE_02","edgeSumm","PRICE_EDGING","material","work","PRICE_SHEET_CUTTING","angles","PRICE_CURVATURE","finalLoops","PRICE_LOOP","finalGrooves","PRICE_GROOVE","pack","inbox","finalSumm","faster","poddon","price","toFixed","replace","Checkout","mess","setRequest","preventDefault","username","useremail","userphone","json","createRequestData","data","svgs","url","REQUEST_URL","formData","FormData","append","JSON","stringify","MAILTO","fetch","method","body","then","res","heandleChange","checked","setOrderDataFunc","message","onSubmit","required","placeholder","usercomment","billingaddress","toOrderFunc","form","date","Date","space","order","formatDate","SHEET_COLOR","ind","forEach","textureRotate","edgeL1","edgeL2","edgeW1","edgeW2","row","createComment","comment","dd","getDate","mm","getMonth","yy","getFullYear","help","CopyDetail","prev","next","App","stage","Map","inputType","activeDetail","addNewDetailFunc","newDetail","detailKey","getTime","fromCheckout","field","inputOnChange","angleTitle","obj","get","clearReserve","item","handleSetDetailSize","loopChange","loopSide","grooveChange","edgeChange","changeDetailOptions","action","create","forceUpdate","confirm","delete","toCheckoutFunc","saveSVG","toOrder","svgsDOM","document","querySelectorAll","el","arr","outerHTML","hasDetails","rel","href","FormControls","isDisabled","saveSVGfunc","list","loopF","grooveF","edgeF","f","ff","DetailsList","setSizeF","activeKey","dkey","Detail","handleSetSize","classList","add","remove","handleSetTitle","data-key","pattern","maxLength","data-action","DetailPlan","prepareNumber","angleName","AngleOptions","active","send","event","breakPoint","break","backToApp","handleTypeChange","handleInputActive","maxX","maxY","input","closedAngle","reserveL","reserveT","reserveR","reserveB","motive","data-active","data-break","correctSize","minWidth","maxWidth","minHeight","maxHeight","ltA","angleControlDotLT","rtA","angleControlDotRT","rbA","angleControlDotRB","lbA","angleControlDotLB","bgVector","xmlns","version","viewBox","patternUnits","preserveAspectRatio","patternTransform","TEXTURE_IMAGE_URL","opacity","strokeLinejoin","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"yNAIMA,E,4MACFC,MAAQ,CACNC,KAAM,OACNC,MAAO,EACPC,OAAQ,IACRC,MAAO,IACPC,SAAU,GACVC,OAAO,G,EAGTC,kBAAoB,SAACC,GACnB,IAe+B,EAS3B,EAxBAC,EAAYD,EAAEE,OAAOC,KACrBC,EAAQJ,EAAEE,OAAOE,MACjBC,EAAML,EAAEE,OAAOI,QAAQ,WAAWC,QAAQF,IAC1CG,EAAQ,EAAKhB,MAAME,MAAQ,EAC3Be,EAAOC,KAAKC,OAAO,EAAKnB,MAAMI,MAAM,EAAKJ,MAAMG,QAAQa,EAAO,GAElE,GAAqB,WAAlBR,EAAEE,OAAOU,KAAkB,CACdZ,EAAEE,OAAOW,IAArB,IACMC,EAAMd,EAAEE,OAAOY,KACjBV,GAASU,IAAKV,EAAQU,GAC1BC,QAAQC,IAAIZ,EAAMU,GAKnBL,GAAQ,EAAKjB,MAAMK,SACpB,EAAKoB,UAAL,mBACGhB,EAAYG,GADf,uBAES,GAFT,IAGG,WACD,EAAKc,MAAMC,KAAK,EAAK3B,MAAOa,MAK9B,EAAKY,UAAL,mBACGhB,EAAYG,GADf,uBAES,GAFT,K,EAQJgB,OAAS,SAACC,EAAEC,EAAGC,GACX,QAAS,WAANF,IAAkBC,IAAMC,MAGvBF,QAAJ,G,4CAGJ,WAAS,IAAD,EAC+BG,KAAKhC,MAAnCC,EADD,EACCA,KAAKE,EADN,EACMA,OAAOC,EADb,EACaA,MAAMC,EADnB,EACmBA,SACnB4B,EAAMD,KAAKN,MAAMO,IACjBC,EAAsB,GAAT7B,EACb8B,EAAY/B,EAAiB,EAATC,EACpB+B,EAAoB,QAATnC,GAA2B,QAATA,EAAiBgC,EAAII,aAAwB,EAAThC,EAAa4B,EAAIK,cAAyB,EAATjC,EAClGkC,EAAqB,GAATlC,IAAcF,EAC1BqC,EAAWtB,KAAKC,OAAOf,EAAMD,GAAQE,GAAY,EACjDoC,EAAwB,KAAbR,EAAIS,GAAGC,EAClBC,EAAwB,KAAbX,EAAIY,GAAGF,EAClBG,EAAwB,KAAbb,EAAIc,GAAGJ,EAClBK,EAAwB,KAAbf,EAAIgB,GAAGN,EAClBd,EAAII,EAAIiB,QACRC,EAAOnB,KAAKJ,OAAOC,EAAEuB,KAAKX,EAAQO,GAClCK,EAAOrB,KAAKJ,OAAOC,EAAEyB,IAAIb,EAAQG,GACjCW,EAAOvB,KAAKJ,OAAOC,EAAE2B,MAAMZ,EAAQE,GACnCW,EAAOzB,KAAKJ,OAAOC,EAAE6B,IAAIZ,EAAQE,GAOrC,OALGf,EAAII,aAAe,MAClBgB,EAAOI,GAAO,GACfxB,EAAIK,cAAgB,MACnBa,EAAOI,GAAO,GAEN,WAAT1B,EAAEuB,MAA2B,WAARvB,EAAEyB,KAA4B,WAAVzB,EAAE2B,OAA4B,WAAR3B,EAAE6B,IAE5D,sBAAMC,UAAU,aAAhB,iKAGLR,GAAQE,GAAQE,GAAQE,EAEnB,sBAAME,UAAU,aAAhB,uFAKJ,qCACA,wBAAOA,UAAU,cAAjB,UACI,8EACA,yBAAQC,SAAU5B,KAAKzB,kBAAmBI,KAAK,OAAOkD,aAAa,OAAOjD,MAAOqB,EAAI6B,MAAM7D,KAA3F,UACI,wBAAuBW,MAAM,OAA7B,+BAAY,YACZ,yBAAuBA,MAAM,OAAQmD,SAAUZ,EAA/C,2CAA2DA,GAAQ,4CAAvD,YACZ,yBAAsBvC,MAAM,MAAQmD,SAAUV,EAA9C,iDAA2DA,GAAQ,4CAAvD,WACZ,yBAAwBzC,MAAM,QAAQmD,SAAUR,EAAhD,iDAA6DA,GAAQ,4CAAzD,aACZ,yBAAsB3C,MAAM,MAAQmD,SAAUN,EAA9C,2CAA0DA,GAAQ,4CAAtD,iBAGpB,uBAAOE,UAAU,mBAAjB,SAAoC,uBAAMA,UAAU,SAAhB,2OAAoEzB,EAApE,qBACpC,qBAAKyB,UAAU,UAEM,SAApB3B,KAAKhC,MAAMC,MACZ,qCACA,wBAAO0D,UAAU,cAAjB,UACI,yFAAqB,uBAArB,kDACA,uBACIK,QAAShC,KAAKzB,kBACdI,KAAK,SACLS,KAAK,SACLC,IAAKa,EACLZ,IAAKa,EACLlB,KAAK,IACLL,MAAOoB,KAAKhC,MAAMG,OAAO8D,aACzB,yCAAW,4BAAI9B,IAAf,yBAER,wBAAOwB,UAAU,cAAjB,UACI,2GAAwB,uBAAxB,kDACA,uBACIK,QAAShC,KAAKzB,kBACdI,KAAK,QACLS,KAAK,SACLC,IAAKkB,EACLjB,IAAKc,EACLnB,KAAK,IACLL,MAAOoB,KAAKhC,MAAMI,MAAM6D,aACxB,yCAAW,4BAAI7B,IAAf,yBAER,wBAAOuB,UAAU,cAAjB,UACI,iFACA,uBACIA,UAAW3B,KAAKhC,MAAMM,MAAQ,QAAU,GACxC0D,QAAShC,KAAKzB,kBACdI,KAAK,QACLS,KAAK,SACLC,IAAI,IACJC,IAAKkB,EACLvB,KAAK,IACL4C,aAAa,mB,GAxINK,IAAMC,WAiJjC,SAASC,EAAM1C,GACX,IAAIO,EAAMP,EAAMO,IACZoC,EAAI3C,EAAM2C,EACVP,EAAQ7B,EAAI6B,MACZQ,EAAS,GACTC,EAAS,KAEb,QAAkBC,IAAfV,EAAM7D,MAAqC,SAAf6D,EAAM7D,KAAiB,MAAO,GAE7D,IAAIwE,EAAQxC,EAAIwC,MACZC,EAASzC,EAAIyC,OACbC,EAAU,GAwBd,GAtBkB,SAAfb,EAAM7D,MACL0E,EAAQC,KAAK,sBAAkBC,EAAC,YAAOR,EAAEC,EAAT,YAAmBD,EAAnB,cAA0BK,GAAUI,OAAO,UAAUC,gBAAgB,KAAKC,KAAK,eAAxF,UACvBL,EAAQC,KAAK,cAACK,EAAD,CAAwBhF,KAAM6D,EAAM7D,KAAMiF,GAAIb,EAAEC,EAAQa,IAAKrB,EAAM3D,OAAOkE,EAAGxC,EAAG0C,EAAQF,EAAGA,GAA9E,YAC1BM,EAAQC,KAAK,cAACK,EAAD,CAAuBhF,KAAM6D,EAAM7D,KAAMiF,GAAIb,EAAEC,EAAQa,IAAKrB,EAAM1D,MAAMiE,EAAGxC,EAAG0C,EAAQF,EAAGA,GAA5E,YAEP,QAAfP,EAAM7D,MACV0E,EAAQC,KAAK,sBAAkBC,EAAC,YAAOR,EAAP,YAAYA,EAAEC,EAAd,cAA0BG,GAASK,OAAO,UAAUC,gBAAgB,KAAKC,KAAK,eAAvF,UACvBL,EAAQC,KAAK,cAACK,EAAD,CAAwBhF,KAAM6D,EAAM7D,KAAMiF,IAAKpB,EAAM3D,OAAOkE,EAAGc,GAAId,EAAEC,EAAQzC,EAAG0C,EAAQF,EAAGA,GAA9E,YAC1BM,EAAQC,KAAK,cAACK,EAAD,CAAuBhF,KAAM6D,EAAM7D,KAAMiF,IAAKpB,EAAM1D,MAAMiE,EAAGc,GAAId,EAAEC,EAAQzC,EAAG0C,EAAQF,EAAGA,GAA5E,YAEP,UAAfP,EAAM7D,MACV0E,EAAQC,KAAK,sBAAkBC,EAAC,YAAOR,EAAEI,EAAMH,EAAf,YAAyBD,EAAzB,cAAgCK,GAAUI,OAAO,UAAUC,gBAAgB,KAAKC,KAAK,eAA9F,UACvBL,EAAQC,KAAK,cAACK,EAAD,CAAwBhF,KAAM6D,EAAM7D,KAAMiF,GAAIb,EAAEI,EAAMH,EAAQa,IAAKrB,EAAM3D,OAAOkE,EAAGxC,EAAG0C,EAAQF,EAAGA,GAApF,YAC1BM,EAAQC,KAAK,cAACK,EAAD,CAAuBhF,KAAM6D,EAAM7D,KAAMiF,GAAIb,EAAEI,EAAMH,EAAQa,IAAKrB,EAAM1D,MAAMiE,EAAGxC,EAAG0C,EAAQF,EAAGA,GAAlF,YAEP,QAAfP,EAAM7D,OACV0E,EAAQC,KAAK,sBAAkBC,EAAC,YAAOR,EAAP,YAAYK,EAAOL,EAAEC,EAArB,cAAiCG,GAASK,OAAO,UAAUC,gBAAgB,KAAKC,KAAK,eAA9F,UACvBL,EAAQC,KAAK,cAACK,EAAD,CAAwBhF,KAAM6D,EAAM7D,KAAMiF,IAAKpB,EAAM3D,OAAOkE,EAAGc,GAAIT,EAAOL,EAAEC,EAAQzC,EAAG0C,EAAQF,EAAGA,GAArF,YAC1BM,EAAQC,KAAK,cAACK,EAAD,CAAuBhF,KAAM6D,EAAM7D,KAAMiF,IAAKpB,EAAM1D,MAAMiE,EAAGc,GAAIT,EAAOL,EAAEC,EAAQzC,EAAG0C,EAAQF,EAAGA,GAAnF,YAI3BP,EAAM5D,MAAQ,EAGb,IAFA,IAAIc,EAAQ8C,EAAM5D,MAAQ,EACtBe,EAAOC,KAAKC,OAAO2C,EAAM1D,MAAM0D,EAAM3D,QAAQa,EAAO,GAChDoE,EAAI,EAAGA,EAAIpE,EAAOoE,IAAI,CAC1B,IAAIC,EAAWhB,EAAEC,EACbgB,GAAYxB,EAAM3D,OAAQc,EAAKmE,EAAGf,EACpB,QAAfP,EAAM7D,MACLqF,EAAWjB,EAAEC,EACbe,GAAYvB,EAAM3D,OAAQc,EAAKmE,EAAGf,GAEf,UAAfP,EAAM7D,MACVoF,EAAWZ,EAAMJ,EAAEC,EACnBgB,GAAYxB,EAAM3D,OAAQc,EAAKmE,EAAGf,GAEf,QAAfP,EAAM7D,OACVqF,EAAWZ,EAAOL,EAAEC,EACpBe,GAAYvB,EAAM3D,OAAQc,EAAKmE,EAAGf,GAEtCM,EAAQC,KACJ,cAACK,EAAD,CAEIC,GAAIG,EACJF,GAAIG,EACJzD,EAAG0C,EACHE,MAAOA,EACPC,OAAQA,EACRzE,KAAM6D,EAAM7D,KACZoE,EAAGA,GARP,UACYgB,EADZ,YACwBC,EADxB,YACoCF,KAUhD,OAAOT,EAGX,SAASM,EAAOvD,GACZ,IAAIzB,EAAOyB,EAAMzB,KACbsF,EAAI,YAAQ7D,EAAMwD,GAAd,YAAoBxD,EAAMyD,GAA1B,cAAkCzD,EAAMG,EAAI,IAChD2D,EAAU9D,EAAMwD,GAAK,GACrBO,EAAU/D,EAAMyD,GAAK,EACrBO,EAAShE,EAAMyD,GAAGzD,EAAM2C,EAmB5B,MAlBY,QAATpE,GACCsF,EAAI,YAAQ7D,EAAMwD,GAAd,YAAoBxD,EAAMyD,GAA1B,cAAkCzD,EAAMG,EAAI,IAChD2D,EAAU9D,EAAMwD,GAAK,GACrBO,EAAU/D,EAAMyD,GAAK,GACrBO,EAAShE,EAAMwD,GAAKxD,EAAM2C,GAEb,UAATpE,GACJsF,EAAI,YAAQ7D,EAAMwD,GAAd,YAAoBxD,EAAMyD,GAA1B,eAAmCzD,EAAMG,EAAI,IACjD2D,EAAU9D,EAAMwD,GAAK,GACrBO,EAAU/D,EAAMyD,GAAK,GACrBO,EAAShE,EAAMyD,GAAGzD,EAAM2C,GAEX,QAATpE,IACJsF,EAAI,YAAQ7D,EAAMwD,GAAd,YAAoBxD,EAAMyD,GAA1B,eAAmCzD,EAAMG,EAAI,IACjD2D,EAAU9D,EAAMwD,GAAK,GACrBO,EAAU/D,EAAMyD,GAAK,GACrBO,EAAShE,EAAMwD,GAAKxD,EAAM2C,GAG5B,qCACA,wBAAQa,GAAIxD,EAAMwD,GAAIC,GAAIzD,EAAMyD,GAAItD,EAAGH,EAAMG,EAAGiD,OAAO,UAAUE,KAAK,YACtE,sBAAMH,EAAGU,EAAOT,OAAO,YACvB,sBAAMa,SAAS,OAAOhD,EAAG6C,EAASI,EAAGH,EAArC,SAA+CC,O,ICjP/CG,E,4MAEFtF,kBAAoB,SAACC,GAAO,IAAD,EACnBC,EAAYD,EAAEE,OAAOC,KACrBC,EAAQJ,EAAEE,OAAOE,MACjBC,EAAML,EAAEE,OAAOI,QAAQ,WAAWC,QAAQF,IAE9C,EAAKY,UAAL,mBACKhB,EAAYG,GADjB,uBAEW,GAFX,IAGK,WACD,EAAKc,MAAMC,KAAK,EAAK3B,MAAMC,KAAMY,O,EAKzCe,OAAS,SAACC,EAAEC,EAAGC,GACX,QAAS,UAANF,IAAiBC,IAAMC,MAGtBF,QAAJ,G,4CAGJ,WACI,IAAII,EAAMD,KAAKN,MAAMO,IACjBQ,EAAwB,KAAbR,EAAIS,GAAGC,EAClBC,EAAwB,KAAbX,EAAIY,GAAGF,EAClBG,EAAwB,KAAbb,EAAIc,GAAGJ,EAClBK,EAAwB,KAAbf,EAAIgB,GAAGN,EAClBd,EAAII,EAAIiB,QACRC,EAAOnB,KAAKJ,OAAOC,EAAEuB,KAAKX,EAAQO,GAClCK,EAAOrB,KAAKJ,OAAOC,EAAEyB,IAAIb,EAAQG,GACjCW,EAAOvB,KAAKJ,OAAOC,EAAE2B,MAAMZ,EAAQE,GACnCW,EAAOzB,KAAKJ,OAAOC,EAAE6B,IAAIZ,EAAQE,GAErC,MAAY,UAATnB,EAAEuB,MAA0B,UAARvB,EAAEyB,KAA2B,UAAVzB,EAAE2B,OAA2B,UAAR3B,EAAE6B,IAEzD,sBAAMC,UAAU,aAAhB,iKAILR,GAAQE,GAAQE,GAAQE,EAEnB,sBAAME,UAAU,aAAhB,uFAKJ,sBAAKA,UAAU,0BAAf,UACI,wBAAOA,UAAU,cAAjB,UACI,8EACA,yBAAQC,SAAU5B,KAAKzB,kBAAmBI,KAAK,OAAOC,MAAOqB,EAAI6D,OAAjE,UACI,wBAAQlF,MAAM,OAAd,gCACA,yBAAQA,MAAM,OAAQmD,SAAUZ,EAAhC,2CAA4CA,GAAQ,6CACpD,yBAAQvC,MAAM,MAAQmD,SAAUV,EAAhC,iDAA6CA,GAAQ,6CACrD,yBAAQzC,MAAM,QAAQmD,SAAUR,EAAhC,iDAA6CA,GAAQ,6CACrD,yBAAQ3C,MAAM,MAAQmD,SAAUN,EAAhC,2CAA4CA,GAAQ,mDAG5D,uBAAME,UAAU,SAAhB,UACI,kHADJ,4U,GA3DYO,IAAMC,WAwElC,SAAS4B,EAAOrE,GACZ,IAAIO,EAAMP,EAAMO,IACZoC,EAAI3C,EAAM2C,EACVpE,EAAOgC,EAAI6D,OAEf,IAAI7F,EAAM,MAAO,GAEjB,IAAIqE,EAASrC,EAAI+D,aACbvB,EAAQxC,EAAIgE,YACZtD,EAAI0B,EACJuB,EAAIvB,EACJ6B,EAAkB,SAATjG,GAA4B,UAATA,EAAmB,IAAM,IACrDkG,EAAkB,MAAXD,EAAiBjE,EAAIwC,MAAQxC,EAAIyC,OAW5C,MATY,SAATzE,IACC0C,EAAI0B,EAAIC,GAAQ6B,IAAa,EACrB,QAATlG,IACC2F,EAAIvB,EAAIC,GACA,UAATrE,IACC0C,EAAI0B,IAAKpC,EAAIwC,MAAQH,GACb,QAATrE,IACC2F,GAAK3D,EAAIyC,OAASL,EAAIC,GAAQ6B,IAAa,EAExC,sBAAMtB,EAAC,YAAOlC,EAAP,YAAYiD,EAAZ,YAAiBM,EAAjB,YAA2BC,GAAQrB,OAAO,QAAQsB,YAAa3B,EAAOO,KAAK,gB,IC/FvFqB,E,4MAEFrG,MAAQ,CACJoD,KAAM,MAAOE,IAAK,MAAOE,MAAO,MAAOE,IAAK,O,EAGhD4C,aAAe,SAAC9F,GACZ,IAAIyB,EAAQ,EAAKP,MAAMO,IACnBsE,EAAMtE,EAAIS,GAAGC,EAAI,EACjB6D,EAAMvE,EAAIY,GAAGF,EAAI,EACjB8D,EAAMxE,EAAIc,GAAGJ,EAAI,EACjB+D,EAAMzE,EAAIgB,GAAGN,EAAI,EAEjBlC,EAAYD,EAAEE,OAAOC,KACrBC,EAAQJ,EAAEE,OAAOE,MACjBC,EAAML,EAAEE,OAAOI,QAAQ,WAAWC,QAAQF,IAC1C8F,EAAQ,eAAKlG,EAAYG,GAEZ,SAAdH,GAAwB8F,EACvBI,EAASrD,IAAM1C,EACG,SAAdH,GAAwBiG,EAC5BC,EAASjD,IAAM9C,EACG,QAAdH,GAAuB8F,EAC3BI,EAASvD,KAAOxC,EACE,QAAdH,GAAuB+F,EAC3BG,EAASnD,MAAQ5C,EACC,UAAdH,GAAyB+F,EAC7BG,EAASrD,IAAM1C,EACG,UAAdH,GAAyBgG,EAC7BE,EAASjD,IAAM9C,EACG,QAAdH,GAAuBgG,EAC3BE,EAASnD,MAAQ5C,EACC,QAAdH,GAAuBiG,IAC3BC,EAASvD,KAAOxC,GAEpB,EAAKa,SAAUkF,GAAU,WACrB,EAAKjF,MAAMC,KAAK,EAAK3B,MAAOa,O,4CAKpC,WACI,IAAIoB,EAAQD,KAAKN,MAAMO,IACnBmB,EAAQnB,EAAI2E,KAAKxD,KACjBE,EAAQrB,EAAI2E,KAAKtD,IACjBE,EAAQvB,EAAI2E,KAAKpD,MACjBE,EAAQzB,EAAI2E,KAAKlD,IACjBrC,EAAQY,EAAI4E,QACZvF,EAAMW,EAAI6E,QACd,OACI,qCACA,wBAAOnD,UAAU,cAAjB,UACI,kEACA,yBAAQC,SAAU5B,KAAKsE,aAAc3F,KAAK,OAAOC,MAAOwC,EAAxD,UACI,wBAAQxC,MAAM,MAAd,iBACA,wBAAQA,MAAOS,EAAf,SAAqBA,IACrB,wBAAQT,MAAOU,EAAf,SAAqBA,UAG7B,wBAAOqC,UAAU,cAAjB,UACI,wEACA,yBAAQC,SAAU5B,KAAKsE,aAAc3F,KAAK,MAAMC,MAAO0C,EAAvD,UACI,wBAAQ1C,MAAM,MAAd,iBACA,wBAAQA,MAAOS,EAAf,SAAqBA,IACrB,wBAAQT,MAAOU,EAAf,SAAqBA,UAG7B,wBAAOqC,UAAU,cAAjB,UACI,wEACA,yBAAQC,SAAU5B,KAAKsE,aAAc3F,KAAK,QAAQC,MAAO4C,EAAzD,UACI,wBAAQ5C,MAAM,MAAd,iBACA,wBAAQA,MAAOS,EAAf,SAAqBA,IACrB,wBAAQT,MAAOU,EAAf,SAAqBA,UAG7B,wBAAOqC,UAAU,cAAjB,UACI,kEACA,yBAAQC,SAAU5B,KAAKsE,aAAc3F,KAAK,MAAMC,MAAO8C,EAAvD,UACI,wBAAQ9C,MAAM,MAAd,iBACA,wBAAQA,MAAOS,EAAf,SAAqBA,IACrB,wBAAQT,MAAOU,EAAf,SAAqBA,iB,GAhFf4C,IAAMC,WA0FhC,SAAS4C,EAAKrF,GAAO,IACZO,EAASP,EAATO,IAAIoC,EAAK3C,EAAL2C,EACLI,EAAQxC,EAAIwC,MACZC,EAASzC,EAAIyC,OACbsC,EAAS,IAETC,EAAK5C,EAAIpC,EAAIyC,OAAS,GACtBwC,EAAK7C,EAAIpC,EAAIwC,MAAQ,GACrB0C,EAAQ,QACRxB,EAAW,OACf,OACI,qCACA,sBAAMd,EAAC,YAAOR,EAAE,EAAT,aAAeA,EAAEK,GAAQ,EAAEsC,GAA3B,cAAyCA,GAAUlC,OAAQqC,EAAOpC,gBAAgB,QAAQqB,YAAY,IAAIpB,KAAK,gBACtH,sBAAMW,SAAUA,EAAUhD,EAAG0B,EAAE,GAAIuB,EAAGlB,EAAO,EAAE,GAAI0C,UAAS,qBAAgB/C,EAAE,GAAlB,YAAwBK,EAAO,EAAE,GAAjC,KAAwCM,KAAMmC,EAA1G,SAAkHlF,EAAI2E,KAAKxD,OAC3H,sBAAMyB,EAAC,aAAQJ,EAAMJ,GAAG,EAAjB,YAAsB4C,EAAtB,cAA8BD,GAAUlC,OAAQqC,EAAOpC,gBAAgB,QAAQqB,YAAY,IAAIpB,KAAK,gBAC3G,sBAAMW,SAAUA,EAAUhD,GAAI8B,EAAMJ,GAAG,EAAE,GAAIuB,EAAGlB,EAAOL,EAAE,GAAIW,KAAMmC,EAAnE,SAA2ElF,EAAI2E,KAAKlD,MAEpF,sBAAMmB,EAAC,YAAOqC,EAAP,aAAc7C,EAAEK,GAAQ,EAAxB,cAA+BsC,GAAUlC,OAAQqC,EAAOpC,gBAAgB,QAAQqB,YAAY,IAAIpB,KAAK,gBAC5G,sBAAMW,SAAUA,EAAUhD,EAAGuE,EAAG,GAAItB,GAAIvB,EAAEK,GAAQ,EAAI,GAAI0C,UAAS,qBAAgBF,EAAG,GAAnB,aAA0B7C,EAAEK,GAAQ,EAAI,GAAxC,KAA+CM,KAAMmC,EAAxH,SAAgIlF,EAAI2E,KAAKpD,QACzI,sBAAMqB,EAAC,aAAQR,EAAEI,GAAO,EAAjB,YAAsBJ,EAAE,EAAxB,cAA+B2C,GAAUlC,OAAQqC,EAAOpC,gBAAgB,QAAQqB,YAAY,IAAIpB,KAAK,gBAC5G,sBAAMW,SAAUA,EAAUhD,GAAI0B,EAAEI,GAAO,EAAE,GAAImB,EAAGvB,EAAE,GAAIW,KAAMmC,EAA5D,SAAoElF,EAAI2E,KAAKtD,S,WC/GrF,SAAS+D,EAASpF,EAAIqF,GAClB,IADoB,EAChBC,EAAQD,EAAEE,YAAYF,EAAEG,aAAaH,EAAEI,mBACvCC,EAAI,EACJC,EAAY3F,EAAIkE,KAAO,EAAI,EAAI,EAC/B0B,EAAe,EAJC,cAKD5F,EAAI6F,UALH,IAKpB,2BAAiC,CAAC,IAAzBC,EAAwB,QACzBtD,EAAQsD,EAAO1F,aACfqC,EAASqD,EAAOzF,cACpBuF,GAAgBE,EAAO7H,MACvByH,GAAKlD,EAAMC,EAAOqD,EAAO7H,OATT,8BAcpB,MAAO,CACH8H,MAHJJ,GAAa1G,KAAK+G,MAAMN,EAAEJ,GAItBW,QAASL,GAIjB,SAASM,EAAQzG,GAEb,IAAIO,EAAMP,EAAMO,IAAIiG,QAChBZ,EAAI5F,EAAM0G,QACVC,EAAa,GACbC,EAAU,CACV,mDAAYhB,EAAEiB,WACd,uCAAS,GAAT,OAAajB,EAAEE,YAAf,0BAAkCF,EAAEG,aAApC,0BAAwDH,EAAEkB,YAA1D,gBACA,yFAAoBnB,EAASpF,EAAIqF,GAAGU,MACpC,iEAAe,GAAf,OAAmBV,EAAEmB,YAArB,wBACA,4EAAiBpB,EAASpF,EAAIqF,GAAGY,SAEjCQ,EAAmB,yBAA2BC,OAAOC,cAAcC,kBAEvE,IAAI,IAAIhI,KAAOyH,EACXD,EAAWzD,KAAK,cAACkE,EAAD,CAAoBC,MAAOlI,EAAKD,MAAO0H,EAAQzH,IAAhCA,IAGnC,OACI,sBAAKmI,GAAG,UAAUC,MAAO,CAACC,gBAAgB,OAAUR,EAAoB,KAAxE,UACKL,EACD,sBAAK1E,UAAU,YAAf,UACI,+BAAM,iJACN,+BAAM,4BAAIwF,EAAKzH,EAAMO,IAAIqF,GAAE,UAE/B,cAAC,EAAD,CAAkBrF,IAAKP,EAAMO,IAAKqF,EAAGA,O,IAO3C8B,E,4MAEFpJ,MAAQ,CACJqJ,MAAM,G,4CAGV,WAAS,IAAD,OACJ,OAAGrH,KAAKhC,MAAMqJ,KAEN,sBAAK1F,UAAU,iBAAf,UACI,sBAAM2F,QAAS,kBAAM,EAAK7H,SAAS,CAAC4H,MAAK,KAAS1F,UAAU,wBAA5D,SAAoF,mFACnFwF,EAAKnH,KAAKN,MAAMO,IAAKD,KAAKN,MAAM4F,MAKrC,qBAAK3D,UAAU,YAAf,SACI,sBAAM2F,QAAS,kBAAM,EAAK7H,SAAS,CAAC4H,MAAK,KAAQ1F,UAAU,kBAA3D,SAA6E,iJ,GAjBlEO,IAAMC,WAuBrC,SAAS2E,EAASpH,GAEd,OACI,sBAAKiC,UAAU,YAAf,UACI,iCAAOjC,EAAMqH,MAAb,QACA,+BAAOrH,EAAMd,WAKzB,SAASuI,EAAKlH,EAAIqF,GAAe,IAAD,EAAZiC,EAAY,wDACxBhC,EAAQD,EAAEE,YAAYF,EAAEG,aAAaH,EAAEI,mBACvCC,EAAI,EACJC,EAAY3F,EAAIiG,QAAQ/B,KAAO,EAAI,EAAI,EACvCS,EAAO,CAAC4C,GAAG,EAAGC,GAAG,GACjBC,EAAQ,EACR5D,EAAS,EACThC,EAAQ,EACR6F,IAAU1H,EAAI2H,gBAAiB3H,EAAI2H,eARX,cAST3H,EAAIiG,QAAQJ,UATH,IAS5B,2BAAyC,CAAC,IAAjCC,EAAgC,QACjCtD,EAAQsD,EAAO1F,aACfqC,EAASqD,EAAOzF,cAChBuF,EAAeE,EAAO7H,MAK1B,IAAI,IAAI2J,KAHRlC,GAAKlD,EAAMC,EAAOmD,EAGEE,EAAOnB,KAAK,CAC5B,IAAIkD,EAAW/B,EAAOnB,KAAKiD,GACvBC,EAAW,GAAKA,EAAW,EACmBlD,EAAK4C,IAAtC,SAAbK,GAAoC,UAAbA,EAAkCnF,EAAoBD,EAEzEqF,EAAW,GAAKA,EAAW,IACelD,EAAK6C,IAAtC,SAAbI,GAAoC,UAAbA,EAAkCnF,EAAoBD,IAIlFsD,EAAOrF,GAAGC,EAAI,GAAKoF,EAAOlF,GAAGF,EAAI,GAAKoF,EAAOhF,GAAGJ,EAAI,GAAKoF,EAAO9E,GAAGN,EAAI,IACtE+G,IAED3B,EAAOjE,OAA+B,SAAtBiE,EAAOjE,MAAM7D,OAC5B6D,GAASiE,EAAOjE,MAAM5D,OAEvB6H,EAAOjC,QACNA,KAlCoB,8BAuC5B8B,GAAa1G,KAAK+G,MAAMN,EAAEJ,GAE1B,IAAIwC,EAASnD,EAAK4C,GAAGlC,EAAE0C,mBAAmB,IAAK9I,KAAK+I,IAAI3C,EAAE4C,eACtDC,EAASvD,EAAK6C,GAAGnC,EAAE0C,mBAAmB,IAAK9I,KAAK+I,IAAI3C,EAAE8C,eACtDC,EAAWnJ,KAAKC,MAAM4I,EAAOI,GAASvD,EAAK4C,GAAG5C,EAAK6C,IAAInC,EAAE0C,mBAAmB,IAAK9I,KAAK+I,IAAI3C,EAAEgD,eAC5FC,EAAW3C,EAAUN,EAAEmB,YACvB+B,EAAO5C,EAAUN,EAAEmD,oBACnBC,EAAShB,EAAMxI,KAAK+I,IAAI3C,EAAEqD,iBAC1BC,EAAa9G,EAAM5C,KAAK+I,IAAI3C,EAAEuD,YAC9BC,EAAehF,EAAO5E,KAAK+I,IAAI3C,EAAEyD,cACjCC,EAAOrB,GAAWA,EAAQsB,OAASrD,EAAY,EAAI,IAAM,EACzDsD,EAAYX,EAASC,EAAKH,EAASK,EAAOE,EAAWE,EAAaE,EAGlEpB,EAAiB,GAUrB,OATGD,IACIA,EAAQwB,QACPvB,EAAehF,KAAK,+BAAI,iHAAuB,6BAAe,IAAVsG,QACrDvB,EAAQsB,OACPrB,EAAehF,KAAK,+BAAI,kFAAiB,6BAAK,UAC/C+E,EAAQyB,QACPxB,EAAehF,KAAK,+BAAI,mFAAkB,6BAAK,WAGpD2E,GACII,GAAWA,EAAQwB,SAClBD,GAAa,MAEVG,EAAMH,IAGb,uBAAOvH,UAAU,QAAjB,SACI,kCACI,+BAAI,kFAAiB,6BAAK0H,EAAMd,QAChC,+BAAI,oDAAY,6BAAKc,EAAMb,QAC3B,+BAAI,wFAAkB,6BAAKa,EAAMhB,QACjC,+BAAI,4HAAwB,6BAAKgB,EAAMX,QACvC,+BAAI,gEAAc,6BAAKW,EAAMT,QAC7B,+BAAI,0DAAa,6BAAKS,EAAMP,QAC3BlB,OAMjB,SAASyB,EAAM3F,GACX,OAAQA,EAAQ4F,QAAQ,GAAGC,QAAQ,oBAAqB,OAAU,uB,ICzKhEC,E,4MAEFxL,MAAQ,CACJyL,KAAM,I,EAGVC,WAAa,SAAClL,GAIV,GAHAA,EAAEmL,sBAI0BnH,IAAxB,EAAKxE,MAAM4L,eACiBpH,IAAzB,EAAKxE,MAAM6L,gBACcrH,IAAzB,EAAKxE,MAAM8L,UAHlB,CAQA,IAAIC,EAAOC,EAAkB,EAAKtK,MAAMuK,KAAM,EAAKjM,OAC/CkM,EAAO,EAAKxK,MAAMwK,KAClBC,EAAM,EAAKzK,MAAMuK,KAAKrD,cAAcwD,YACpCC,EAAW,IAAIC,SACnBD,EAASE,OAAO,QAASR,GACzBM,EAASE,OAAO,MAAOC,KAAKC,UAAUP,IACtCG,EAASE,OAAO,SAAU,EAAK7K,MAAMuK,KAAKrD,cAAc8D,QACxD,EAAKjL,SACD,CAACgK,KAAM,6FACP,kBAAMkB,MAAMR,EAAK,CAAES,OAAQ,OAAQC,KAAMR,IACpCS,MACG,SAACC,GACG,EAAKtL,SAAS,CAACgK,KAAM,uHAEzB,SAACnL,GACG,EAAKmB,SAAS,CAACgK,KAAM,kJAAiCnL,eAnB9D,EAAKmB,SAAS,CAACgK,KAAM,8J,EA0BjCuB,cAAgB,SAACxM,GAAO,IAAD,EACfE,EAASF,EAAEE,OACXD,EAAYC,EAAOC,KACjBC,EAAwB,aAAhBF,EAAOU,KAAsBV,EAAOuM,QAAUvM,EAAOE,MAEnE,EAAKa,UAAL,mBACMhB,EAAYG,GADlB,qBAC+B,IAD/B,IAEI,WACqB,WAAdH,GAAwC,UAAdA,GAAuC,WAAdA,GAClD,EAAKiB,MAAMwL,iBAAiBzM,EAAW,EAAKT,MAAMS,Q,4CAKlE,WACI,IAAMwL,EAAOjK,KAAKN,MAAMuK,KAClBtC,EAAUsC,EAAKrC,eACjBuD,EAAUnL,KAAKhC,MAAMyL,KAAO,qBAAKzC,GAAG,UAAR,SAAmBhH,KAAKhC,MAAMyL,OAAc,GAC5E,OACI,qCACA,cAACtD,EAAD,CAASlG,IAAKgK,EAAM7D,QAAS6D,EAAKrD,gBAClC,oBAAIjF,UAAU,MAAd,4HACA,uBAAMyJ,SAAUpL,KAAK0J,WAAY1C,GAAG,eAApC,UACI,2BAAUrF,UAAU,aAApB,UACI,mGACA,uBAAOA,UAAU,iBAAjB,SACI,uBAAOvC,KAAK,OAAOT,KAAK,WAAW0M,UAAQ,EAACxJ,aAAc7B,KAAKhC,MAAM4L,SAAU0B,YAAY,qBAAM1J,SAAU5B,KAAKgL,kBAEpH,uBAAOrJ,UAAU,iBAAjB,SACI,uBAAOvC,KAAK,QAAQT,KAAK,YAAY0M,UAAQ,EAACxJ,aAAc7B,KAAKhC,MAAM8L,UAAWwB,YAAY,6CAAU1J,SAAU5B,KAAKgL,kBAE3H,uBAAOrJ,UAAU,iBAAjB,SACI,uBAAOvC,KAAK,QAAQT,KAAK,YAAY0M,UAAQ,EAACxJ,aAAc7B,KAAKhC,MAAM6L,UAAWyB,YAAY,2BAAY1J,SAAU5B,KAAKgL,kBAE7H,uBAAOrJ,UAAU,GAAjB,SACI,0BAAUhD,KAAK,cAAckD,aAAc7B,KAAKhC,MAAMuN,YAAaD,YAAY,iHAAuB1J,SAAU5B,KAAKgL,qBAG7H,2BAAUrJ,UAAU,aAApB,UACI,oHACA,wBAAOA,UAAU,cAAjB,UACI,sBAAMA,UAAU,SAAhB,6FACA,uBAAOvC,KAAK,WAAWT,KAAK,SAASsM,QAAStD,EAAQwB,OAAQvH,SAAU5B,KAAKgL,mBAEjF,wBAAOrJ,UAAU,cAAjB,UACI,sBAAMA,UAAU,SAAhB,0GACA,uBAAOvC,KAAK,WAAWT,KAAK,QAAQsM,QAAStD,EAAQsB,MAAOrH,SAAU5B,KAAKgL,mBAE/E,wBAAOrJ,UAAU,cAAjB,UACI,sBAAMA,UAAU,SAAhB,gHACA,uBAAOvC,KAAK,WAAWT,KAAK,SAASsM,QAAStD,EAAQyB,OAAQxH,SAAU5B,KAAKgL,sBAGrF,2BAAUrJ,UAAU,QAApB,UACI,sFACA,gCACI,uBAAOvC,KAAK,OAAOT,KAAK,iBAAiBkD,aAAc7B,KAAKhC,MAAMwN,eAAgBF,YAAY,kFAAiB1J,SAAU5B,KAAKgL,wBAI1I,sBAAKhE,GAAG,8BAAR,UACI,wBAAQrF,UAAU,MAAM2F,QAAStH,KAAKN,MAAM+L,YAA5C,wFACA,wBAAQ9J,UAAU,MAAM2F,QAAStH,KAAK0J,WAAtC,0FAEHyB,S,GAxGUjJ,IAAMC,WAgH7B,SAAS6H,EAAkBC,EAAKyB,GAC5B,IAAIxF,EAAU+D,EAAK/D,QACfZ,EAAI2E,EAAKrD,cACT+E,EAAO,IAAIC,KAEXC,EAAQ,GACRC,EAAQ,CACR,CAACD,GACD,CAAC,mDAJO,UAAMH,EAAK9B,SAAX,eAA0B8B,EAAK5B,UAA/B,eAA+C4B,EAAK7B,WAIvCgC,EAAMA,EAAMA,EAAMA,EAAM,2BAAOE,EAAWJ,IAC/D,CAACE,GACD,CAAC,0DAAavG,EAAE0G,YAAYH,EAAM,4EAAgBvG,EAAEkB,aACpD,CAACqF,GACD,CAAC,gEAAcA,EAAM,qEAAcA,GACnC,CAAC,gEAAcA,EAAM,qEAAcA,GACnC,CAAC,gEAAcA,EAAM,qEAAcA,GACnC,CAACA,GACD,CAAC,6CAAU,iCAAQ,uCAAS,kCAAS,oCAAW,oCAAW,oCAAW,oCAAW,qBAAM,uEAGvFI,EAAM,EAkCV,OAjCA/F,EAAQgG,SAAQ,SAACrJ,EAAEhE,GACf,IAAIsN,EAAgBtJ,EAAEsJ,cAClB1J,EAAQI,EAAExC,aACV2E,EAASnC,EAAEvC,cACX8L,EAASvJ,EAAE+B,KAAKxD,KAChBiL,EAASxJ,EAAE+B,KAAKpD,MAChB8K,EAASzJ,EAAE+B,KAAKlD,IAChB6K,EAAS1J,EAAE+B,KAAKtD,IAEC,IAAlB6K,IACC1J,EAAQI,EAAEvC,cACV0E,EAASnC,EAAExC,cAGM,IAAlB8L,IACCC,EAASvJ,EAAE+B,KAAKlD,IAChB2K,EAASxJ,EAAE+B,KAAKtD,IAChBgL,EAASzJ,EAAE+B,KAAKxD,KAChBmL,EAAS1J,EAAE+B,KAAKpD,OAGpB,IAAIgL,EAAM,CAAC,IAAD,OACFP,EADE,YACKpN,GACXmG,EACAvC,EACAI,EAAE3E,MACFkO,EAAOC,EAAOC,EAAOC,EACrB1J,EAAEiB,OACF2I,EAAc5J,EAAE6I,IAEpBI,EAAMlJ,KAAK4J,GACXP,OAEGzB,KAAKC,UAAUqB,GAG1B,SAASW,EAAc5J,EAAE6I,GACrB,IAAIgB,EAAU,GAyBd,OAvBG7J,EAAEnC,GAAGC,EAAI,GAAKkC,EAAEnC,GAAGkD,EAAI,IACtB8I,GAAO,4FAAwB7J,EAAEnC,GAAGC,EAA7B,mBAAoCkC,EAAEnC,GAAGkD,EAAzC,OACRf,EAAEhC,GAAGF,EAAI,GAAKkC,EAAEhC,GAAG+C,EAAI,IACtB8I,GAAO,kGAAyB7J,EAAEhC,GAAGF,EAA9B,mBAAqCkC,EAAEhC,GAAG+C,EAA1C,OACRf,EAAE9B,GAAGJ,EAAI,GAAKkC,EAAE9B,GAAG6C,EAAI,IACtB8I,GAAO,4FAAwB7J,EAAE9B,GAAGJ,EAA7B,mBAAoCkC,EAAE9B,GAAG6C,EAAzC,OACRf,EAAE5B,GAAGN,EAAI,GAAKkC,EAAE5B,GAAG2C,EAAI,IACtB8I,GAAO,sFAAuB7J,EAAE5B,GAAGN,EAA5B,mBAAmCkC,EAAE5B,GAAG2C,EAAxC,OAERf,EAAEf,OAA0B,SAAjBe,EAAEf,MAAM7D,OAClByO,GAAO,gFAAsB7J,EAAEf,MAAM5D,MAA9B,MACPwO,GAAO,sDAAgB7J,EAAEf,MAAM7D,KAAxB,MACPyO,GAAO,6DAAkB7J,EAAEf,MAAM3D,OAA1B,MACPuO,GAAO,+EAAqB7J,EAAEf,MAAM1D,MAA7B,OAGRsN,EAAKvC,SACJuD,GAAW,oGACZhB,EAAKzC,QACJyD,GAAW,iHACZhB,EAAKtC,SACJsD,GAAW,iHAERA,EAGX,SAASX,EAAWJ,GAEhB,IAAIgB,EAAKhB,EAAKiB,UACVD,EAAK,KAAIA,EAAK,IAAMA,GAExB,IAAIE,EAAKlB,EAAKmB,WAAa,EACvBD,EAAK,KAAIA,EAAK,IAAMA,GAExB,IAAIE,EAAKpB,EAAKqB,cAAgB,IAG9B,OAFID,EAAK,KAAIA,EAAK,IAAMA,GAEjBJ,EAAK,IAAME,EAAK,IAAME,E,IC3M3BE,EAAO,I,6FCLT,SAAcvJ,GACV,OAAOA,M,MDMTwJ,E,WACJ,WAAYjD,GAAM,oBAChBjK,KAAK+F,OAAS,CACZ,MAASkE,EAAKlD,MAAQ,oCACtB,MAASkD,EAAKxH,MACd,aAAgBwH,EAAKxH,MACrB,SAAY,GACZ,SAAYkE,OAAOC,cAAcpB,YACjC,OAAUyE,EAAKvH,OACf,cAAiBuH,EAAKvH,OACtB,UAAa,GACb,UAAaiE,OAAOC,cAAcnB,aAClC,MAAS,EACT,QAAU,CACR,KAAQwE,EAAK/I,QAAQE,KACrB,IAAO6I,EAAK/I,QAAQI,IACpB,MAAS2I,EAAK/I,QAAQM,MACtB,IAAOyI,EAAK/I,QAAQQ,KAEtB,GAAM,CAACqF,MAAM,4EAAkBoG,KAAK,KAAMC,KAAK,KAAMzM,EAAEsJ,EAAKvJ,GAAGC,EAAGiD,EAAEqG,EAAKvJ,GAAGkD,EAAGxE,KAAK6K,EAAKvJ,GAAGtB,MAC5F,GAAM,CAAC2H,MAAM,kFAAkBoG,KAAK,KAAMC,KAAK,KAAMzM,EAAEsJ,EAAKpJ,GAAGF,EAAGiD,EAAEqG,EAAKpJ,GAAG+C,EAAGxE,KAAK6K,EAAKpJ,GAAGzB,MAC5F,GAAM,CAAC2H,MAAM,4EAAkBoG,KAAK,KAAMC,KAAK,KAAMzM,EAAEsJ,EAAKlJ,GAAGJ,EAAGiD,EAAEqG,EAAKlJ,GAAG6C,EAAGxE,KAAK6K,EAAKlJ,GAAG3B,MAC5F,GAAM,CAAC2H,MAAM,sEAAkBoG,KAAK,KAAMC,KAAK,KAAMzM,EAAEsJ,EAAKhJ,GAAGN,EAAGiD,EAAEqG,EAAKhJ,GAAG2C,EAAGxE,KAAK6K,EAAKhJ,GAAG7B,MAC5F,MAAS6K,EAAKnI,MACd,OAAUmI,EAAKnG,OACf,aAAgB,GAChB,YAAe,EACf,WAAc,EACd,KAAQmG,EAAKrF,KACb,QAAW,GACX,QAAW,EACX,cAAiBqF,EAAKkC,cACtB,IAAO,M,0CAGX,WACE,OAAOnM,KAAK+F,W,KAyTDsH,E,4MAnTbrP,MAAQ,CACNsP,MAAO,WACPpH,QAAS,IAAIqH,IACb3G,cAAeD,OAAOC,cACtB4G,UAAW,SACXC,aAAc,KACd7F,eAAgB,CACduB,QAAQ,EACRF,OAAO,EACPG,QAAQ,I,EAIZsE,iBAAmB,SAAClP,GAClB,IAAImP,EAAY,CACd,MAAS,0CAAc,EAAK3P,MAAMkI,QAAQ/B,KAAO,GACjD,MAAS,IACT,aAAgB,IAChB,SAAY,GACZ,SAAY,KACZ,OAAU,IACV,cAAiB,IACjB,UAAa,GACb,UAAa,KACb,MAAS,EACT,QAAU,CACR,MAAQ,EACR,KAAO,EACP,OAAS,EACT,KAAO,GAET,GAAM,CAAC4C,MAAM,4EAAkBoG,KAAK,KAAMC,KAAK,KAAMzM,EAAE,EAAGiD,EAAE,EAAGxE,KAAK,WACpE,GAAM,CAAC2H,MAAM,kFAAkBoG,KAAK,KAAMC,KAAK,KAAMzM,EAAE,EAAGiD,EAAE,EAAGxE,KAAK,WACpE,GAAM,CAAC2H,MAAM,4EAAkBoG,KAAK,KAAMC,KAAK,KAAMzM,EAAE,EAAGiD,EAAE,EAAGxE,KAAK,WACpE,GAAM,CAAC2H,MAAM,sEAAkBoG,KAAK,KAAMC,KAAK,KAAMzM,EAAE,EAAGiD,EAAE,EAAGxE,KAAK,WACpE,OAAS,EACT,QAAU,EACV,aAAgB,GAChB,YAAe,EACf,WAAc,EACd,KAAO,CACL,KAAQ,EACR,IAAO,EACP,MAAS,EACT,IAAO,GAET,QAAW,GACX,QAAW,EACX,cAAiB,GACjB,IAAO,MAEL8G,EAAU,EAAKlI,MAAMkI,QACrB0H,EAAY,MAAO,IAAIhC,MAAOiC,UAC9BJ,EAAeG,EAInB,OAHA1H,EAAQjG,IAAI2N,EAAWD,GACvB,EAAKlO,SAAS,CAACyG,UAAQuH,iBAEhBG,G,EAGTE,aAAe,SAACC,EAAMnP,GACpB,IAAIgJ,EAAiB,EAAK5J,MAAM4J,eAChCA,EAAemG,GAASnP,EACxB,EAAKa,SAAS,CAACmI,oB,EAGjBoG,cAAgB,SAACC,EAAYC,EAAKN,GAChC,IAAI1H,EAAU,EAAKlI,MAAMkI,QACrBH,EAASG,EAAQiI,IAAIP,GAEzB,IAAI,IAAI/O,KAAOqP,EACbnI,EAAOkI,GAAYpP,GAAOqP,EAAIrP,GAGhCqH,EAAQjG,IAAI2N,EAAU7H,GACtB,EAAKtG,SAAS,CAACyG,a,EAGjBkI,aAAe,SAACnO,EAAIoO,GAClB,IAAI,IAAIpQ,KAAQgC,EAAIiB,QACfjB,EAAIiB,QAAQjD,KAAUoQ,IACvBpO,EAAIiB,QAAQjD,IAAQ,GAKxB,MAHY,UAAToQ,IACDpO,EAAI6B,MAAM7D,MAAO,GAEZgC,G,EAGTqO,oBAAsB,SAACV,EAAW3P,EAAMW,GACtC,IAAIsH,EAAU,EAAKlI,MAAMkI,QACrBH,EAASG,EAAQiI,IAAIP,GAEzB7H,EAAO9H,GAAQW,EAEH,UAATX,GAAoBW,EAAQ,IAC7BmH,EAAO9H,GAAQ,IAEA,UAATA,GAAoBW,EAAQ,IAClCmH,EAAO9H,GAAQ,IAEA,WAATA,GAAqBW,EAAQ,IACnCmH,EAAO9H,GAAQ,IAEA,WAATA,GAAqBW,EAAQ,MACnCmH,EAAO9H,GAAQ,KAIL,UAATA,GAAoBW,EAAQ,KAC1BmH,EAAOjE,QACiB,QAAtBiE,EAAOjE,MAAM7D,MAAwC,QAAtB8H,EAAOjE,MAAM7D,OAC7C8H,EAAS,EAAKqI,aAAarI,EAAO,WAI5B,WAAT9H,GAAqBW,EAAQ,KAC3BmH,EAAOjE,QACiB,SAAtBiE,EAAOjE,MAAM7D,MAAyC,UAAtB8H,EAAOjE,MAAM7D,OAC9C8H,EAAS,EAAKqI,aAAarI,EAAO,WAKxCA,EAAO,UAAU9H,GAAQW,EACzBsH,EAAQjG,IAAI2N,EAAU7H,GACtB,EAAKtG,SAAS,CAACyG,a,EAGjBqI,WAAa,SAACzM,EAAO8L,GACnB,IAAI1H,EAAU,EAAKlI,MAAMkI,QACrBH,EAASG,EAAQiI,IAAIP,GACrBnL,EAAQsD,EAAOtD,MACfC,EAASqD,EAAOrD,OAGpB,IAAIqD,EAAO7E,QAAQY,EAAM7D,MAAM,CAC7B,IAAI,IAAIuQ,KAAYzI,EAAO7E,QACO,UAA7B6E,EAAO7E,QAAQsN,KAChBzI,EAAO7E,QAAQsN,IAAY,GAEb,SAAf1M,EAAM7D,OACP8H,EAAO7E,QAAQY,EAAM7D,MAAQ,SAKf,SAAf6D,EAAM7D,MAAkC,UAAf6D,EAAM7D,KAC7B6D,EAAM1D,MAAQsE,IACfZ,EAAM1D,MAAQsE,EAAS,KAItBZ,EAAM1D,MAAQqE,IACfX,EAAM1D,MAAQqE,EAAQ,KAI1BsD,EAAOjE,MAAQA,EACfoE,EAAQjG,IAAI2N,EAAU7H,GACtB,EAAKtG,SAAS,CAACyG,a,EAGjBuI,aAAe,SAACxQ,EAAM2P,GACpB,IAAI1H,EAAU,EAAKlI,MAAMkI,QACrBH,EAASG,EAAQiI,IAAIP,GAGrB7H,EAAO7E,QAAQjD,IAAkC,WAAzB8H,EAAO7E,QAAQjD,KACzC,EAAKmQ,aAAarI,EAAO,UACb,SAAT9H,GACD8H,EAAO7E,QAAQjD,GAAQ,SACvB8H,EAAOjC,OAAS7F,GAGhB8H,EAAOjC,QAAS,GAIpBoC,EAAQjG,IAAI2N,EAAU7H,GACtB,EAAKtG,SAAS,CAACyG,a,EAGjBwI,WAAa,SAAC9J,EAAKgJ,GACjB,IAAI1H,EAAU,EAAKlI,MAAMkI,QACrBH,EAASG,EAAQiI,IAAIP,GACzB7H,EAAOnB,KAAOA,EACdsB,EAAQjG,IAAI2N,EAAU7H,GACtB,EAAKtG,SAAS,CAACyG,a,EAGjByI,oBAAsB,SAACnQ,GACrB,IAAIE,EAASF,EAAEE,OACX+O,EAAe/O,EAAOI,QAAQ,WAAWC,QAAQF,IACjD+P,EAASlQ,EAAOK,QAAQ6P,OACxB1I,EAAU,EAAKlI,MAAMkI,QACzB,GAAc,WAAX0I,EAAH,CAQA,GAAc,SAAXA,EAAkB,CACnB,IACIjB,EADI,IAAIT,EAAWhH,EAAQiI,IAAIV,IACjBoB,SACdjB,EAAY,MAAO,IAAIhC,MAAOiC,UAClCJ,EAAeG,EACf1H,EAAQjG,IAAI2N,EAAWD,GACvB,EAAKlO,SAAS,CAACyG,UAAQuH,gBAAe,EAAKqB,eAE7C,GAAc,UAAXF,EAAH,CAIA,GAAc,WAAXA,EAAoB,CACrB,IAAI7I,EAASG,EAAQiI,IAAIV,GACrBhL,EAAQsD,EAAOtD,MAEfC,GADeqD,EAAO1F,aACb0F,EAAOrD,QACAqD,EAAOzF,cAsB3B,OArBAyF,EAAOoG,cAAgBpG,EAAOoG,cAAgB,EAAI,EAAI,GAMnD1J,GAAS,IACVsD,EAAOtD,MAAQ,IAETA,EAAQ,IACdsD,EAAOtD,MAAQ,IAETC,GAAU,IAChBqD,EAAOrD,OAAS,IAEVA,EAAS,MACfqD,EAAOrD,OAAS,KAGlBwD,EAAQjG,IAAIwN,EAAa1H,QACzB,EAAKtG,SAAS,CAACyG,YAGjB,EAAKzG,SAAS,CAACgO,sBAhCb,EAAKhO,SAAS,CAACgO,aAAc,WAjB/B,CACgB9G,OAAOoI,QAAQ,iPAE3B7I,EAAQ8I,OAAOvB,GACf,EAAKhO,SAAS,CAACyG,e,EAgDrB+I,eAAiB,WACf,EAAKC,UACL,EAAKzP,SAAS,CAAC6N,MAAO,c,EAExB6B,QAAU,WACR,EAAK1P,SAAS,CAAC6N,MAAO,c,EAGxB4B,QAAU,WACR,IAAIE,EAAUC,SAASC,iBAAiB,aACpCpF,EAAO,GACXkF,EAAQlD,SAAQ,SAACqD,EAAGtD,EAAIuD,GACtB,IAAI3Q,EAAM0Q,EAAGvI,GACbkD,EAAKrL,GAAO2Q,EAAIvD,GAAKwD,aAEvB,EAAKvF,KAAOA,G,4CAGd,WACE,IAAIoD,EAA6B,aAArBtN,KAAKhC,MAAMsP,MACnBoC,IAAa1P,KAAKhC,MAAMkI,QAAQ/B,KAAO,GAE3C,OAAGmJ,EAED,qCACA,cAAC,EAAD,CACErD,KAAMjK,KAAKhC,MACXyN,YAAazL,KAAKmP,QAClBjF,KAAMlK,KAAKkK,KACXgB,iBAAkBlL,KAAK8N,eACzB,sBAAKnM,UAAU,YAAf,4PAC8C,mBAAGgO,IAAI,aAAajR,OAAO,SAASkR,KAAK,uBAAzC,0EAM9C,qCACA,cAACzJ,EAAD,CAASlG,IAAKD,KAAKhC,MAAOoI,QAASpG,KAAKhC,MAAM4I,gBAC7C5G,KAAKhC,MAAMkI,QAAQ/B,KAAO,GAC3B,cAAC0L,EAAD,CAAcC,WAAYJ,EAAYhC,iBAAkB1N,KAAK0N,iBAAkBuB,eAAgBjP,KAAKiP,iBACpG,cAAC,EAAD,CACExB,aAAczN,KAAKhC,MAAMyP,aACzBkB,oBAAqB3O,KAAK2O,oBAC1BoB,YAAe/P,KAAKkP,QACpBc,KAAMhQ,KAAKhC,MAAMkI,QACjB+J,MAAOjQ,KAAKuO,WACZ2B,QAASlQ,KAAKyO,aACd0B,MAAOnQ,KAAK0O,WACZ0B,EAAGpQ,KAAKgO,cACRqC,GAAIrQ,KAAKsO,sBACX,cAACuB,EAAD,CAAcC,WAAYJ,EAAYhC,iBAAkB1N,KAAK0N,iBAAkBuB,eAAgBjP,KAAKiP,iBACpG,sBAAKtN,UAAU,YAAf,4PAC8C,mBAAGgO,IAAI,aAAajR,OAAO,SAASkR,KAAK,uBAAzC,8E,GA/SlC1N,IAAMC,WAuTlBmO,E,4MACJtS,MAAQ,G,4CAER,WACE,IAAIgS,EAAO,GACP/P,EAAMD,KAAKN,MAAM0Q,EACjBG,EAAWvQ,KAAKN,MAAM2Q,GACtBJ,EAAQjQ,KAAKN,MAAMuQ,MACnBC,EAAUlQ,KAAKN,MAAMwQ,QACrBC,EAAQnQ,KAAKN,MAAMyQ,MACnBK,EAAYxQ,KAAKN,MAAM+N,aACvByB,EAAUlP,KAAKN,MAAMqQ,YACrBpB,EAAsB3O,KAAKN,MAAMiP,oBAerC,OAdA3O,KAAKN,MAAMsQ,KAAK9D,SAAQ,SAAStN,EAAMC,GACrCmR,EAAKpN,KAAM,cAAC,EAAD,CACT4N,UAAWA,IAAc3R,EAAM,EAAI,EACnC8P,oBAAqBA,EACrBoB,YAAab,EACbmB,GAAIE,EACJH,EAAGnQ,EACHgQ,MAAOA,EACPC,QAASA,EACTC,MAAOA,EAEPM,KAAM5R,EACND,MAAOA,GAFFC,OAKP,qCACA,iHACCmR,EAAKhL,OAAS,EAAIgL,EAAO,uE,GA9BN9N,IAAMC,WAoC1BuO,E,4MACJ1S,MAAQ,G,EAER2S,cAAgB,SAACnS,GACfA,EAAEmL,iBACF,IAAIlL,EAAYD,EAAEE,OAAOC,KACrBE,EAAM,EAAKa,MAAM+Q,KACjBpR,GAAOb,EAAEE,OAAOW,IAChBC,GAAOd,EAAEE,OAAOY,IAChBV,GAASJ,EAAEE,OAAOE,MAAMqD,WAE5B,EAAKxC,SAAL,eAAgBhB,EAAYG,IAAQ,YAC/BA,EAAQS,GAAOT,EAAQU,IACxBd,EAAEE,OAAOkS,UAAUC,IAAI,SACpBjS,EAAQU,GACTV,EAAQU,EACRd,EAAEE,OAAOkS,UAAUE,OAAO,UAG5BtS,EAAEE,OAAOkS,UAAUE,OAAO,SAE5B,EAAKpR,MAAM2Q,GAAGxR,EAAIJ,EAAUG,O,EAGhCmS,eAAiB,SAACvS,GAChB,IAAIC,EAAYD,EAAEE,OAAOC,KACrBC,EAAQJ,EAAEE,OAAOE,MACjBC,EAAM,EAAKa,MAAM+Q,KAErB,EAAK/Q,MAAM2Q,GAAGxR,EAAIJ,EAAUG,I,4CAG9B,WACE,IAAIqB,EAAMD,KAAKN,MAAMd,MACjB0G,EAAIqB,OAAOC,cACf,OAA4B,IAAzB5G,KAAKN,MAAM8Q,UAEV,sBAAK7O,UAAU,oBAAoBqP,WAAUhR,KAAKN,MAAM+Q,KAAxD,UACE,qBAAK9O,UAAU,wBAAf,SACE,sBAAKA,UAAU,cAAf,UACE,2BAAUqF,GAAG,cAAcrF,UAAU,OAArC,UACE,gFACA,uBAAOA,UAAU,QAAjB,SACE,uBAAOC,SAAU5B,KAAK+Q,eAAgB3R,KAAK,OAAOT,KAAK,QAAQ2M,YAAY,qEAAc1M,MAAOqB,EAAI8G,UAEtG,wBAAOpF,UAAU,cAAjB,UACE,sFACA,uBAAOC,SAAU5B,KAAK2Q,cAAevR,KAAK,OAAO6R,QAAQ,QAAQC,UAAU,IAAIvS,KAAK,QAAQU,IAAI,KAAKC,IAAKgG,EAAEE,YAAa5G,MAAOqB,EAAII,aAAa4B,gBAEnJ,wBAAON,UAAU,cAAjB,UACE,gFACA,uBAAOC,SAAU5B,KAAK2Q,cAAevR,KAAK,SAAS8R,UAAU,IAAIvS,KAAK,SAASU,IAAI,KAAKC,IAAKgG,EAAEG,aAAc7G,MAAOqB,EAAIK,cAAc2B,gBAExI,wBAAON,UAAU,cAAjB,UACE,iFACA,uBAAOC,SAAU5B,KAAK2Q,cAAevR,KAAK,SAAS8R,UAAU,IAAIvS,KAAK,QAAQU,IAAI,IAAIC,IAAI,OAAOV,MAAOqB,EAAI/B,cAGhH,2BAAUyD,UAAU,qBAApB,UACE,oEACA,wBAAQwP,cAAY,SAAS7J,QAAStH,KAAKN,MAAMiP,oBAAqBhN,UAAU,MAAhF,4FACA,wBAAQwP,cAAY,OAAO7J,QAAStH,KAAKN,MAAMiP,oBAAqBhN,UAAU,MAA9E,kFAIN,sBAAKA,UAAU,cAAf,UACE,cAACyP,EAAD,CAAYpK,GAAIhH,KAAKN,MAAM+Q,KAAMxQ,IAAKD,KAAKN,MAAMd,MAAOmR,YAAa/P,KAAKN,MAAMqQ,cAChF,wBAAQpO,UAAU,oBAAoBwP,cAAY,SAAS7J,QAAStH,KAAKN,MAAMiP,oBAAqB5H,MAAM,0FAMhH,sBAAKpF,UAAU,gBAAgBqP,WAAUhR,KAAKN,MAAM+Q,KAApD,UACE,sBAAK9O,UAAU,wBAAf,UACE,sBAAKA,UAAU,cAAf,UACE,2BAAUqF,GAAG,cAAcrF,UAAU,OAArC,UACE,gFACA,uBAAOA,UAAU,QAAjB,SACE,uBAAOC,SAAU5B,KAAK2Q,cAAevR,KAAK,OAAOT,KAAK,QAAQ2M,YAAY,qEAAc1M,MAAOqB,EAAI8G,UAErG,wBAAOpF,UAAU,cAAjB,UACE,sFACA,uBAAOK,QAAShC,KAAK2Q,cACdvR,KAAK,SAAST,KAAK,QAAQU,IAAI,KAAKC,IAAKgG,EAAEE,YAC3C5G,MAAOqO,EAAKoE,cAAcpR,EAAII,aAAa4B,iBAEpD,wBAAON,UAAU,cAAjB,UACE,gFACA,uBAAOC,SAAU5B,KAAK2Q,cAAevR,KAAK,SAAST,KAAK,SAASU,IAAI,KAAKC,IAAKgG,EAAEG,aAAc7G,MAAOqB,EAAIK,cAAc2B,gBAE1H,wBAAON,UAAU,cAAjB,UACE,iFACA,uBAAOC,SAAU5B,KAAK2Q,cAAevR,KAAK,SAAST,KAAK,QAASU,IAAI,IAAIC,IAAI,OAAOV,MAAOqB,EAAI/B,MAAM+D,mBAIzG,2BAAU+E,GAAG,OAAOrF,UAAU,OAA9B,UACE,0EACA,cAAC,EAAD,CAAahC,KAAMK,KAAKN,MAAMyQ,MAAOlQ,IAAKD,KAAKN,MAAMd,WAGvD,sBAAK+C,UAAU,qBAAf,UACE,wBAAQwP,cAAY,QAAQ7J,QAAStH,KAAKN,MAAMiP,oBAAqBhN,UAAU,MAA/E,8DACA,wBAAQwP,cAAY,OAAO7J,QAAStH,KAAKN,MAAMiP,oBAAqBhN,UAAU,MAA9E,0EACA,wBAAQwP,cAAY,SAAS7J,QAAStH,KAAKN,MAAMiP,oBAAqBhN,UAAU,MAAhF,2HAIJ,2BAAUqF,GAAG,SAASrF,UAAU,QAAhC,UACE,8DACA,cAAC,EAAD,CAAc2P,UAAU,KAAK3R,KAAMK,KAAKN,MAAM0Q,EAAGnQ,IAAKD,KAAKN,MAAMd,QACjE,cAAC,EAAD,CAAc0S,UAAU,KAAK3R,KAAMK,KAAKN,MAAM0Q,EAAGnQ,IAAKD,KAAKN,MAAMd,QACjE,cAAC,EAAD,CAAc0S,UAAU,KAAK3R,KAAMK,KAAKN,MAAM0Q,EAAGnQ,IAAKD,KAAKN,MAAMd,QACjE,cAAC,EAAD,CAAc0S,UAAU,KAAK3R,KAAMK,KAAKN,MAAM0Q,EAAGnQ,IAAKD,KAAKN,MAAMd,WAGnE,2BAAUoI,GAAG,QAAQrF,UAAW1B,EAAI6B,OAA4B,SAAnB7B,EAAI6B,MAAM7D,KAAkB,aAAe,YAAxF,UACE,oEACA,cAAC,EAAD,CAAc0B,KAAMK,KAAKN,MAAMuQ,MAAOhQ,IAAKD,KAAKN,MAAMd,WAGxD,2BAAUoI,GAAG,SAASrF,UAAU,YAAhC,UACE,wDACA,cAAC,EAAD,CAAehC,KAAMK,KAAKN,MAAMwQ,QAASjQ,IAAKD,KAAKN,MAAMd,cAI7D,sBAAK+C,UAAU,cAAf,UACE,cAACyP,EAAD,CAAYpK,GAAIhH,KAAKN,MAAM+Q,KAAMxQ,IAAKD,KAAKN,MAAMd,QACjD,wBAAQ+C,UAAU,oBAAoBwP,cAAY,SAAS7J,QAAStH,KAAKN,MAAMiP,oBAAqB5H,MAAM,8F,GAlI/F7E,IAAMC,WAyIrBoP,E,4MACJvT,MAAQ,CACNwT,QAAQ,EACRpS,KAAM,UACNqS,MAAM,EACN9Q,EAAG,EACHiD,EAAG,G,EAGLrF,kBAAoB,SAACmT,GACnB,IAAMhT,EAASgT,EAAMhT,OACjBE,EAAwB,aAAhBF,EAAOU,KAAsBV,EAAOuM,QAAU/L,KAAK+I,IAAIvJ,EAAOE,OACpED,EAAOD,EAAOC,KAEpB,GAAmB,WAAhBD,EAAOU,MAAqB,EAAKpB,MAAMyT,KAAK,CAC7C,IAAME,EAAajT,EAAOK,QAAQ6S,MAC5BtS,EAAMZ,EAAOY,IAChBV,EAAQU,IAAKV,EAAQU,GACxB,EAAKG,SAAS,CACZkB,EAAG/B,GAAS+S,EAAa/S,EAAQ+S,EACjC/N,EAAGhF,IACF,kBAAM,EAAKiT,UAAUnT,WAGxB,EAAKe,SAAL,eACGd,EAAOC,IACP,kBAAM,EAAKiT,UAAUnT,O,EAM5BmT,UAAY,SAACnT,GACX,EAAKgB,MAAMC,KACT,EAAKD,MAAM4R,UACX,CACE3Q,EAAE,EAAK3C,MAAM2C,EACbiD,EAAE,EAAK5F,MAAM4F,EACbxE,KAAK,EAAKpB,MAAMoB,KAChB2H,MAAM,EAAKrH,MAAMO,IAAI,EAAKP,MAAM4R,WAAWvK,MAC3CqG,KAAK,EAAK1N,MAAMO,IAAI,EAAKP,MAAM4R,WAAWlE,KAC1CD,KAAK,EAAKzN,MAAMO,IAAI,EAAKP,MAAM4R,WAAWnE,MAE5CzO,EAAOI,QAAQ,WAAWC,QAAQF,M,EAItCiT,iBAAmB,SAACtT,GAClB,IAAIY,EAAOZ,EAAEE,OAAOC,KACpB,EAAKc,UAAS,SAASzB,EAAO0B,GAa5B,OAZAM,KAAKN,MAAMC,KACTD,EAAM4R,UACN,CACE3Q,EAAE3C,EAAM2C,EACRiD,EAAE5F,EAAM4F,EACRxE,KAAKA,EACL2H,MAAMrH,EAAMO,IAAIP,EAAM4R,WAAWvK,MACjCqG,KAAK1N,EAAMO,IAAIP,EAAM4R,WAAWlE,KAChCD,KAAKzN,EAAMO,IAAIP,EAAM4R,WAAWnE,MAElC3O,EAAEE,OAAOI,QAAQ,WAAWC,QAAQF,KAE/B,CAACO,KAAMA,O,EAIlB2S,kBAAoB,SAACvT,GACnB,IAAMI,EAAQJ,EAAEE,OAAOuM,QACvB,EAAKxL,SAAS,CACZ+R,OAAQ5S,IAEV,EAAKc,MAAMC,KACT,EAAKD,MAAM4R,UACX,CACE3Q,EAAG/B,EAAQ,EAAKZ,MAAM2C,EAAI,EAC1BiD,EAAGhF,EAAQ,EAAKZ,MAAM4F,EAAI,EAC1BxE,KAAK,EAAKpB,MAAMoB,KAChB2H,MAAM,EAAKrH,MAAMO,IAAI,EAAKP,MAAM4R,WAAWvK,MAC3CqG,KAAK,EAAK1N,MAAMO,IAAI,EAAKP,MAAM4R,WAAWlE,KAC1CD,KAAK,EAAKzN,MAAMO,IAAI,EAAKP,MAAM4R,WAAWnE,MAE5C3O,EAAEE,OAAOI,QAAQ,WAAWC,QAAQF,M,4CAIxC,WAAS,IAAD,OACFoB,EAAMD,KAAKN,MAAMO,IACjBmN,EAAOnN,EAAIA,EAAID,KAAKN,MAAM4R,WAAWlE,MACrCD,EAAOlN,EAAIA,EAAID,KAAKN,MAAM4R,WAAWnE,MACrC6E,EAAO,IACPC,EAAO,IAEiB,OAAzBjS,KAAKN,MAAM4R,WACZW,GAAQhS,EAAIwC,MAAQ2K,EAAKxJ,EACzBoO,GAAQ/R,EAAIyC,OAASyK,EAAKxM,GAEK,OAAzBX,KAAKN,MAAM4R,WACjBW,GAAQhS,EAAIwC,MAAQ0K,EAAKvJ,EACzBoO,GAAQ/R,EAAIyC,OAAS0K,EAAKzM,GAEK,OAAzBX,KAAKN,MAAM4R,WACjBW,GAAQhS,EAAIwC,MAAQ2K,EAAKxJ,EACzBoO,GAAQ/R,EAAIyC,OAASyK,EAAKxM,IAG1BsR,GAAQhS,EAAIwC,MAAQ0K,EAAKvJ,EACzBoO,GAAQ/R,EAAIyC,OAAS0K,EAAKzM,GAG5B,IAAIuR,EAAQ,+BAAM,uBAAOtQ,SAAU5B,KAAK+R,kBAAmB3S,KAAK,WAAWT,KAAK,SAASsM,QAASjL,KAAKhC,MAAMwT,WAEzGW,EAAc,GACdC,EAAWnS,EAAIiB,QAAQE,KACvBiR,EAAWpS,EAAIiB,QAAQI,IACvBgR,EAAWrS,EAAIiB,QAAQM,MACvB+Q,EAAWtS,EAAIiB,QAAQQ,IACvB8Q,EAAS,GAwBb,MAvBiB,UAAbJ,GAAqC,WAAbA,GAC1BD,EAAc,CAAC,KAAK,MACGK,EAAV,UAAbJ,EAAgC,6CAAqB,kCAElC,UAAbC,GAAqC,WAAbA,GAC9BF,EAAc,CAAC,KAAK,MACGK,EAAV,UAAbH,EAAgC,6CAAqB,kCAElC,UAAbC,GAAqC,WAAbA,GAC9BH,EAAc,CAAC,KAAK,MACGK,EAAV,UAAbF,EAAgC,6CAAqB,kCAElC,UAAbC,GAAqC,WAAbA,IAC9BJ,EAAc,CAAC,KAAK,MACGK,EAAV,UAAbD,EAAgC,6CAAqB,kCAGvDJ,EAAYjG,SAAQ,SAACqD,GAChB,EAAK7P,MAAM4R,YAAc/B,IAC1B2C,EAAQ,uBAAMvQ,UAAU,qBAAhB,6FAAqD6Q,SAI7DxS,KAAKhC,MAAMwT,OAcb,sBAAK7P,UAAS,gCAA2B3B,KAAKhC,MAAMwT,QAAU,UAA9D,UACE,sBAAK7P,UAAU,2BAAf,UACE,wBAAOA,UAAU,sBAAjB,UACE,sBAAMA,UAAS,sBAAiB3B,KAAKN,MAAM4R,WAA3C,SAAyDrR,EAAID,KAAKN,MAAM4R,WAAWvK,QACnF,iCAAM,uBAAOnF,SAAU5B,KAAK+R,kBAAmB3S,KAAK,WAAWT,KAAK,SAASsM,QAASjL,KAAKhC,MAAMwT,SAAjG,6BAEF,wBAAQlK,QAAStH,KAAK8R,iBAAkBnT,KAAK,UAAUgD,UAAU,2BAA2B8Q,cAAiC,YAApBzS,KAAKhC,MAAMoB,MAAsB,SAA1I,8DACA,wBAAQkI,QAAStH,KAAK8R,iBAAkBnT,KAAK,SAASgD,UAAU,qBAAqB8Q,cAAiC,WAApBzS,KAAKhC,MAAMoB,MAAqB,SAAlI,kDACA,wBAAQkI,QAAStH,KAAK8R,iBAAkBnT,KAAK,SAASgD,UAAU,qBAAqB8Q,cAAiC,WAApBzS,KAAKhC,MAAMoB,MAAqB,SAAlI,6EAEF,wBAAOuC,UAAU,GAAjB,eACI,uBACEK,QAAShC,KAAKzB,kBACda,KAAK,SACLT,KAAK,IACLU,IAAI,KACJC,IAAK2S,EACLS,aAAYV,EACZ/S,KAAK,IACLL,MAAOoB,KAAKhC,MAAM4F,EAAE3B,aACtB,yCAAW,4BAAIgQ,IAAf,yBAEJ,wBAAOtQ,UAAU,SAAjB,UACE,gGAAgB,uBAAhB,kEACA,uBACEC,SAAU5B,KAAKzB,kBACfI,KAAK,OACLS,KAAK,WACL6L,QAASjL,KAAKhC,MAAMyT,UAExB,wBAAO9P,UAAU,GAAjB,eACI,uBACEK,QAAShC,KAAKzB,kBACda,KAAK,SACLT,KAAK,IACLU,IAAI,KACJC,IAAK0S,EACL/S,KAAK,IACLL,MAAOoB,KAAKhC,MAAM2C,EAAEsB,WACpBF,SAAU/B,KAAKhC,MAAMyT,OACvB,yCAAW,4BAAIO,IAAf,4BApDJ,qBAAKrQ,UAAU,wBAAf,SACE,qBAAKA,UAAU,2BAAf,SACE,wBAAOA,UAAU,sBAAjB,UACE,sBAAMA,UAAS,sBAAiB3B,KAAKN,MAAM4R,WAA3C,SAAyDrR,EAAID,KAAKN,MAAM4R,WAAWvK,QAClFmL,a,GAlJYhQ,IAAMC,WAyMjC,SAASwQ,EAAY1U,EAAKoB,EAAIC,GAC5B,IAAI+C,EAAInD,KAAK+I,IAAIhK,GACjB,OAAGoE,EAAIhD,EACEA,EACDgD,EAAI/C,EACHA,EAEA+C,EAGX,SAAS+O,EAAW1R,GAClB,IAAIO,EAAMP,EAAMO,IAEXwC,EAA6FxC,EAA7FwC,MAAMpC,EAAuFJ,EAAvFI,aAAauS,EAA0E3S,EAA1E2S,SAASC,EAAiE5S,EAAjE4S,SAASnQ,EAAwDzC,EAAxDyC,OAAOpC,EAAiDL,EAAjDK,cAAcwS,EAAmC7S,EAAnC6S,UAAUC,EAAyB9S,EAAzB8S,UAAUrS,EAAeT,EAAfS,GAAGG,EAAYZ,EAAZY,GAAGI,EAAShB,EAATgB,GAAGF,EAAMd,EAANc,GACxFsB,EAAI,GACFiD,EAAIqB,OAAOC,cAEjBnE,EAAQkQ,EAAYlQ,EAAMmQ,EAASC,GACnCnQ,EAASiQ,EAAYjQ,EAAOoQ,EAAUC,GAGnC1S,GAAgB,MACjBqC,EAASzC,EAAIyC,OAASxD,KAAKC,MAAM,KAAMD,KAAKC,MAAMkB,EAAaC,EAAc,IAAI,GAAG,MACnFoC,EAAS,MACVA,EAASzC,EAAIyC,OAAS,KAExB,IAAIsQ,EAAG,YAAU3Q,EAAV,YAAgBnD,KAAK+I,IAAIvH,EAAGC,GAAK0B,EAAjC,cA8DT,SAA2BA,EAAEqF,GAC3B,GAAkB,YAAfA,EAAMtI,KACP,MAAM,GAAN,OAAUiD,EAAV,YAAeA,GACZ,GAAkB,WAAfqF,EAAMtI,KACZ,MAAM,GAAN,OAAUsI,EAAM/G,EAAE,EAAI0B,EAAtB,YAA2BqF,EAAM9D,EAAE,EAAIvB,GACpC,GAAkB,WAAfqF,EAAMtI,KACZ,MAAM,GAAN,QAAWsI,EAAM/G,EAAI0B,EAArB,aAA2BqF,EAAM9D,EAAIvB,GApES4Q,CAAkB5Q,EAAE3B,GAA7D,YAAqExB,KAAK+I,IAAIvH,EAAGkD,GAAKvB,EAAtF,YAA4FA,GAC/Ff,EAAG,aAAYmB,EAAM5B,EAAG+C,EAAIvB,EAAzB,YAA+BA,GAClC6Q,EAAG,aAoET,SAA2B7Q,EAAEqF,EAAMzH,GACjC,GAAkB,YAAfyH,EAAMtI,KACP,MAAM,GAAN,QAAYa,EAAIwC,MAAQJ,EAAxB,YAA8BA,GAC3B,GAAkB,WAAfqF,EAAMtI,KACZ,MAAM,GAAN,QAAWa,EAAIwC,MAAQiF,EAAM9D,EAAE,EAAIvB,EAAnC,YAAwCqF,EAAM/G,EAAE,EAAI0B,GACjD,GAAkB,WAAfqF,EAAMtI,KACZ,MAAM,GAAN,QAAWa,EAAIwC,MAAQiF,EAAM9D,EAAIvB,EAAjC,aAAuCqF,EAAM/G,EAAI0B,GA1EjC8Q,CAAkB9Q,EAAExB,EAAGZ,GAAlC,YAA0CwC,EAAMJ,EAAhD,aAAsDxB,EAAGF,EAAI0B,GAChEb,EAAK,aAAUiB,EAAQJ,EAAlB,YAAyBK,EAAS3B,EAAGJ,EAAI0B,GAC9C+Q,EAAG,aA0ET,SAA2B/Q,EAAEqF,EAAMzH,GACjC,GAAkB,YAAfyH,EAAMtI,KACP,MAAM,GAAN,QAAYa,EAAIwC,MAAQJ,EAAxB,aAA+BpC,EAAIyC,OAASL,GACzC,GAAkB,WAAfqF,EAAMtI,KACZ,MAAM,GAAN,QAAWa,EAAIwC,MAAQiF,EAAM9D,EAAE,EAAIvB,EAAnC,aAAyCpC,EAAIyC,OAASgF,EAAM/G,EAAE,EAAI0B,GAC/D,GAAkB,WAAfqF,EAAMtI,KACZ,MAAM,GAAN,QAAWa,EAAIwC,MAAQiF,EAAM9D,EAAIvB,EAAjC,aAAuCpC,EAAIyC,OAASgF,EAAM/G,EAAI0B,GAhF9CgR,CAAkBhR,EAAEtB,EAAGd,GAAlC,YAA2CwC,EAAQ1B,EAAG6C,EAAIvB,EAA1D,YAAiEK,EAASL,GAC7EX,EAAG,cAAaT,EAAG2C,EAAEvB,EAAlB,YAAyBK,EAASL,GACrCiR,EAAG,aAgFT,SAA2BjR,EAAEqF,EAAMzH,GACjC,GAAkB,YAAfyH,EAAMtI,KACP,MAAM,GAAN,OAAUiD,EAAV,aAAgBpC,EAAIyC,OAASL,GAC1B,GAAkB,WAAfqF,EAAMtI,KACZ,MAAM,GAAN,QAAWsI,EAAM9D,EAAE,EAAIvB,EAAvB,aAA6BpC,EAAIyC,OAASgF,EAAM/G,EAAE,EAAI0B,GACnD,GAAkB,WAAfqF,EAAMtI,KACZ,MAAM,GAAN,QAAWsI,EAAM9D,EAAIvB,EAArB,aAA2BpC,EAAIyC,OAASgF,EAAM/G,EAAI0B,GAtFlCkR,CAAkBlR,EAAEpB,EAAGhB,GAAlC,YAA0CoC,EAA1C,YAA+CK,EAAOzB,EAAGN,EAAE0B,GAI9DmR,EAAWvT,EAAIkM,cACfhH,EAAQ,QA+CZ,OA5CE,sBAAK6B,GAAItH,EAAMsH,GAAIyM,MAAM,6BAA6BC,QAAQ,MAAMC,QAAS,QAAUlR,EAAMJ,KAAM,KAAMK,EAAOL,KAAhH,UAEE,+BACE,yBACE2E,GAAE,aAAQtH,EAAMsH,IAChB4M,aAAa,iBACbC,oBAAoB,OACpBC,iBAAgB,iBAAYN,EAAZ,KAAyB,EAAzB,KAA+B,EAA/B,KAChB/Q,MAdM,KAeNC,OAdO,IAQT,SAOE,uBACEkN,KAAMtK,EAAEyO,kBACRpT,EAAG0B,EAAGuB,EAAGvB,EACT2R,QAAQ,MACRvR,MApBI,KAqBJC,OApBK,UAwBX,sBAAMG,EAAGmQ,EAAM1R,EAAM4R,EAAM1R,EAAQ4R,EAAM1R,EAAM4R,EAAM,KAAMxQ,OAAO,UAAUsB,YAAY,IAAI6P,eAAe,QAAQjR,KAAI,kBAAatD,EAAMsH,GAAnB,KAA0BgN,QAAQ,QAGzJ,sBAAMnR,EAAC,YAAOR,EAAP,YAAYnD,KAAK+I,IAAIvH,EAAGC,GAAK0B,EAA7B,eAAqC3B,EAAGC,EAAxC,cAA+CD,EAAGkD,GAAKQ,YAAY,IAAItB,OAAQqC,EAAOpC,gBAAgB,KAAKC,KAAK,gBACvH,uBAAMF,OAAQqC,EAAOxB,SAAS,OAAOhD,GAAI,GAAIiD,EAAG,IAAKwB,UAAS,qBAAiB,GAAjB,IAAyB,GAAzB,KAA9D,UAAgG1E,EAAGC,EAAnG,kBACA,uBAAMmC,OAAQqC,EAAOxB,SAAS,OAAOhD,EAAG0B,GAAMuB,EAAGvB,GAAjD,UAAwD3B,EAAGkD,EAA3D,kBAEA,sBAAMf,EAAC,YAAOJ,EAAMJ,EAAb,YAAkBnD,KAAK+I,IAAIpH,EAAGF,GAAK0B,EAAnC,eAA2CxB,EAAGF,EAA9C,eAAsDE,EAAG+C,GAAKQ,YAAY,IAAItB,OAAQqC,EAAOpC,gBAAgB,KAAKC,KAAK,gBAC9H,uBAAMF,OAAQqC,EAAOxB,SAAS,OAAOhD,EAAG8B,EAAMJ,EAAE,GAAIuB,EAAGvB,GAAvD,UAA8DxB,EAAG+C,EAAjE,kBACA,uBAAMd,OAAQqC,EAAOxB,SAAS,OAAOhD,EAAI8B,EAAMJ,EAAE,GAAKuB,EAAGvB,IAAM+C,UAAS,qBAAiB3C,EAAMJ,EAAG,GAA1B,YAAiCA,IAAjC,KAAxE,UAAoHxB,EAAGF,EAAvH,kBAEA,sBAAMkC,EAAC,YAAOJ,EAAMJ,EAAb,YAAkBK,EAAS3B,EAAGJ,EAAI0B,EAAlC,cAAyCtB,EAAGJ,EAA5C,eAAoDI,EAAG6C,GAAOQ,YAAY,IAAItB,OAAQqC,EAAOpC,gBAAgB,KAAKC,KAAK,gBAC9H,uBAAMF,OAAQqC,EAAOxB,SAAS,OAAOhD,EAAG8B,EAAMJ,EAAE,GAAIuB,EAAGlB,EAAOL,EAAE,GAAhE,UAAqEtB,EAAG6C,EAAxE,kBACA,uBAAMd,OAAQqC,EAAOxB,SAAS,OAAOhD,EAAI8B,EAAMJ,EAAE,GAAKuB,EAAGlB,EAAOL,EAAE,GAAI+C,UAAS,qBAAiB3C,EAAMJ,EAAG,GAA1B,YAAiCK,EAAOL,EAAE,GAA1C,KAA/E,UAAkItB,EAAGJ,EAArI,kBAEA,sBAAMkC,EAAC,YAAOR,EAAP,YAAYK,EAASzB,EAAGN,EAAI0B,EAA5B,eAAoCpB,EAAGN,EAAvC,eAA+CM,EAAG2C,GAAYQ,YAAY,IAAItB,OAAQqC,EAAOpC,gBAAgB,KAAKC,KAAK,gBAC9H,uBAAMF,OAAQqC,EAAOxB,SAAS,OAAOhD,EAAG0B,GAAMuB,EAAGlB,EAAOL,EAAE,GAA1D,UAA+DpB,EAAG2C,EAAlE,kBACA,uBAAMd,OAAQqC,EAAOxB,SAAS,OAAOhD,EAAI0B,GAAOuB,EAAGlB,EAAOL,EAAE,GAAI+C,UAAS,qBAAgB/C,GAAhB,YAAwBK,EAAOL,EAAE,GAAjC,KAAzE,UAAkHpB,EAAGN,EAArH,kBAEA,uBAAMgD,SAAS,OAAOhD,GAAI0B,EAAEI,GAAO,EAAGmB,EAAG,GAAzC,UAA8CvD,EAA9C,kBACA,uBAAMsD,SAAS,OAAOyB,UAAS,qBAAgB,GAAhB,KAAuB/C,EAAEK,GAAQ,EAAjC,KAAuC/B,GAAG0B,GAAQuB,GAAIvB,EAAEK,GAAQ,EAA/F,UAAmGpC,EAAnG,kBAvCF,IAwCgB,cAAC8B,EAAD,CAAOnC,IAAKA,EAAKoC,EAAGA,IAxCpC,IAyCc,cAAC0B,EAAD,CAAQ9D,IAAKA,EAAKoC,EAAGA,IAzCnC,IA0CiB,cAAC0C,EAAD,CAAM9E,IAAKA,EAAKoC,EAAGA,OAuCxC,SAASwN,EAAanQ,GACpB,OACE,sBAAKsH,GAAG,8BAAR,UACE,wBAAQrF,UAAU,MAAM2F,QAAS5H,EAAMgO,iBAAvC,mGACA,wBAAQ/L,UAAU,MAAMI,SAAUrC,EAAMoQ,WAAYxI,QAAS5H,EAAMuP,eAAnE,+HE71BN,IAYeiF,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBtJ,MAAK,YAAkD,IAA/CuJ,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFvF,SAASwF,eAAe,SAM1BX,K","file":"static/js/main.30e5a3e2.chunk.js","sourcesContent":["import React from 'react';\r\nimport '../App.css';\r\n\r\n// ============================================ LOOPS\r\nclass LoopsOptions extends React.Component{\r\n    state = {\r\n      side: 'none',\r\n      count: 2,\r\n      before: 100,\r\n      after: 500,\r\n      minSpace: 50,\r\n      error: false,\r\n    }\r\n  \r\n    handleInputChange = (e) => {\r\n      let fieldName = e.target.name; // Поле формы\r\n      let value = e.target.value; // Значение формы\r\n      let key = e.target.closest('.detail').dataset.key; // Ключ детали\r\n      let steps = this.state.count - 1; // желаемое кол-во отрезков между первой и последней деталью\r\n      let step = Math.round((this.state.after-this.state.before)/steps, 1); // размер одного отрезка\r\n      // Предотвращаем введение невозможных значений\r\n      if(e.target.type === 'number'){\r\n          const min = e.target.min;\r\n          const max = e.target.max;\r\n          if(+value > +max) value = max;\r\n          console.log(value,max);\r\n      }\r\n      //  Не позволяем добавлять больше петель, \r\n      //  чем это возможно при сохранении минимального расстояния между центрами петель,\r\n      //  обозначенного как minSpace, не путать с indent(отступ петли от края детали)\r\n      if(step >= this.state.minSpace){\r\n        this.setState({\r\n          [fieldName]: value,\r\n          error: false\r\n        }, () => {\r\n          this.props.func(this.state, key); // отправлем данные в Арр\r\n        })\r\n        \r\n      }\r\n      else{\r\n        this.setState({\r\n          [fieldName]: value,\r\n          error: true\r\n        });\r\n        \r\n      }\r\n    }\r\n\r\n    isFree = (r,A1,A2) => {\r\n        if(r === 'groove' || A1 || A2){\r\n            return true;\r\n        }\r\n        if(!r) return false;\r\n    }\r\n  \r\n    render(){\r\n        let {side,before,after,minSpace} = this.state;\r\n        let set = this.props.set;\r\n        let beforeMin = +minSpace*2;\r\n        let beforeMax = after - minSpace*2;\r\n        let afterMax = side === 'top' || side === 'bot' ? set.nominalwidth - minSpace*2 : set.nominalheight - minSpace*2;\r\n        let afterMin = +minSpace*2 + +before;\r\n        let countMax = Math.round((after-before)/minSpace) + 1;\r\n        let LTangle = +set.lt.x === 0 ? false : true;\r\n        let RTangle = +set.rt.x === 0 ? false : true;\r\n        let RBangle = +set.rb.x === 0 ? false : true;\r\n        let LBangle = +set.lb.x === 0 ? false : true;\r\n        let r = set.reserve;\r\n        let resL = this.isFree(r.left,LTangle,LBangle);\r\n        let resT = this.isFree(r.top,LTangle,RTangle);\r\n        let resR = this.isFree(r.right,RTangle,RBangle);\r\n        let resB = this.isFree(r.bot,RBangle,LBangle);\r\n        \r\n        if(set.nominalwidth < 150)\r\n            resT = resB = true;\r\n        if(set.nominalheight < 150)\r\n            resL = resR = true;\r\n\r\n        if(r.left==='groove' || r.top==='groove' || r.right==='groove' || r.bot==='groove'){\r\n            return(\r\n                <span className=\"fons12 red\">Петли несовместимы с пазами</span>\r\n            )\r\n        }\r\n        if(resL && resT && resR && resB){\r\n            return(\r\n                <span className=\"fons12 red\">Нет вариантов</span>\r\n            )\r\n        }\r\n\r\n        return(\r\n            <>\r\n            <label className=\"flex-center\">\r\n                <span>Сторона</span>\r\n                <select onChange={this.handleInputChange} name=\"side\" defaultValue=\"none\" value={set.loops.side}>\r\n                    <option key=\"loopnone\" value=\"none\">Нет</option>\r\n                    <option key=\"loopleft\" value=\"left\"  disabled={resL}>Слева{resL && ' (занято)'}</option>\r\n                    <option key=\"looptop\" value=\"top\"   disabled={resT}>Сверху{resT && ' (занято)'}</option>\r\n                    <option key=\"loopright\" value=\"right\" disabled={resR}>Справа{resR && ' (занято)'}</option>\r\n                    <option key=\"loopbot\" value=\"bot\"   disabled={resB}>Снизу{resB && ' (занято)'}</option>\r\n                </select>\r\n            </label>\r\n            <label className=\"flex-center ml-a\"><span className=\"fons12\">От верхнего/нижнего края отступ отверстий {beforeMin}мм.</span></label>\r\n            <div className=\"w100p\"></div>\r\n\r\n            {this.state.side !== 'none' &&\r\n            <>\r\n            <label className=\"flex-center\">\r\n                <span>До&nbsp;первой <br/>петли, мм</span>\r\n                <input \r\n                    onInput={this.handleInputChange} \r\n                    name=\"before\" \r\n                    type=\"number\"\r\n                    min={beforeMin}\r\n                    max={beforeMax}\r\n                    step=\"1\" \r\n                    value={this.state.before.toString()} />\r\n                    <span>max: <b>{beforeMax}</b>&nbsp;мм</span>\r\n            </label>\r\n            <label className=\"flex-center\">\r\n                <span>До&nbsp;последней <br/>петли, мм</span>\r\n                <input \r\n                    onInput={this.handleInputChange} \r\n                    name=\"after\" \r\n                    type=\"number\"\r\n                    min={afterMin}\r\n                    max={afterMax}\r\n                    step=\"1\" \r\n                    value={this.state.after.toString()} />\r\n                    <span>max: <b>{afterMax}</b>&nbsp;мм</span>\r\n            </label>\r\n            <label className=\"flex-center\">\r\n                <span>Кол-во, шт</span>\r\n                <input \r\n                    className={this.state.error ? 'error' : ''}\r\n                    onInput={this.handleInputChange} \r\n                    name=\"count\" \r\n                    type=\"number\"\r\n                    min=\"2\"\r\n                    max={countMax}\r\n                    step=\"1\" \r\n                    defaultValue=\"2\" />\r\n            </label>\r\n            </>\r\n            }\r\n            </>\r\n        );\r\n    }\r\n  }\r\n\r\nfunction Loops(props){\r\n    let set = props.set;\r\n    let m = props.m;\r\n    let loops = set.loops;\r\n    let indent = 25;\r\n    let radius = 35/2;\r\n\r\n    if(loops.side === undefined || loops.side === 'none') return('');\r\n  \r\n    let width = set.width;\r\n    let height = set.height;\r\n    let circles = [];\r\n\r\n    if(loops.side === 'left'){\r\n        circles.push(<path key=\"lpath\" d={`M ${m+indent} ${m} v ${height}`} stroke=\"#72aee6\" strokeDasharray=\"10\" fill=\"transparent\"/>);\r\n        circles.push(<Circle key={'lbefore'} side={loops.side} cx={m+indent} cy={+loops.before+m} r={radius} m={m} />);\r\n        circles.push(<Circle key={'lafter'} side={loops.side} cx={m+indent} cy={+loops.after+m} r={radius} m={m} />);\r\n    }\r\n    else if(loops.side === 'top'){\r\n        circles.push(<path key=\"tpath\" d={`M ${m} ${m+indent} h ${width}`} stroke=\"#72aee6\" strokeDasharray=\"10\" fill=\"transparent\"/>);\r\n        circles.push(<Circle key={'tbefore'} side={loops.side} cx={+loops.before+m} cy={m+indent} r={radius} m={m} />);\r\n        circles.push(<Circle key={'tafter'} side={loops.side} cx={+loops.after+m} cy={m+indent} r={radius} m={m} />);\r\n    }\r\n    else if(loops.side === 'right'){\r\n        circles.push(<path key=\"rpath\" d={`M ${m+width-indent} ${m} v ${height}`} stroke=\"#72aee6\" strokeDasharray=\"10\" fill=\"transparent\"/>);\r\n        circles.push(<Circle key={'rbefore'} side={loops.side} cx={m+width-indent} cy={+loops.before+m} r={radius} m={m} />);\r\n        circles.push(<Circle key={'rafter'} side={loops.side} cx={m+width-indent} cy={+loops.after+m} r={radius} m={m} />);\r\n    }\r\n    else if(loops.side === 'bot'){\r\n        circles.push(<path key=\"bpath\" d={`M ${m} ${height+m-indent} h ${width}`} stroke=\"#72aee6\" strokeDasharray=\"10\" fill=\"transparent\"/>);\r\n        circles.push(<Circle key={'bbefore'} side={loops.side} cx={+loops.before+m} cy={height+m-indent} r={radius} m={m} />);\r\n        circles.push(<Circle key={'bafter'} side={loops.side} cx={+loops.after+m} cy={height+m-indent} r={radius} m={m} />);\r\n    }\r\n        \r\n\r\n    if(loops.count > 2){\r\n        let steps = loops.count - 1;\r\n        let step = Math.round((loops.after-loops.before)/steps, 1);\r\n        for(let i = 1; i < steps; i++){\r\n            let circleCX = m+indent;\r\n            let circleCY = +loops.before+(step*i)+m;\r\n            if(loops.side === 'top'){\r\n                circleCY = m+indent;\r\n                circleCX = +loops.before+(step*i)+m;\r\n            }\r\n            else if(loops.side === 'right'){\r\n                circleCX = width+m-indent;\r\n                circleCY = +loops.before+(step*i)+m;\r\n            }\r\n            else if(loops.side === 'bot'){\r\n                circleCY = height+m-indent;\r\n                circleCX = +loops.before+(step*i)+m;\r\n            }\r\n            circles.push(    \r\n                <Circle \r\n                    key={`${circleCX}-${circleCY}-${i}`} \r\n                    cx={circleCX} \r\n                    cy={circleCY} \r\n                    r={radius} \r\n                    width={width} \r\n                    height={height} \r\n                    side={loops.side}\r\n                    m={m} />);\r\n        }\r\n    }  \r\n    return circles;\r\n}\r\n  \r\nfunction Circle(props){\r\n    let side = props.side;\r\n    let line = `M ${props.cx} ${props.cy} h ${props.r + 20}`;\r\n    let numberX = props.cx + 45;\r\n    let numberY = props.cy + 8;\r\n    let number = props.cy-props.m;\r\n    if(side === 'top'){\r\n        line = `M ${props.cx} ${props.cy} v ${props.r + 20}`;\r\n        numberX = props.cx - 23;\r\n        numberY = props.cy + 60;\r\n        number = props.cx - props.m;\r\n    }\r\n    else if(side === 'right'){\r\n        line = `M ${props.cx} ${props.cy} h -${props.r + 20}`;\r\n        numberX = props.cx - 90;\r\n        numberY = props.cy + 10;\r\n        number = props.cy-props.m;\r\n    }\r\n    else if(side === 'bot'){\r\n        line = `M ${props.cx} ${props.cy} v -${props.r + 20}`;\r\n        numberX = props.cx - 20;\r\n        numberY = props.cy - 50;\r\n        number = props.cx - props.m;\r\n    }\r\n    return (\r\n      <>\r\n      <circle cx={props.cx} cy={props.cy} r={props.r} stroke=\"#3b8ecc\" fill=\"#3b8ecc\" />\r\n      <path d={line}  stroke=\"#3b8ecc\" />\r\n      <text fontSize=\"150%\" x={numberX} y={numberY}>{number}</text>\r\n      </>\r\n    );\r\n}\r\n\r\nexport {LoopsOptions, Loops};","import React from 'react';\r\nimport '../App.css';\r\n\r\n// ============================================ GROOVE\r\nclass GrooveOptions extends React.Component{\r\n\r\n    handleInputChange = (e) => {\r\n        let fieldName = e.target.name; // Поле формы\r\n        let value = e.target.value; // Значение формы\r\n        let key = e.target.closest('.detail').dataset.key; // Ключ детали\r\n\r\n        this.setState({\r\n            [fieldName]: value,\r\n            error: false\r\n          }, () => {\r\n            this.props.func(this.state.side, key); // отправлем данные в Арр\r\n          }\r\n        )\r\n    }\r\n\r\n    isFree = (r,A1,A2) => {\r\n        if(r === 'loops' || A1 || A2){\r\n            return true;\r\n        }\r\n        if(!r) return false;\r\n    }\r\n\r\n    render(){\r\n        let set = this.props.set;\r\n        let LTangle = +set.lt.x === 0 ? false : true;\r\n        let RTangle = +set.rt.x === 0 ? false : true;\r\n        let RBangle = +set.rb.x === 0 ? false : true;\r\n        let LBangle = +set.lb.x === 0 ? false : true;\r\n        let r = set.reserve;\r\n        let resL = this.isFree(r.left,LTangle,LBangle);\r\n        let resT = this.isFree(r.top,LTangle,RTangle);\r\n        let resR = this.isFree(r.right,RTangle,RBangle);\r\n        let resB = this.isFree(r.bot,RBangle,LBangle);\r\n\r\n        if(r.left==='loops' || r.top==='loops' || r.right==='loops' || r.bot==='loops'){\r\n            return(\r\n                <span className=\"fons12 red\">Пазы несовместимы с петлями</span>\r\n            )\r\n        }\r\n\r\n        if(resL && resT && resR && resB){\r\n            return(\r\n                <span className=\"fons12 red\">Нет вариантов</span>\r\n            )\r\n        }\r\n\r\n        return(\r\n            <div className=\"flex-nowrap flex-center\">\r\n                <label className=\"flex-column\">\r\n                    <span>Сторона</span>\r\n                    <select onChange={this.handleInputChange} name=\"side\" value={set.groove}>\r\n                        <option value=\"none\">Нет</option>\r\n                        <option value=\"left\"  disabled={resL}>Слева{resL && ' (занято)'}</option>\r\n                        <option value=\"top\"   disabled={resT}>Сверху{resT && ' (занято)'}</option>\r\n                        <option value=\"right\" disabled={resR}>Справа{resR && ' (занято)'}</option>\r\n                        <option value=\"bot\"   disabled={resB}>Снизу{resB && ' (занято)'}</option>\r\n                    </select>\r\n                </label>\r\n                <span className=\"fons12\">\r\n                    <b>Параметры паза: </b>\r\n                    глубина 8 мм,\r\n                    ширина 4 мм,\r\n                    расстояние от края 16 мм (20 мм вместе с пазом)\r\n                </span>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport {GrooveOptions};\r\n\r\nfunction Groove(props){\r\n    let set = props.set;\r\n    let m = props.m;\r\n    let side = set.groove;\r\n    \r\n    if(!side) return('');\r\n    \r\n    let indent = set.grooveIndent;\r\n    let width = set.grooveWidth;\r\n    let x = m;\r\n    let y = m;\r\n    let vector = side === 'left' || side === 'right' ? 'v' : 'h';\r\n    let size = vector === 'h' ? set.width : set.height;\r\n    \r\n    if(side === 'left')\r\n        x = m + indent; size = size*-1;\r\n    if(side === 'top')\r\n        y = m + indent;\r\n    if(side === 'right')\r\n        x = m + +set.width - indent;\r\n    if(side === 'bot')\r\n        y = +set.height + m - indent; size = size*-1;\r\n\r\n    return <path d={`M ${x} ${y} ${vector} ${size}`} stroke=\"green\" strokeWidth={width} fill=\"transparent\"/>\r\n}\r\nexport {Groove};","import React from 'react';\r\nimport '../App.css';\r\n\r\n// ============================================ GROOVE\r\nclass EdgeOptions extends React.Component{\r\n\r\n    state = {\r\n        left: '0.0', top: '0.0', right: '0.0', bot: '0.0',\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        let set   = this.props.set;\r\n        let lta = set.lt.x > 0 ? true : false;\r\n        let rta = set.rt.x > 0 ? true : false;\r\n        let rba = set.rb.x > 0 ? true : false;\r\n        let lba = set.lb.x > 0 ? true : false;\r\n\r\n        let fieldName = e.target.name; // Поле формы\r\n        let value = e.target.value; // Значение формы\r\n        let key = e.target.closest('.detail').dataset.key; // Ключ детали\r\n        let newValue = {[fieldName]: value}\r\n\r\n        if(fieldName === 'left' && lta)\r\n            newValue.top = value;\r\n        else if(fieldName === 'left' && lba)\r\n            newValue.bot = value;\r\n        else if(fieldName === 'top' && lta)\r\n            newValue.left = value;\r\n        else if(fieldName === 'top' && rta)\r\n            newValue.right = value;\r\n        else if(fieldName === 'right' && rta)\r\n            newValue.top = value;\r\n        else if(fieldName === 'right' && rba)\r\n            newValue.bot = value;\r\n        else if(fieldName === 'bot' && rba)\r\n            newValue.right = value;\r\n        else if(fieldName === 'bot' && lba)\r\n            newValue.left = value;\r\n\r\n        this.setState( newValue, () => {\r\n            this.props.func(this.state, key); // отправлем данные в Арр\r\n          }\r\n        )\r\n    }\r\n\r\n    render(){\r\n        let set   = this.props.set;\r\n        let left  = set.edge.left;\r\n        let top   = set.edge.top;\r\n        let right = set.edge.right;\r\n        let bot   = set.edge.bot;\r\n        let min   = set.edgeMin;\r\n        let max = set.edgeMax;\r\n        return(\r\n            <>\r\n            <label className=\"flex-column\">\r\n                <span>Слева</span>\r\n                <select onChange={this.handleChange} name=\"left\" value={left}>\r\n                    <option value=\"0.0\">0.0</option>\r\n                    <option value={min}>{min}</option>\r\n                    <option value={max}>{max}</option>\r\n                </select>\r\n            </label>\r\n            <label className=\"flex-column\">\r\n                <span>Сверху</span>\r\n                <select onChange={this.handleChange} name=\"top\" value={top}>\r\n                    <option value=\"0.0\">0.0</option>\r\n                    <option value={min}>{min}</option>\r\n                    <option value={max}>{max}</option>\r\n                </select>\r\n            </label>\r\n            <label className=\"flex-column\">\r\n                <span>Справа</span>\r\n                <select onChange={this.handleChange} name=\"right\" value={right}>\r\n                    <option value=\"0.0\">0.0</option>\r\n                    <option value={min}>{min}</option>\r\n                    <option value={max}>{max}</option>\r\n                </select>\r\n            </label>\r\n            <label className=\"flex-column\">\r\n                <span>Снизу</span>\r\n                <select onChange={this.handleChange} name=\"bot\" value={bot}>\r\n                    <option value=\"0.0\">0.0</option>\r\n                    <option value={min}>{min}</option>\r\n                    <option value={max}>{max}</option>\r\n                </select>\r\n            </label>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport {EdgeOptions};\r\n\r\nfunction Edge(props){\r\n    let {set,m} = props;\r\n    let width = set.width;\r\n    let height = set.height;\r\n    let length = 100;\r\n    let lx = m - 10;\r\n    let ly = m + set.height + 10;\r\n    let rx = m + set.width + 10;\r\n    let color = \"green\";\r\n    let fontSize = \"130%\";\r\n    return(\r\n        <>\r\n        <path d={`M ${m-7} ${(m+height)/2-length/2} v ${length}`} stroke={color} strokeDasharray=\"15,10\" strokeWidth=\"3\" fill=\"transparent\" />\r\n        <text fontSize={fontSize} x={m-27} y={height/2+50} transform={`rotate(-90,${m-27},${height/2+40})`} fill={color}>{set.edge.left}</text>\r\n        <path d={`M ${(width+m)/2} ${ly} h ${length}`} stroke={color} strokeDasharray=\"15,10\" strokeWidth=\"3\" fill=\"transparent\" />\r\n        <text fontSize={fontSize} x={(width+m)/2+20} y={height+m+40} fill={color}>{set.edge.bot}</text>\r\n\r\n        <path d={`M ${rx} ${(m+height)/2} v ${length}`} stroke={color} strokeDasharray=\"15,10\" strokeWidth=\"3\" fill=\"transparent\" />\r\n        <text fontSize={fontSize} x={rx+25} y={(m+height)/2 + 70} transform={`rotate(-90,${rx+25},${(m+height)/2 + 60})`} fill={color}>{set.edge.right}</text>\r\n        <path d={`M ${(m+width)/2} ${m-7} h ${length}`} stroke={color} strokeDasharray=\"15,10\" strokeWidth=\"3\" fill=\"transparent\" />\r\n        <text fontSize={fontSize} x={(m+width)/2+20} y={m-16} fill={color}>{set.edge.top}</text>\r\n        </>\r\n    );\r\n}\r\nexport {Edge};","import React from 'react';\r\nimport '../App.css';\r\n\r\nfunction getCount(set,o){\r\n    let listS = o.SHEET_WIDTH*o.SHEET_LENGHT*o.SHEET_FILLING_AREA;\r\n    let S = 0;\r\n    let listCount = set.size > 0 ? 1 : 0;\r\n    let detailsCount = 0;\r\n    for (let detail of set.values()) {\r\n        let width = detail.nominalwidth;\r\n        let height = detail.nominalheight;\r\n        detailsCount += detail.count;\r\n        S += width*height*detail.count; // Считаем площадь детали по чистым размерам\r\n    }\r\n    // Считаем кол-во листов\r\n    listCount += Math.floor(S/listS);\r\n\r\n    return {\r\n        lists: listCount,\r\n        details: detailsCount\r\n    };\r\n}\r\n\r\nfunction Summary(props){\r\n\r\n    let set = props.set.details;\r\n    let o = props.options;\r\n    let summaryOut = [];\r\n    let summary = {\r\n        'Материал': o.SHEET_NAME,\r\n        'Размер': `${o.SHEET_WIDTH}мм x ${o.SHEET_LENGHT}мм x ${o.SHEET_DEPTH}мм`,\r\n        'Листов в раскрое': getCount(set,o).lists,\r\n        'Цена за лист': `${o.SHEET_PRICE} руб.`,\r\n        'Всего деталей': getCount(set,o).details\r\n    }\r\n    let materialImageUrl = 'http://rondo.96min.ru/' + window.importOptions.SHEET_PICTURE_URL;\r\n\r\n    for(let key in summary){\r\n        summaryOut.push(<SummItem key={key} title={key} value={summary[key]} />);\r\n    }\r\n    \r\n    return(\r\n        <div id=\"summary\" style={{backgroundImage:\"url(\" + (materialImageUrl) + \")\"}}>\r\n            {summaryOut}\r\n            <div className=\"summ-item\">\r\n                <span><b>Примерная стоимость:</b></span>\r\n                <span><b>{summ(props.set,o,true)}</b></span>\r\n            </div>\r\n            <MoreOrderDetails set={props.set} o={o} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport {Summary};\r\n\r\nclass MoreOrderDetails extends React.Component{\r\n\r\n    state = {\r\n        open: false,\r\n    }\r\n\r\n    render(){\r\n        if(this.state.open)\r\n            return(\r\n                <div className=\"summ-item more\">\r\n                    <span onClick={() => this.setState({open:false})} className=\"action-link red w100p\"><b>Свернуть</b></span>\r\n                    {summ(this.props.set, this.props.o)}\r\n                </div>\r\n            );\r\n        else\r\n            return(\r\n                <div className=\"summ-item\">\r\n                    <span onClick={() => this.setState({open:true})} className=\"action-link red\"><b>Подробнее о расчёте</b></span>\r\n                </div>\r\n            );\r\n    }\r\n}\r\n\r\nfunction SummItem(props){\r\n\r\n    return(\r\n        <div className=\"summ-item\">\r\n            <span>{props.title}: </span>\r\n            <span>{props.value}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction summ(set,o,final=false){\r\n    let listS = o.SHEET_WIDTH*o.SHEET_LENGHT*o.SHEET_FILLING_AREA;\r\n    let S = 0;\r\n    let listCount = set.details.size > 0 ? 1 : 0;\r\n    let edge = {sm:0, lg:0}\r\n    let angle = 0;\r\n    let groove = 0;\r\n    let loops = 0;\r\n    let billing = set.billingOptions ? set.billingOptions : false;\r\n    for (let detail of set.details.values()) {\r\n        let width = detail.nominalwidth;\r\n        let height = detail.nominalheight;\r\n        let detailsCount = detail.count;\r\n\r\n        S += width*height*detailsCount; // Считаем площадь детали по чистым размерам\r\n        \r\n        // Кромление\r\n        for(let edgeSide in detail.edge){ \r\n            let edgeSize = detail.edge[edgeSide];\r\n            if( edgeSize > 0 && edgeSize < 1){\r\n                edgeSide === 'left' || edgeSide === 'right' ? edge.sm += height : edge.sm += width;\r\n            }\r\n            else if(edgeSize > 0 && edgeSize > 1){\r\n                edgeSide === 'left' || edgeSide === 'right' ? edge.lg += height : edge.lg += width;\r\n            }\r\n        }\r\n        // Углы\r\n        if(detail.lt.x > 0 || detail.rt.x > 0 || detail.rb.x > 0 || detail.lb.x > 0)\r\n            angle++;\r\n        // Петли\r\n        if(detail.loops && detail.loops.side !== 'none')\r\n            loops += detail.loops.count;\r\n        // Пазы\r\n        if(detail.groove)\r\n            groove++;\r\n        \r\n    }\r\n\r\n    // Считаем кол-во листов\r\n    listCount += Math.floor(S/listS);\r\n\r\n    let edgeSM = edge.sm*o.EDGE_MULTIPLICATOR/1000*Math.abs(o.PRICE_EDGE_04);\r\n    let edgeLG = edge.lg*o.EDGE_MULTIPLICATOR/1000*Math.abs(o.PRICE_EDGE_02);\r\n    let edgeSumm = Math.round(edgeSM+edgeLG+((edge.sm+edge.lg)*o.EDGE_MULTIPLICATOR/1000*Math.abs(o.PRICE_EDGING)));\r\n    let material = listCount*o.SHEET_PRICE;\r\n    let work = listCount*o.PRICE_SHEET_CUTTING;\r\n    let angles = angle*Math.abs(o.PRICE_CURVATURE);\r\n    let finalLoops = loops*Math.abs(o.PRICE_LOOP);\r\n    let finalGrooves = groove*Math.abs(o.PRICE_GROOVE);\r\n    let pack = billing && billing.inbox && listCount > 0 ? 200 : 0;\r\n    let finalSumm = material+work+edgeSumm+angles+finalLoops+finalGrooves+pack;\r\n    \r\n    // Billing options\r\n    let billingOptions = [];\r\n    if(billing){\r\n        if(billing.faster)\r\n            billingOptions.push(<tr><td>Срочный распил</td><td>{finalSumm*0.25}</td></tr>);\r\n        if(billing.inbox)\r\n            billingOptions.push(<tr><td>Упаковка</td><td>{200}</td></tr>);\r\n        if(billing.poddon)\r\n            billingOptions.push(<tr><td>На поддон</td><td>{360}</td></tr>);\r\n    }\r\n    \r\n    if(final){        \r\n        if(billing && billing.faster)\r\n            finalSumm *= 1.25;\r\n\r\n        return price(finalSumm);\r\n    }\r\n    return(\r\n        <table className=\"w100p\">\r\n            <tbody>\r\n                <tr><td>Материал</td><td>{price(material)}</td></tr>\r\n                <tr><td>Рез</td><td>{price(work)}</td></tr>\r\n                <tr><td>Кромление</td><td>{price(edgeSumm)}</td></tr>\r\n                <tr><td>Криволинейность</td><td>{price(angles)}</td></tr>\r\n                <tr><td>Петли</td><td>{price(finalLoops)}</td></tr>\r\n                <tr><td>Пазы</td><td>{price(finalGrooves)}</td></tr>\r\n                {billingOptions}\r\n            </tbody>\r\n        </table>\r\n    );\r\n}\r\n\r\nfunction price(number){\r\n    return (number).toFixed(1).replace(/\\d(?=(\\d{3})+\\.)/g, '$&,')  + ' руб.';\r\n}","import React from 'react';\r\nimport '../App.css';\r\nimport {Summary} from './summary';\r\n\r\nclass Checkout extends React.Component{\r\n\r\n    state = {\r\n        mess: ''\r\n    }\r\n\r\n    setRequest = (e) => {\r\n        e.preventDefault()\r\n\r\n        // Проверяем поля формы\r\n        if(\r\n            this.state.username === undefined\r\n            || this.state.useremail === undefined\r\n            || this.state.userphone === undefined){\r\n                this.setState({mess: 'Заполните обязательные поля'});\r\n                return;\r\n        }\r\n\r\n        let json = createRequestData(this.props.data, this.state);\r\n        let svgs = this.props.svgs;\r\n        let url = this.props.data.importOptions.REQUEST_URL;\r\n        let formData = new FormData();\r\n        formData.append('order', json);\r\n        formData.append('svg', JSON.stringify(svgs));\r\n        formData.append('mailto', this.props.data.importOptions.MAILTO);\r\n        this.setState(\r\n            {mess: 'Отправка заявки...'},\r\n            () => fetch(url, { method: 'POST', body: formData })\r\n                .then(\r\n                    (res) => {\r\n                        this.setState({mess: 'Заказ создан успешно.'});\r\n                    },\r\n                    (error) => {\r\n                        this.setState({mess: 'Ошибка при создании заказа #' + error});\r\n                    }\r\n                )\r\n        )\r\n        \r\n    }\r\n\r\n    heandleChange = (e) => {\r\n        let target = e.target;\r\n        let fieldName = target.name;\r\n        const value = target.type === 'checkbox' ? target.checked : target.value;\r\n\r\n        this.setState(\r\n            {[fieldName]: value, mess: ''},\r\n            () => {\r\n                if(fieldName === 'faster' || fieldName === 'inbox' || fieldName === 'poddon')\r\n                    this.props.setOrderDataFunc(fieldName, this.state[fieldName]);\r\n            }\r\n        );        \r\n    }\r\n\r\n    render(){\r\n        const data = this.props.data;\r\n        const billing = data.billingOptions;\r\n        let message = this.state.mess ? <div id=\"message\">{this.state.mess}</div> : '';\r\n        return(\r\n            <>\r\n            <Summary set={data} options={data.importOptions} />\r\n            <h4 className=\"tac\">Заполните форму ниже</h4>\r\n            <form onSubmit={this.setRequest} id=\"checkoutForm\">\r\n                <fieldset className=\"flex w100p\">\r\n                    <legend>Ваши данные</legend>\r\n                    <label className=\"reqiured-field\">\r\n                        <input type=\"text\" name=\"username\" required defaultValue={this.state.username} placeholder=\"ФИО\" onChange={this.heandleChange} />\r\n                    </label>\r\n                    <label className=\"reqiured-field\">\r\n                        <input type=\"phone\" name=\"userphone\" required defaultValue={this.state.userphone} placeholder=\"Телефон\" onChange={this.heandleChange} />\r\n                    </label>\r\n                    <label className=\"reqiured-field\">\r\n                        <input type=\"email\" name=\"useremail\" required defaultValue={this.state.useremail} placeholder=\"Ваш email\" onChange={this.heandleChange} />\r\n                    </label>\r\n                    <label className=\"\">\r\n                        <textarea name=\"usercomment\" defaultValue={this.state.usercomment} placeholder=\"Комментарий к заказу\" onChange={this.heandleChange}></textarea>\r\n                    </label>\r\n                </fieldset>\r\n                <fieldset className=\"flex w100p\">\r\n                    <legend>Дополнительно</legend>\r\n                    <label className=\"flex-center\">\r\n                        <span className=\"fons12\">Срочный распил</span>\r\n                        <input type=\"checkbox\" name=\"faster\" checked={billing.faster} onChange={this.heandleChange} />\r\n                    </label>\r\n                    <label className=\"flex-center\">\r\n                        <span className=\"fons12\">Упаковка в плёнку</span>\r\n                        <input type=\"checkbox\" name=\"inbox\" checked={billing.inbox} onChange={this.heandleChange} />\r\n                    </label>\r\n                    <label className=\"flex-center\">\r\n                        <span className=\"fons12\">Упаковка на поддон</span>\r\n                        <input type=\"checkbox\" name=\"poddon\" checked={billing.poddon} onChange={this.heandleChange} />\r\n                    </label>\r\n                </fieldset>\r\n                <fieldset className=\"w100p\">\r\n                    <legend>Доставка</legend>\r\n                    <label>\r\n                        <input type=\"text\" name=\"billingaddress\" defaultValue={this.state.billingaddress} placeholder=\"Адрес доставки\" onChange={this.heandleChange} />\r\n                    </label>\r\n                </fieldset>\r\n            </form>\r\n            <div id=\"calc-form-controlls-wrapper\">\r\n                <button className=\"btn\" onClick={this.props.toOrderFunc}>Назад к списку</button>\r\n                <button className=\"btn\" onClick={this.setRequest}>Создать заказ</button>\r\n            </div>\r\n            {message}\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport {Checkout};\r\n\r\nfunction createRequestData(data,form){\r\n    let details = data.details;\r\n    let o = data.importOptions;\r\n    let date = new Date();\r\n    let userData = `${form.username} \\n ${form.userphone} \\n ${form.useremail}`;\r\n    let space = '';\r\n    let order = [\r\n        [space],\r\n        ['Заказчик',userData,space,space,space,space,'дата',formatDate(date)],\r\n        [space],\r\n        ['Цвет плиты',o.SHEET_COLOR,space,'Толщина плиты',o.SHEET_DEPTH],\r\n        [space],\r\n        ['Цвет кромки',space,'Обозначение',space],\r\n        ['Цвет кромки',space,'Обозначение',space],\r\n        ['Цвет кромки',space,'Обозначение',space],\r\n        [space],\r\n        ['ПОЗИЦИЯ','Длина','Ширина','Кол-во','Крома L1','Крома L2','Крома W1','Крома W2','Паз','Комментарий']\r\n    ]\r\n    //console.log(order);\r\n    let ind = 1;\r\n    details.forEach((d,key) => {\r\n        let textureRotate = d.textureRotate;\r\n        let width = d.nominalwidth;\r\n        let length = d.nominalheight;\r\n        let edgeL1 = d.edge.left;\r\n        let edgeL2 = d.edge.right;\r\n        let edgeW1 = d.edge.bot;\r\n        let edgeW2 = d.edge.top;\r\n        // Если текстура повёрнута, меняем значения ширина-длина\r\n        if(textureRotate === 0){\r\n            width = d.nominalheight;\r\n            length = d.nominalwidth;\r\n        }\r\n        // Если текстура повёрнута, меняем значения кромок L-W\r\n        if(textureRotate === 0){\r\n            edgeL1 = d.edge.bot;\r\n            edgeL2 = d.edge.top;\r\n            edgeW1 = d.edge.left;\r\n            edgeW2 = d.edge.right;\r\n        }\r\n        // Добавляем значения в таблицу\r\n        let row = [\r\n            `#${ind} ${key}`,\r\n            length,\r\n            width,\r\n            d.count,\r\n            edgeL1,edgeL2,edgeW1,edgeW2,\r\n            d.groove,\r\n            createComment(d,form)\r\n        ];\r\n        order.push(row);\r\n        ind++;\r\n    })\r\n    return JSON.stringify(order);\r\n}\r\n\r\nfunction createComment(d,form){\r\n    let comment = '';\r\n    // Добавляем углы\r\n    if(d.lt.x > 0 && d.lt.y > 0)\r\n        comment += `Левый верхний: х-${d.lt.x} у-${d.lt.y}\\n`\r\n    if(d.rt.x > 0 && d.rt.y > 0)\r\n        comment += `Правый верхний: х-${d.rt.x} у-${d.rt.y}\\n`\r\n    if(d.rb.x > 0 && d.rb.y > 0)\r\n        comment += `Правый нижний: х-${d.rb.x} у-${d.rb.y}\\n`\r\n    if(d.lb.x > 0 && d.lb.y > 0)\r\n        comment += `Левый нижний: х-${d.lb.x} у-${d.lb.y}\\n`\r\n    // Добавляем петли\r\n    if(d.loops && d.loops.side !== 'none'){\r\n        comment += `Кол-во петель: ${d.loops.count}\\n`\r\n        comment += `Сторона: ${d.loops.side}\\n`\r\n        comment += `До первой: ${d.loops.before}\\n`\r\n        comment += `До последней: ${d.loops.after}\\n`\r\n    }\r\n    // Добавляем доп.опции\r\n    if(form.faster)\r\n        comment += 'Срочный распил - да\\n';\r\n    if(form.inbox)\r\n        comment += 'Упаковка в плёнку - да\\n';\r\n    if(form.poddon)\r\n        comment += 'Упаковка в поддон - да\\n';\r\n\r\n    return comment;\r\n}\r\n\r\nfunction formatDate(date) {\r\n\r\n    var dd = date.getDate();\r\n    if (dd < 10) dd = '0' + dd;\r\n  \r\n    var mm = date.getMonth() + 1;\r\n    if (mm < 10) mm = '0' + mm;\r\n  \r\n    var yy = date.getFullYear() % 100;\r\n    if (yy < 10) yy = '0' + yy;\r\n  \r\n    return dd + '.' + mm + '.' + yy;\r\n  }","import React from 'react';\nimport './App.css';\nimport {LoopsOptions, Loops} from './components/loops';\nimport {GrooveOptions, Groove} from './components/groove';\nimport {EdgeOptions, Edge} from './components/edge';\nimport {Summary} from './components/summary';\nimport {Checkout} from './components/checkout';\nimport {Helper} from './helper';\n\nconst help = new Helper();\n\nclass CopyDetail{\n  constructor(data){\n    this.detail = {\n      'title': data.title + ' (копия)',\n      'width': data.width,\n      'nominalwidth': data.width,\n      'minWidth': 60,\n      'maxWidth': window.importOptions.SHEET_WIDTH,\n      'height': data.height,\n      'nominalheight': data.height,\n      'minHeight': 60,\n      'maxHeight': window.importOptions.SHEET_LENGHT,\n      'count': 1,\n      'reserve':{\n        'left': data.reserve.left,\n        'top': data.reserve.top,\n        'right': data.reserve.right,\n        'bot': data.reserve.bot\n      },\n      'lt': {title:'Левый верхний' , prev:'lb', next:'rt', x:data.lt.x, y:data.lt.y, type:data.lt.type},\n      'rt': {title:'Правый верхний', prev:'lt', next:'rb', x:data.rt.x, y:data.rt.y, type:data.rt.type},\n      'rb': {title:'Правый нижний' , prev:'rt', next:'lb', x:data.rb.x, y:data.rb.y, type:data.rb.type},\n      'lb': {title:'Левый нижний'  , prev:'rb', next:'lt', x:data.lb.x, y:data.lb.y, type:data.lb.type},\n      'loops': data.loops,\n      'groove': data.groove,\n      'grooveIndent': 16,\n      'grooveWidth': 4,\n      'grooveDeep': 8,\n      'edge': data.edge,\n      'edgeMin': 0.4,\n      'edgeMax': 2.0,\n      'textureRotate': data.textureRotate,\n      'svg': null,\n    }\n  }\n  create(){\n    return this.detail;\n  }\n}\n\nclass App extends React.Component {\n\n  state = {\n    stage: 'setorder',\n    details: new Map(),\n    importOptions: window.importOptions,\n    inputType: 'number',\n    activeDetail: null,\n    billingOptions: {\n      faster: false,\n      inbox: false,\n      poddon: false,\n    }\n  }\n\n  addNewDetailFunc = (e) => {\n    let newDetail = {\n      'title': \"Деталь #\" + (this.state.details.size + 1),\n      'width': 400,\n      'nominalwidth': 400,\n      'minWidth': 60,\n      'maxWidth': 2040,\n      'height': 600,\n      'nominalheight': 600,\n      'minHeight': 60,\n      'maxHeight': 2770,\n      'count': 1,\n      'reserve':{\n        'left': false,\n        'top': false,\n        'right': false,\n        'bot': false    \n      },\n      'lt': {title:'Левый верхний' , prev:'lb', next:'rt', x:0, y:0, type:'outside'},\n      'rt': {title:'Правый верхний', prev:'lt', next:'rb', x:0, y:0, type:'outside'},\n      'rb': {title:'Правый нижний' , prev:'rt', next:'lb', x:0, y:0, type:'outside'},\n      'lb': {title:'Левый нижний'  , prev:'rb', next:'lt', x:0, y:0, type:'outside'},\n      'loops': false,\n      'groove': false,\n      'grooveIndent': 16,\n      'grooveWidth': 4,\n      'grooveDeep': 8,\n      'edge':{\n        'left': 0.0,\n        'top': 0.0,\n        'right': 0.0,\n        'bot': 0.0    \n      },\n      'edgeMin': 0.4,\n      'edgeMax': 2.0,\n      'textureRotate': 90,\n      'svg': null,\n    }\n    let details = this.state.details;\n    let detailKey = 'D-' + new Date().getTime();\n    let activeDetail = detailKey;\n    details.set(detailKey, newDetail);\n    this.setState({details,activeDetail});\n\n    return detailKey;\n  }\n\n  fromCheckout = (field,value) => {\n    let billingOptions = this.state.billingOptions;\n    billingOptions[field] = value;\n    this.setState({billingOptions});\n  }\n\n  inputOnChange = (angleTitle, obj, detailKey) => {\n    let details = this.state.details;\n    let detail = details.get(detailKey);\n\n    for(let key in obj){\n      detail[angleTitle][key] = obj[key];\n    }\n\n    details.set(detailKey,detail);\n    this.setState({details});\n  }\n\n  clearReserve = (set,item) => {\n    for(let side in set.reserve){\n      if(set.reserve[side] === item)\n        set.reserve[side] = false;\n    }\n    if(item === 'loops')\n      set.loops.side = false;\n    \n    return set;\n  }\n\n  handleSetDetailSize = (detailKey, side, value) => {\n    let details = this.state.details;\n    let detail = details.get(detailKey);\n\n    detail[side] = value;      \n    \n    if(side === 'width' && value > 500){\n      detail[side] = 500;\n    }\n    else if(side === 'width' && value < 150){\n      detail[side] = 150;\n    }\n    else if(side === 'height' && value > 700){\n      detail[side] = 700;\n    }\n    else if(side === 'height' && value < 150){\n      detail[side] = 150;\n    }\n\n    // Сбрасываем петли, если для них нет места\n    if(side === 'width' && value < 150){\n      if(detail.loops){\n        if(detail.loops.side === 'top' || detail.loops.side === 'bot'){\n          detail = this.clearReserve(detail,'loops');\n        }\n      }\n    }\n    if(side === 'height' && value < 150){\n      if(detail.loops){\n        if(detail.loops.side === 'left' || detail.loops.side === 'right'){\n          detail = this.clearReserve(detail,'loops');\n        }\n      }\n    }\n    \n    detail['nominal'+side] = value;\n    details.set(detailKey,detail);\n    this.setState({details});\n  }\n\n  loopChange = (loops, detailKey) => {\n    let details = this.state.details;\n    let detail = details.get(detailKey);\n    let width = detail.width;\n    let height = detail.height;\n\n    // Резервируем сторону детали, если она свободна\n    if(!detail.reserve[loops.side]){\n      for(let loopSide in detail.reserve){\n        if(detail.reserve[loopSide] === 'loops')\n          detail.reserve[loopSide] = false;\n      }\n      if(loops.side !== 'none')\n        detail.reserve[loops.side] = 'loops';\n    }\n    \n    // Здесь пересчитываем расположение последней петли, \n    // если оно дальше границы детали\n    if(loops.side === 'left' || loops.side === 'right'){\n      if(loops.after > height){\n        loops.after = height - 100;\n      }\n    }\n    else{\n      if(loops.after > width){\n        loops.after = width - 100;\n      }\n    }\n    // Перезаписываем объект детали с новыми данными петель\n    detail.loops = loops;\n    details.set(detailKey,detail);\n    this.setState({details});\n  }\n\n  grooveChange = (side, detailKey) => {\n    let details = this.state.details;\n    let detail = details.get(detailKey);\n\n    // Резервируем сторону детали, если она свободна\n    if(!detail.reserve[side] || detail.reserve[side] === 'groove'){\n      this.clearReserve(detail,'groove');\n      if(side !== 'none'){\n        detail.reserve[side] = 'groove';\n        detail.groove = side;\n      }\n      else{\n        detail.groove = false;\n      }\n    }\n\n    details.set(detailKey,detail);\n    this.setState({details});\n  }\n\n  edgeChange = (edge,detailKey) => {\n    let details = this.state.details;\n    let detail = details.get(detailKey);\n    detail.edge = edge;\n    details.set(detailKey,detail);\n    this.setState({details});\n  }\n\n  changeDetailOptions = (e) => {\n    let target = e.target;\n    let activeDetail = target.closest('.detail').dataset.key;\n    let action = target.dataset.action;\n    let details = this.state.details;\n    if(action === 'remove'){\n      let confirm = window.confirm('Удалить деталь? Это действие нельзя отменить.');\n      if(confirm){\n        details.delete(activeDetail);\n        this.setState({details});\n      }\n      return;\n    }\n    if(action === 'copy'){\n      let d = new CopyDetail(details.get(activeDetail));\n      let newDetail = d.create();\n      let detailKey = 'D-' + new Date().getTime();\n      activeDetail = detailKey;\n      details.set(detailKey, newDetail);\n      this.setState({details,activeDetail}, this.forceUpdate());\n    }\n    if(action === 'close'){\n      this.setState({activeDetail: null});\n      return;\n    }\n    if(action === 'rotate'){\n      let detail = details.get(activeDetail);\n      let width = detail.width;\n      let nominalwidth = detail.nominalwidth;\n      let height = detail.height;\n      let nominalheight = detail.nominalheight;\n      detail.textureRotate = detail.textureRotate > 0 ? 0 : 90;\n      // detail.width = height;\n      // detail.nominalwidth = nominalheight;\n      // detail.height = width;\n      // detail.nominalheight = nominalwidth;\n\n      if(width >= 500){\n        detail.width = 500;\n      }\n      else if(width < 150){\n        detail.width = 150;\n      }\n      else if(height >= 700){\n        detail.height = 700;\n      }\n      else if(height < 150){\n        detail.height = 150;\n      }\n\n      details.set(activeDetail,detail);\n      this.setState({details});\n      return;\n    }\n    this.setState({activeDetail});\n  }\n\n  toCheckoutFunc = () => {\n    this.saveSVG();\n    this.setState({stage: 'checkout'});\n  }\n  toOrder = () => {\n    this.setState({stage: 'setorder'});\n  }\n\n  saveSVG = () => {\n    let svgsDOM = document.querySelectorAll('#root svg');\n    let svgs = {};\n    svgsDOM.forEach((el,ind,arr) => {\n      let key = el.id;\n      svgs[key] = arr[ind].outerHTML;\n    })\n    this.svgs = svgs;\n  }\n  \n  render(){\n    let stage = this.state.stage === 'checkout' ? true : false;\n    let hasDetails = this.state.details.size > 0 ? false: true;\n    \n    if(stage)\n      return(\n      <>\n      <Checkout \n        data={this.state} \n        toOrderFunc={this.toOrder} \n        svgs={this.svgs} \n        setOrderDataFunc={this.fromCheckout} />\n      <div className=\"copyright\">\n        Приложение разработано в интернет-агентстве <a rel=\"noreferrer\" target=\"_blank\" href=\"https://alpha-max.ru\">Альфамакс</a>\n      </div>\n      </>\n      )\n\n    return (\n      <>\n      <Summary set={this.state} options={this.state.importOptions} />\n      {this.state.details.size > 2 && \n      <FormControls isDisabled={hasDetails} addNewDetailFunc={this.addNewDetailFunc} toCheckoutFunc={this.toCheckoutFunc} />}\n      <DetailsList\n        activeDetail={this.state.activeDetail} \n        changeDetailOptions={this.changeDetailOptions}\n        saveSVGfunc = {this.saveSVG}\n        list={this.state.details}\n        loopF={this.loopChange} \n        grooveF={this.grooveChange} \n        edgeF={this.edgeChange}\n        f={this.inputOnChange} \n        ff={this.handleSetDetailSize} />\n      <FormControls isDisabled={hasDetails} addNewDetailFunc={this.addNewDetailFunc} toCheckoutFunc={this.toCheckoutFunc} />\n      <div className=\"copyright\">\n        Приложение разработано в интернет-агентстве <a rel=\"noreferrer\" target=\"_blank\" href=\"https://alpha-max.ru\">Альфамакс</a>\n      </div>\n      </>\n    );\n  }\n}\nexport default App;\n\nclass DetailsList extends React.Component{\n  state = {}\n\n  render(){\n    let list = [];\n    let set = this.props.f;\n    let setSizeF = this.props.ff;\n    let loopF = this.props.loopF;\n    let grooveF = this.props.grooveF;\n    let edgeF = this.props.edgeF;\n    let activeKey = this.props.activeDetail;\n    let saveSVG = this.props.saveSVGfunc;\n    let changeDetailOptions = this.props.changeDetailOptions;\n    this.props.list.forEach(function(value,key) {\n      list.push( <Detail \n        activeKey={activeKey === key ? 1 : 0}\n        changeDetailOptions={changeDetailOptions}\n        saveSVGfunc={saveSVG}\n        ff={setSizeF} \n        f={set} \n        loopF={loopF} \n        grooveF={grooveF}\n        edgeF={edgeF} \n        key={key} \n        dkey={key} \n        value={value} /> );\n    });\n    return(\n      <>\n      <h2>Список деталей</h2>\n      {list.length > 0 ? list : 'Список пуст'}\n      </>\n    );\n  }\n}\n\nclass Detail extends React.Component{\n  state = {}\n\n  handleSetSize = (e) => {\n    e.preventDefault();\n    let fieldName = e.target.name;\n    let key = this.props.dkey;\n    let min = +e.target.min;\n    let max = +e.target.max;\n    let value = +e.target.value.toString();\n\n    this.setState({[fieldName]: value}, () => {\n      if(value < min || value > max)\n        e.target.classList.add('error')\n        if(value > max){\n          value = max;\n          e.target.classList.remove('error')\n        }\n      else\n        e.target.classList.remove('error')\n\n      this.props.ff(key,fieldName,value);\n    })\n  }\n  handleSetTitle = (e) => {\n    let fieldName = e.target.name;\n    let value = e.target.value;\n    let key = this.props.dkey;\n\n    this.props.ff(key,fieldName,value);\n  }\n\n  render(){\n    let set = this.props.value;\n    let o = window.importOptions;\n    if(this.props.activeKey === 0){\n      return(\n        <div className=\"detail not-active\" data-key={this.props.dkey}>\n          <div className=\"detail-settings w100p\">\n            <div className=\"flex-nowrap\">\n              <fieldset id=\"detail-size\" className=\"flex\">\n                <legend>Размеры</legend>\n                <label className=\"w100p\">\n                  <input onChange={this.handleSetTitle} type=\"text\" name=\"title\" placeholder=\"Комментарий\" value={set.title} />\n                </label>\n                <label className=\"flex-column\">\n                  <span>Ширина, мм</span>\n                  <input onChange={this.handleSetSize} type=\"text\" pattern=\"[0-9]\" maxLength=\"4\" name=\"width\" min=\"60\" max={o.SHEET_WIDTH} value={set.nominalwidth.toString()} />\n                </label>\n                <label className=\"flex-column\">\n                  <span>Длина, мм</span>\n                  <input onChange={this.handleSetSize} type=\"number\" maxLength=\"4\" name=\"height\" min=\"60\" max={o.SHEET_LENGHT} value={set.nominalheight.toString()} />\n                </label>\n                <label className=\"flex-column\">\n                  <span>Кол-во, шт</span>\n                  <input onChange={this.handleSetSize} type=\"number\" maxLength=\"4\" name=\"count\" min=\"1\" max=\"1000\" value={set.count} />\n                </label>\n              </fieldset>\n              <fieldset className=\"detail-ext-options\">\n                <legend>Опции</legend>\n                <button data-action=\"change\" onClick={this.props.changeDetailOptions} className=\"btn\">Редактировать</button>\n                <button data-action=\"copy\" onClick={this.props.changeDetailOptions} className=\"btn\">Копировать</button>\n              </fieldset>\n            </div>\n          </div>\n          <div className=\"detail-plan\">\n            <DetailPlan id={this.props.dkey} set={this.props.value} saveSVGfunc={this.props.saveSVGfunc} />\n            <button className=\"remove-detail-btn\" data-action=\"remove\" onClick={this.props.changeDetailOptions} title=\"Удалить деталь\"></button>\n          </div>\n        </div>\n      )\n    }\n    return(\n      <div className=\"detail active\" data-key={this.props.dkey}>\n        <div className=\"detail-settings w100p\">\n          <div className=\"flex-nowrap\">\n            <fieldset id=\"detail-size\" className=\"flex\">\n              <legend>Размеры</legend>\n              <label className=\"w100p\">\n                <input onChange={this.handleSetSize} type=\"text\" name=\"title\" placeholder=\"Комментарий\" value={set.title} />\n              </label>\n              <label className=\"flex-column\">\n                <span>Ширина, мм</span>\n                <input onInput={this.handleSetSize} \n                       type=\"number\" name=\"width\" min=\"60\" max={o.SHEET_WIDTH} \n                       value={help.prepareNumber(set.nominalwidth.toString())} />\n              </label>\n              <label className=\"flex-column\">\n                <span>Длина, мм</span>\n                <input onChange={this.handleSetSize} type=\"number\" name=\"height\" min=\"60\" max={o.SHEET_LENGHT} value={set.nominalheight.toString()} />\n              </label>\n              <label className=\"flex-column\">\n                <span>Кол-во, шт</span>\n                <input onChange={this.handleSetSize} type=\"number\" name=\"count\"  min=\"1\" max=\"1000\" value={set.count.toString()} />\n              </label>\n            </fieldset>\n\n            <fieldset id=\"edge\" className=\"flex\">\n              <legend>Кромка</legend>\n              <EdgeOptions func={this.props.edgeF} set={this.props.value} />\n            </fieldset>\n            \n            <div className=\"detail-ext-options\">\n              <button data-action=\"close\" onClick={this.props.changeDetailOptions} className=\"btn\">Свернуть</button>\n              <button data-action=\"copy\" onClick={this.props.changeDetailOptions} className=\"btn\">Копировать</button>\n              <button data-action=\"rotate\" onClick={this.props.changeDetailOptions} className=\"btn\">Повернуть текстуру</button>\n            </div>\n          </div>\n\n          <fieldset id=\"angles\" className=\"w100p\">\n            <legend>Углы</legend>\n            <AngleOptions angleName='lt' func={this.props.f} set={this.props.value} />\n            <AngleOptions angleName='rt' func={this.props.f} set={this.props.value} />\n            <AngleOptions angleName='rb' func={this.props.f} set={this.props.value} />\n            <AngleOptions angleName='lb' func={this.props.f} set={this.props.value} />\n          </fieldset>\n\n          <fieldset id=\"loops\" className={set.loops && set.loops.side !== 'none' ? 'flex w100p' : 'flex w50p'}>\n            <legend>Петли</legend>\n            <LoopsOptions func={this.props.loopF} set={this.props.value} />\n          </fieldset>\n\n          <fieldset id=\"groove\" className=\"flex w50p\">\n            <legend>Паз</legend>\n            <GrooveOptions func={this.props.grooveF} set={this.props.value} />\n          </fieldset>\n\n        </div>\n        <div className=\"detail-plan\">\n          <DetailPlan id={this.props.dkey} set={this.props.value} />\n          <button className=\"remove-detail-btn\" data-action=\"remove\" onClick={this.props.changeDetailOptions} title=\"Удалить деталь\"></button>\n        </div>\n      </div>\n    )\n  }\n}\n\nclass AngleOptions extends React.Component{\n  state = {\n    active: false,\n    type: 'outside',\n    send: true,\n    x: 0,\n    y: 0,\n  }\n\n  handleInputChange = (event) => {\n    const target = event.target;\n    let value = target.type === 'checkbox' ? target.checked : Math.abs(target.value);\n    const name = target.name;\n\n    if(target.type === 'number' && this.state.send){\n      const breakPoint = target.dataset.break;\n      const max = target.max;\n      if(value > max) value = max;\n      this.setState({\n        x: value <= breakPoint ? value : breakPoint,\n        y: value,\n      }, () => this.backToApp(target))\n    }\n    else{\n      this.setState({\n        [name]: value\n      }, () => this.backToApp(target));\n    }\n    \n    \n  }\n\n  backToApp = (target) => {// Отправляем данные угла назад\n    this.props.func(\n      this.props.angleName,\n      { \n        x:this.state.x,\n        y:this.state.y,\n        type:this.state.type,\n        title:this.props.set[this.props.angleName].title,\n        next:this.props.set[this.props.angleName].next,\n        prev:this.props.set[this.props.angleName].prev\n      },\n      target.closest('.detail').dataset.key\n    );\n  }\n\n  handleTypeChange = (e) => {\n    let type = e.target.name;\n    this.setState(function(state, props){\n      this.props.func( // Отправляем данные угла назад\n        props.angleName,\n        {\n          x:state.x,\n          y:state.y,\n          type:type,\n          title:props.set[props.angleName].title,\n          next:props.set[props.angleName].next,\n          prev:props.set[props.angleName].prev,\n        },\n        e.target.closest('.detail').dataset.key\n      );\n      return {type: type};\n    });\n  }\n\n  handleInputActive = (e) => {\n    const value = e.target.checked;\n    this.setState({\n      active: value\n    })\n    this.props.func(\n      this.props.angleName,\n      { // Отправляем данные угла назад\n        x: value ? this.state.x : 0,\n        y: value ? this.state.y : 0,\n        type:this.state.type,\n        title:this.props.set[this.props.angleName].title,\n        next:this.props.set[this.props.angleName].next,\n        prev:this.props.set[this.props.angleName].prev\n      },\n      e.target.closest('.detail').dataset.key\n    );\n  }\n\n  render(){\n    let set = this.props.set;\n    let next = set[set[this.props.angleName].next];\n    let prev = set[set[this.props.angleName].prev];\n    let maxX = 101;\n    let maxY = 101;\n    \n    if(this.props.angleName === 'lt'){\n      maxY = +set.width - next.y;\n      maxX = +set.height - prev.x;\n    }\n    else if(this.props.angleName === 'rt'){\n      maxY = +set.width - prev.y;\n      maxX = +set.height - next.x;\n    }\n    else if(this.props.angleName === 'rb'){\n      maxY = +set.width - next.y;\n      maxX = +set.height - prev.x;\n    }\n    else{\n      maxY = +set.width - prev.y;\n      maxX = +set.height - next.x;\n    }\n\n    let input = <span><input onChange={this.handleInputActive} type=\"checkbox\" name=\"active\" checked={this.state.active} /></span>;\n    // Если сторона зарезервирована\n    let closedAngle = [];\n    let reserveL = set.reserve.left;\n    let reserveT = set.reserve.top;\n    let reserveR = set.reserve.right;\n    let reserveB = set.reserve.bot;\n    let motive = '';\n    if( reserveL === 'loops' || reserveL === 'groove'){\n      closedAngle = ['lb','lt'];\n      reserveL === \"loops\" ? motive = 'петлями' : motive = 'пазом';\n    }\n    else if(reserveT === 'loops' || reserveT === 'groove'){\n      closedAngle = ['lt','rt'];\n      reserveT === \"loops\" ? motive = 'петлями' : motive = 'пазом';\n    }\n    else if(reserveR === 'loops' || reserveR === 'groove'){\n      closedAngle = ['rt','rb'];\n      reserveR === \"loops\" ? motive = 'петлями' : motive = 'пазом';\n    }\n    else if(reserveB === 'loops' || reserveB === 'groove'){\n      closedAngle = ['rb','lb'];\n      reserveB === \"loops\" ? motive = 'петлями' : motive = 'пазом';\n    }\n\n    closedAngle.forEach((el)=>{\n      if(this.props.angleName === el)\n        input = <span className=\"reserve-notice red\">Сторона занята {motive}</span>;\n    })\n\n    // Закрытое положение\n    if(!this.state.active){\n      return(\n        <div className=\"angle-options-wrapper\">\n          <div className=\"angle-options-type w100p\">\n            <label className=\"angle-title-wrapper\">\n              <span className={`angle-title ${this.props.angleName}`}>{set[this.props.angleName].title}</span>\n              {input}\n            </label>\n          </div>\n        </div>\n      )\n    }\n    // Открытое положение\n    return(\n      <div className={`angle-options-wrapper ${this.state.active && 'active'}`}>\n        <div className=\"angle-options-type w100p\">\n          <label className=\"angle-title-wrapper\">\n            <span className={`angle-title ${this.props.angleName}`}>{set[this.props.angleName].title}</span>\n            <span><input onChange={this.handleInputActive} type=\"checkbox\" name=\"active\" checked={this.state.active} /> вкл.</span>\n          </label>\n          <button onClick={this.handleTypeChange} name=\"outside\" className=\"angle-type__outside ml-a\" data-active={this.state.type === 'outside' && 'active' }>Наружный</button>\n          <button onClick={this.handleTypeChange} name=\"linear\" className=\"angle-type__linear\" data-active={this.state.type === 'linear' && 'active' }>Прямой</button>\n          <button onClick={this.handleTypeChange} name=\"inside\" className=\"angle-type__inside\" data-active={this.state.type === 'inside' && 'active' }>Внутренний</button>\n        </div>\n        <label className=\"\">\n          X <input \n              onInput={this.handleInputChange} \n              type=\"number\" \n              name=\"y\" \n              min=\"30\" \n              max={maxY} \n              data-break={maxX} \n              step=\"1\" \n              value={this.state.y.toString()} />\n            <span>max: <b>{maxY}</b>&nbsp;мм</span>\n        </label>\n        <label className=\"switch\">\n          <span>Объединить<br />показатели</span>\n          <input \n            onChange={this.handleInputChange} \n            name=\"send\" \n            type=\"checkbox\" \n            checked={this.state.send} />\n        </label>\n        <label className=\"\">\n          Y <input \n              onInput={this.handleInputChange} \n              type=\"number\" \n              name=\"x\" \n              min=\"30\" \n              max={maxX} \n              step=\"1\" \n              value={this.state.x.toString()} \n              disabled={this.state.send} />\n            <span>max: <b>{maxX}</b>&nbsp;мм</span>\n        </label>\n      </div>\n    );\n  }\n}\n\nfunction correctSize(side,min,max){\n  let m = Math.abs(side);\n  if(m < min)\n    return min;\n  else if(m > max)\n    return max;\n  else\n    return m;\n}\n\nfunction DetailPlan(props){\n  let set = props.set;\n  // Раздаём значения\n  let {width,nominalwidth,minWidth,maxWidth,height,nominalheight,minHeight,maxHeight,lt,rt,lb,rb} = set;\n  let m = 70;\n  const o = window.importOptions;\n\n  width = correctSize(width,minWidth,maxWidth);\n  height = correctSize(height,minHeight,maxHeight);\n\n  // Пробуем сохранить пропорции\n  if(nominalwidth >= 500)\n    height = set.height = Math.round(500/((Math.round(nominalwidth/nominalheight*10,-1)/10)));\n  if(height < 200)\n    height = set.height = 200;\n  \n  let ltA   = `M ${m} ${(Math.abs(lt.x) + m)} Q ${angleControlDotLT(m,lt)} ${(Math.abs(lt.y) + m)} ${m}`;\n  let top   = ` L ${(width-rt.y + m)} ${m}`;\n  let rtA   = ` Q ${angleControlDotRT(m,rt,set)} ${width+m} ${+rt.x + m}`;\n  let right = ` L ${(width + m)} ${(height - rb.x + m)}`;\n  let rbA   = ` Q ${angleControlDotRB(m,rb,set)} ${(width - rb.y + m)} ${(height + m)}`;\n  let bot   = ` L ${(+lb.y+m)} ${(height + m)}`;\n  let lbA   = ` Q ${angleControlDotLB(m,lb,set)} ${m} ${height-lb.x+m}`;\n\n  let bgWidth = 1169;\n  let bgHeight = 900;\n  let bgVector = set.textureRotate;\n  let color = \"brown\";\n\n  let svg = \n    <svg id={props.id} xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" viewBox={\"0 0 \" + (width+m*2) +' '+ (height+m*2)}>\n      {/* ФОН */}\n      <defs>\n        <pattern \n          id={`bg-${props.id}`} \n          patternUnits=\"userSpaceOnUse\" \n          preserveAspectRatio=\"none\" \n          patternTransform={`rotate(${bgVector}, ${0}, ${0})`}\n          width={bgWidth}\n          height={bgHeight}>\n          <image \n            href={o.TEXTURE_IMAGE_URL}\n            x={m} y={m} \n            opacity=\"0.5\"\n            width={bgWidth} \n            height={bgHeight} />\n        </pattern>\n      </defs>\n      {/* Деталь */}\n      <path d={ltA + top + rtA + right + rbA + bot + lbA + ' z'} stroke=\"#333333\" strokeWidth=\"3\" strokeLinejoin=\"miter\" fill={`url(#bg-${props.id})`} opacity=\"0.7\"/>\n      {/* Размеры углов */}\n      {/* LT */}\n      <path d={`M ${m} ${Math.abs(lt.x) + m} v -${lt.x} h ${lt.y}`} strokeWidth=\"2\" stroke={color} strokeDasharray=\"10\" fill=\"transparent\"/>\n      <text stroke={color} fontSize=\"130%\" x={-30} y={135} transform={`rotate(-90,${(20)},${(96)})`}>{lt.x}мм</text>\n      <text stroke={color} fontSize=\"130%\" x={m+10} y={m-10}>{lt.y}мм</text>\n      {/* RT */}\n      <path d={`M ${width+m} ${Math.abs(rt.x) + m} v -${rt.x} h -${rt.y}`} strokeWidth=\"3\" stroke={color} strokeDasharray=\"10\" fill=\"transparent\"/>\n      <text stroke={color} fontSize=\"130%\" x={width+m-70} y={m-10}>{rt.y}мм</text>\n      <text stroke={color} fontSize=\"130%\" x={(width+m-20)} y={m+50} transform={`rotate(-90,${(width+m)+10},${(m+30)})`}>{rt.x}мм</text>\n      {/* RB */}\n      <path d={`M ${width+m} ${height - rb.x + m} v ${rb.x} h -${rb.y}`}   strokeWidth=\"3\" stroke={color} strokeDasharray=\"10\" fill=\"transparent\"/>\n      <text stroke={color} fontSize=\"130%\" x={width+m-70} y={height+m+30}>{rb.y}мм</text>\n      <text stroke={color} fontSize=\"130%\" x={(width+m-20)} y={height+m+20} transform={`rotate(-90,${(width+m)-20},${(height+m-30)})`}>{rb.x}мм</text>\n      {/* LB */}\n      <path d={`M ${m} ${height - lb.x + m} v ${+lb.x} h ${+lb.y}`}        strokeWidth=\"3\" stroke={color} strokeDasharray=\"10\" fill=\"transparent\"/>\n      <text stroke={color} fontSize=\"130%\" x={m+10} y={height+m+30}>{lb.y}мм</text>\n      <text stroke={color} fontSize=\"130%\" x={(m-10)} y={height+m-10} transform={`rotate(-90,${m-10},${height+m-10})`}>{lb.x}мм</text>\n      {/* Размер детали */}\n      <text fontSize=\"150%\" x={(m+width)/2} y={20}>{nominalwidth}мм</text>\n      <text fontSize=\"150%\" transform={`rotate(-90,${20},${(m+height)/2})`} x={m/2-50} y={(m+height)/2}>{nominalheight}мм</text>\n      {/* Петли */} <Loops set={set} m={m} />\n      {/* Паз */} <Groove set={set} m={m} />\n      {/* Кромка */} <Edge set={set} m={m} />\n    </svg>;\n  return svg;\n}\nexport {DetailPlan};\n\nfunction angleControlDotLT(m,angle){\n  if(angle.type === 'outside')\n    return `${m} ${m}`;\n  else if(angle.type === 'linear')\n    return `${angle.x/2 + m} ${angle.y/2 + m}`;\n  else if(angle.type === 'inside')\n    return `${+angle.x + m} ${+angle.y + m}`;\n}\nfunction angleControlDotRT(m,angle,set){\n  if(angle.type === 'outside')\n    return `${(+set.width + m)} ${m}`;\n  else if(angle.type === 'linear')\n    return `${+set.width - angle.y/2 + m} ${angle.x/2 + m}`;\n  else if(angle.type === 'inside')\n    return `${+set.width - angle.y + m} ${+angle.x + m}`;\n}\nfunction angleControlDotRB(m,angle,set){\n  if(angle.type === 'outside')\n    return `${(+set.width + m)} ${+set.height + m}`;\n  else if(angle.type === 'linear')\n    return `${+set.width - angle.y/2 + m} ${+set.height - angle.x/2 + m}`;\n  else if(angle.type === 'inside')\n    return `${+set.width - angle.y + m} ${+set.height - angle.x + m}`;\n}\nfunction angleControlDotLB(m,angle,set){\n  if(angle.type === 'outside')\n    return `${m} ${+set.height + m}`;\n  else if(angle.type === 'linear')\n    return `${+angle.y/2 + m} ${+set.height - angle.x/2 + m}`;\n  else if(angle.type === 'inside')\n    return `${+angle.y + m} ${+set.height - angle.x + m}`;\n}\n\nfunction FormControls(props){\n  return(\n    <div id=\"calc-form-controlls-wrapper\">\n      <button className=\"btn\" onClick={props.addNewDetailFunc}>Добавить деталь</button>\n      <button className=\"btn\" disabled={props.isDisabled} onClick={props.toCheckoutFunc}>Перейти к оформлению</button>\n    </div>\n  );\n}","// Helpful functions\r\n\r\nclass Helper{\r\n\r\n    prepareNumber(number){\r\n        return number;\r\n    }\r\n}\r\n\r\nexport {Helper};","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}