{"version":3,"sources":["components/loops.js","App.js","reportWebVitals.js","index.js"],"names":["LoopsOptions","state","side","count","before","after","minSpace","error","handleInputChange","e","fieldName","target","name","value","key","closest","dataset","steps","Math","round","setState","props","func","this","set","beforeMin","beforeMax","afterMax","width","height","afterMin","countMax","className","onChange","defaultValue","type","min","max","step","React","Component","Loops","m","loops","indent","radius","undefined","circles","push","d","stroke","strokeDasharray","fill","Circle","cx","cy","r","i","circleCX","circleCY","fontSize","x","y","App","details","Map","addNewDetailFunc","Date","getTime","title","prev","next","inputOnChange","angleTitle","obj","detailKey","detail","get","handleSetDetailSize","loopChange","reserve","loopSide","list","loopF","f","ff","FormControls","DetailsList","setSizeF","forEach","dkey","length","Detail","handleSetSize","classList","add","remove","data-key","placeholder","disabled","id","angleName","DetailPlan","AngleOptions","active","send","event","checked","handleTypeChange","handleInputActive","maxX","maxY","input","closedAngle","left","top","right","bot","el","onClick","data-active","correctSize","abs","minWidth","maxWidth","minHeight","maxHeight","lt","rt","lb","rb","ltA","angle","angleControlDotLT","rtA","angleControlDotRT","rbA","angleControlDotRB","lbA","angleControlDotLB","xmlns","version","viewBox","strokeWidth","strokeLinejoin","transform","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c79344d7.chunk.js","sourcesContent":["import React from 'react';\r\nimport '../App.css';\r\n\r\n// ============================================ LOOPS\r\nclass LoopsOptions extends React.Component{\r\n    state = {\r\n      side: 'none',\r\n      count: 2,\r\n      before: 100,\r\n      after: 500,\r\n      minSpace: 50,\r\n      error: false,\r\n    }\r\n  \r\n    handleInputChange = (e) => {\r\n      let fieldName = e.target.name; // Поле формы\r\n      let value = e.target.value; // Значение формы\r\n      let key = e.target.closest('.detail').dataset.key; // Ключ детали\r\n      let steps = this.state.count - 1; // желаемое кол-во отрезков между первой и последней деталью\r\n      let step = Math.round((this.state.after-this.state.before)/steps, 1); // размер одного отрезка\r\n    //  Не позволяем добавлять больше петель, \r\n    //  чем это возможно при сохранении минимального расстояния между центрами петель,\r\n    //  обозначенного как minSpace, не путать с indent(отступ петли от края детали)\r\n      if(step >= this.state.minSpace){\r\n        this.setState({\r\n          [fieldName]: value,\r\n          error: false\r\n        }, () => {\r\n          this.props.func(this.state, key); // отправлем данные в Арр\r\n        })\r\n      }\r\n      else{\r\n        this.setState({\r\n          [fieldName]: value,\r\n          error: true\r\n        });\r\n      }\r\n    }\r\n  \r\n    render(){\r\n        let {side,before,after,minSpace} = this.state;\r\n        let set = this.props.set;\r\n        let beforeMin = +minSpace;\r\n        let beforeMax = after - minSpace;\r\n        let afterMax = side === 'top' || side === 'bot' ? set.width - minSpace : set.height - minSpace;\r\n        let afterMin = +minSpace + +before;\r\n        let countMax = Math.round((after-before)/minSpace) + 1;\r\n  \r\n      return(\r\n        <>\r\n        <label className=\"flex-column\">\r\n          <span>Сторона</span>\r\n          <select onChange={this.handleInputChange} name=\"side\" defaultValue=\"none\">\r\n            <option value=\"none\">Нет</option>\r\n            <option value=\"left\">Слева</option>\r\n            <option value=\"top\">Сверху</option>\r\n            <option value=\"right\">Справа</option>\r\n            <option value=\"bot\">Снизу</option>\r\n          </select>\r\n        </label>\r\n  \r\n        {this.state.side !== 'none' &&\r\n        <>\r\n        <label className=\"flex-column\">\r\n          <span>Кол-во, шт</span>\r\n          <input \r\n            className={this.state.error ? 'error' : ''}\r\n            onChange={this.handleInputChange} \r\n            name=\"count\" \r\n            type=\"number\"\r\n            min=\"2\"\r\n            max={countMax}\r\n            step=\"1\" \r\n            defaultValue=\"2\" />\r\n        </label>\r\n        <label className=\"flex-column w100p\">\r\n          <span>До первой петли, мм</span>\r\n          <input \r\n            onChange={this.handleInputChange} \r\n            name=\"before\" \r\n            type=\"range\"\r\n            min={beforeMin}\r\n            max={beforeMax}\r\n            step=\"1\" \r\n            defaultValue=\"100\" />\r\n        </label>\r\n        <label className=\"flex-column w100p\">\r\n          <span>До последней петли, мм</span>\r\n          <input \r\n            onChange={this.handleInputChange} \r\n            name=\"after\" \r\n            type=\"range\"\r\n            min={afterMin}\r\n            max={afterMax}\r\n            step=\"1\" \r\n            defaultValue=\"500\" />\r\n        </label>\r\n        </>\r\n        }\r\n        </>\r\n      );\r\n    }\r\n  }\r\n\r\nfunction Loops(props){\r\n    let set = props.set;\r\n    let m = props.m;\r\n    let loops = set.loops;\r\n    let indent = 25;\r\n    let radius = 35/2;\r\n\r\n    if(loops.side === undefined || loops.side === 'none') return('');\r\n  \r\n    let width = set.width;\r\n    let height = set.height;\r\n    let circles = [];\r\n\r\n    if(loops.side === 'left'){\r\n        circles.push(<path d={`M ${m+indent} ${m} v ${height}`} stroke=\"blue\" strokeDasharray=\"10\" fill=\"transparent\"/>);\r\n        circles.push(<Circle key={'lbefore'} cx={m+indent} cy={+loops.before+m} r={radius} m={m} />);\r\n        circles.push(<Circle key={'lafter'} cx={m+indent} cy={+loops.after+m} r={radius} m={m} />);\r\n    }\r\n    else if(loops.side === 'top'){\r\n        circles.push(<path d={`M ${m} ${m+indent} h ${width}`} stroke=\"blue\" strokeDasharray=\"10\" fill=\"transparent\"/>);\r\n        circles.push(<Circle key={'tbefore'} cx={+loops.before+m} cy={m+indent} r={radius} m={m} />);\r\n        circles.push(<Circle key={'tafter'} cx={+loops.after+m} cy={m+indent} r={radius} m={m} />);\r\n    }\r\n    else if(loops.side === 'right'){\r\n        circles.push(<path d={`M ${m+width-indent} ${m} v ${height}`} stroke=\"blue\" strokeDasharray=\"10\" fill=\"transparent\"/>);\r\n        circles.push(<Circle key={'rbefore'} cx={m+width-indent} cy={+loops.before+m} r={radius} m={m} />);\r\n        circles.push(<Circle key={'rafter'} cx={m+width-indent} cy={+loops.after+m} r={radius} m={m} />);\r\n    }\r\n    else if(loops.side === 'bot'){\r\n        circles.push(<path d={`M ${m} ${height+m-indent} h ${width}`} stroke=\"blue\" strokeDasharray=\"10\" fill=\"transparent\"/>);\r\n        circles.push(<Circle key={'bbefore'} cx={+loops.before+m} cy={height+m-indent} r={radius} m={m} />);\r\n        circles.push(<Circle key={'bafter'} cx={+loops.after+m} cy={height+m-indent} r={radius} m={m} />);\r\n    }\r\n        \r\n\r\n    if(loops.count > 2){\r\n        let steps = loops.count - 1;\r\n        let step = Math.round((loops.after-loops.before)/steps, 1);\r\n        for(let i = 1; i < steps; i++){\r\n            let circleCX = m+indent;\r\n            let circleCY = +loops.before+(step*i)+m;\r\n            if(loops.side === 'top'){\r\n                circleCY = m+indent;\r\n                circleCX = +loops.before+(step*i)+m;\r\n            }\r\n            else if(loops.side === 'right'){\r\n                circleCX = m+indent;\r\n                circleCY = +loops.before+(step*i)+m;\r\n            }\r\n            else if(loops.side === 'bot'){\r\n                circleCX = m+indent;\r\n                circleCY = +loops.before+(step*i)+m;\r\n            }\r\n            circles.push(    \r\n                <Circle \r\n                    key={i+height} \r\n                    cx={circleCX} \r\n                    cy={circleCY} \r\n                    r={radius} \r\n                    width={width} \r\n                    height={height} \r\n                    m={m} />);\r\n        }\r\n    }\r\n      \r\n      return circles;\r\n}\r\n  \r\nfunction Circle(props){\r\n    return (\r\n      <>\r\n      <circle cx={props.cx} cy={props.cy} r={props.r} stroke=\"blue\" fill=\"blue\" />\r\n      <path d={`M ${props.cx} ${props.cy} h ${props.r + 60}`}  stroke=\"blue\" />\r\n      <text fontSize=\"150%\" x={props.cx + 30} y={props.cy-5}>{props.cy-props.m}</text>\r\n      </>\r\n    );\r\n}\r\n\r\nexport {LoopsOptions, Loops};","import React from 'react';\nimport './App.css';\nimport {LoopsOptions, Loops} from './components/loops';\n\nclass App extends React.Component {\n\n  state = {\n    details: new Map(),\n  }\n\n  addNewDetailFunc = () => {\n    let newDetail = {\n      'width': 400,\n      'minWidth': 60,\n      'maxWidth': 2040,\n      'height': 600,\n      'minHeight': 60,\n      'maxHeight': 2770,\n      'count': 1,\n      'reserve':{\n        'left': false,\n        'top': false,\n        'right': false,\n        'bot': false    \n      },\n      'lt': {title:'Левый верхний' , prev:'lb', next:'rt', x:0, y:0, type:'outside'},\n      'rt': {title:'Правый верхний', prev:'lt', next:'rb', x:0, y:0, type:'outside'},\n      'rb': {title:'Правый нижний' , prev:'rt', next:'lb', x:0, y:0, type:'outside'},\n      'lb': {title:'Левый нижний'  , prev:'rb', next:'lt', x:0, y:0, type:'outside'},\n      'loops': false\n    }\n    let details = this.state.details;\n    details.set('D-' + new Date().getTime(), newDetail);\n    this.setState({details});\n  }\n\n  inputOnChange = (angleTitle, obj, detailKey) => {\n    let details = this.state.details;\n    let detail = details.get(detailKey);\n\n    for(let key in obj){\n      detail[angleTitle][key] = obj[key];\n    }\n\n    details.set(detailKey,detail);\n    this.setState({details});\n  }\n\n  handleSetDetailSize = (detailKey, side, value) => {\n    let details = this.state.details;\n    let detail = details.get(detailKey);\n\n    detail[side] = value;\n\n    details.set(detailKey,detail);\n    this.setState({details});\n  }\n\n  loopChange = (loops, detailKey) => {\n    let details = this.state.details;\n    let detail = details.get(detailKey);\n    let width = detail.width;\n    let height = detail.height;\n\n    // Резервируем сторону детали, если она свободна\n    if(!detail.reserve[loops.side]){\n      for(let loopSide in detail.reserve){\n        if(detail.reserve[loopSide] === 'loops')\n          detail.reserve[loopSide] = false;\n      }\n      detail.reserve[loops.side] = 'loops';\n    }\n    else\n      return;\n    \n    // Здесь пересчитываем расположение последней петли, \n    // если оно дальше границы детали\n    if(loops.side === 'left' || loops.side === 'right'){\n      if(loops.after > height){\n        loops.after = height - 50;\n      }\n    }\n    else{\n      if(loops.after > width){\n        loops.after = width - 50;\n      }\n    }\n    // Перезаписываем объект детали с новыми данными петель\n    detail.loops = loops;\n    details.set(detailKey,detail);\n    this.setState({details});\n  }\n  \n  render(){\n     return (\n      <>\n      <DetailsList \n        list={this.state.details}\n        loopF={this.loopChange} \n        f={this.inputOnChange} \n        ff={this.handleSetDetailSize} />\n      <FormControls addNewDetailFunc={this.addNewDetailFunc} />\n      <div className=\"app-caption\">\n        <h4>Особенности приложения:</h4>\n        <ol>\n          <li>Сохраняются пропорции фигуры при масштабировании</li>\n          <li>Все опции углов собраны в одном месте</li>\n          <li>Зависимые углы связаны - максимальные значения расчитываются \"на лету\"</li>\n          <li>При превышении лимитов размеров деталей поля с ошибками подсвечиваются</li>\n          <li>При превышении лимитов размеров деталей чертёж детали не отображает изменения, всегда только допустимые размеры</li>\n        </ol>\n      </div>\n      </>\n    );\n  }\n}\n\nexport default App;\n\nclass DetailsList extends React.Component{\n  state = {}\n\n  render(){\n    let list = [];\n    let set = this.props.f;\n    let setSizeF = this.props.ff;\n    let loopF = this.props.loopF;\n    this.props.list.forEach(function(value,key) {\n      list.push( <Detail ff={setSizeF} f={set} loopF={loopF} key={key} dkey={key} value={value} /> );\n    });\n    return(\n      <>\n      <h2>Список деталей</h2>\n      {list.length > 0 ? list : 'Список пуст'}\n      </>\n    );\n  }\n}\n\nclass Detail extends React.Component{\n  state = {}\n\n  handleSetSize = (e) => {\n    let fieldName = e.target.name;\n    let min = e.target.min;\n    let max = e.target.max;\n    let value = +e.target.value;\n    let key = e.target.closest('.detail').dataset.key;\n\n    if(value < min || value > max)\n      e.target.classList.add('error')\n    else\n      e.target.classList.remove('error')\n\n    this.props.ff(key,fieldName,value);\n  }\n\n  render(){\n    let set = this.props.value;\n    return(\n      <div className=\"detail\" data-key={this.props.dkey}>\n        <div className=\"detail-settings w100p\">\n          <label className=\"flex-column\">\n            <span>Ширина, мм</span>\n            <input onChange={this.handleSetSize} type=\"number\" name=\"width\" min=\"60\" max=\"2040\" value={set.width} />\n          </label>\n          <label className=\"flex-column\">\n            <span>Длина, мм</span>\n            <input onChange={this.handleSetSize} type=\"number\" name=\"height\" min=\"60\" max=\"2770\" value={set.height} />\n          </label>\n          <label className=\"flex-column\">\n            <span>Кол-во, шт</span>\n            <input onChange={this.handleSetSize} type=\"number\" name=\"count\" value={set.count} />\n          </label>\n          <label className=\"w100p\">\n            <input onChange={this.handleSetSize} type=\"text\" name=\"detail-comment\" placeholder=\"Комментарий\" />\n          </label>\n\n          <div className=\"angle-options__tabs-header\">\n            <button className=\"active\">Углы</button>\n            <button disabled=\"disabled\">Петли</button>\n            <button disabled=\"disabled\">Пазы</button>\n          </div>\n\n          <fieldset id=\"angles\" className=\"w100p\">\n            <legend></legend>\n            <AngleOptions angleName='lt' func={this.props.f} set={this.props.value} />\n            <AngleOptions angleName='rt' func={this.props.f} set={this.props.value} />\n            <AngleOptions angleName='rb' func={this.props.f} set={this.props.value} />\n            <AngleOptions angleName='lb' func={this.props.f} set={this.props.value} />\n          </fieldset>\n\n          <fieldset id=\"loops\" className=\"w100p flex\">\n            <legend>Петли</legend>\n            <LoopsOptions func={this.props.loopF} set={this.props.value} />\n          </fieldset>\n        </div>\n        <div className=\"detail-plan\">\n          <DetailPlan set={this.props.value} />\n        </div>\n      </div>\n    )\n  }\n}\n\nclass AngleOptions extends React.Component{\n  state = {\n    active: false,\n    type: 'outside',\n    send: true,\n    x: 30,\n    y: 30,\n  }\n\n  handleInputChange = (event) => {\n    const target = event.target;\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n    const name = target.name;\n\n    target.type === 'range' && this.state.send ?\n      this.setState({\n        x: value,\n        y: value,\n      })\n    :\n      this.setState({\n        [name]: value\n      });\n    \n    this.props.func(\n      this.props.angleName,\n      { // Отправляем данные угла назад\n        x:this.state.x,\n        y:this.state.y,\n        type:this.state.type,\n        title:this.props.set[this.props.angleName].title,\n        next:this.props.set[this.props.angleName].next,\n        prev:this.props.set[this.props.angleName].prev\n      },\n      target.closest('.detail').dataset.key\n    );\n  }\n\n  handleTypeChange = (e) => {\n    let type = e.target.name;\n    this.setState(function(state, props){\n      this.props.func( // Отправляем данные угла назад\n        props.angleName,\n        {\n          x:state.x,\n          y:state.y,\n          type:type,\n          title:props.set[props.angleName].title,\n          next:props.set[props.angleName].next,\n          prev:props.set[props.angleName].prev,\n        },\n        e.target.closest('.detail').dataset.key\n      );\n      return {type: type};\n    });\n  }\n\n  handleInputActive = (e) => {\n    const value = e.target.checked;\n    this.setState({\n      active: value\n    })\n    this.props.func(\n      this.props.angleName,\n      { // Отправляем данные угла назад\n        x: value ? this.state.x : 0,\n        y: value ? this.state.y : 0,\n        type:this.state.type,\n        title:this.props.set[this.props.angleName].title,\n        next:this.props.set[this.props.angleName].next,\n        prev:this.props.set[this.props.angleName].prev\n      },\n      e.target.closest('.detail').dataset.key\n    );\n  }\n\n  render(){\n    let set = this.props.set;\n    let next = set[set[this.props.angleName].next];\n    let prev = set[set[this.props.angleName].prev];\n    let maxX = 101;\n    let maxY = 101;\n    \n    if(this.props.angleName === 'lt'){\n      maxY = +set.width - next.y;\n      maxX = +set.height - prev.x;\n    }\n    else if(this.props.angleName === 'rt'){\n      maxY = +set.width - prev.y;\n      maxX = +set.height - next.x;\n    }\n    else if(this.props.angleName === 'rb'){\n      maxY = +set.width - next.y;\n      maxX = +set.height - prev.x;\n    }\n    else{\n      maxY = +set.width - prev.y;\n      maxX = +set.height - next.x;\n    }\n\n    let input = <span><input onChange={this.handleInputActive} type=\"checkbox\" name=\"active\" checked={this.state.active} /></span>;\n    // Если сторона зарезервирована\n    let closedAngle = [];\n    if(set.reserve.left === 'loops')\n      closedAngle = ['lb','lt'];\n    else if(set.reserve.top === 'loops')\n      closedAngle = ['lt','rt'];\n    else if(set.reserve.right === 'loops')\n      closedAngle = ['rt','rb'];\n    else if(set.reserve.bot === 'loops')\n      closedAngle = ['rb','lb'];\n\n    closedAngle.forEach((el)=>{\n      if(this.props.angleName === el)\n        input = <span className=\"reserve-notice red\">Сторона занята петлями</span>;\n    })\n\n    // Закрытое положение\n    if(!this.state.active){\n      return(\n        <div className=\"angle-options-wrapper\">\n          <div className=\"angle-options-type w100p\">\n            <label className=\"angle-title-wrapper\">\n              <span className={`angle-title ${this.props.angleName}`}>{set[this.props.angleName].title}</span>\n              {input}\n            </label>\n          </div>\n        </div>\n      )\n    }\n    // Открытое положение\n    return(\n      <div className={`angle-options-wrapper ${this.state.active && 'active'}`}>\n        <div className=\"angle-options-type w100p\">\n          <label className=\"angle-title-wrapper\">\n            <span className={`angle-title ${this.props.angleName}`}>{set[this.props.angleName].title}</span>\n            <span><input onChange={this.handleInputActive} type=\"checkbox\" name=\"active\" checked={this.state.active} /></span>\n          </label>\n          <button onClick={this.handleTypeChange} name=\"outside\" className=\"angle-type__outside ml-a\" data-active={this.state.type === 'outside' && 'active' }>Наружный</button>\n          <button onClick={this.handleTypeChange} name=\"linear\" className=\"angle-type__linear\" data-active={this.state.type === 'linear' && 'active' }>Прямой</button>\n          <button onClick={this.handleTypeChange} name=\"inside\" className=\"angle-type__inside\" data-active={this.state.type === 'inside' && 'active' }>Внутренний</button>\n        </div>\n        <label className=\"w100p pt10\">\n          X <input onChange={this.handleInputChange} type=\"range\" name=\"y\" min=\"30\" max={maxY} step=\"1\" value={this.state.y} />\n            <span><b>{this.state.y}</b>&nbsp;мм</span>\n        </label>\n        <label className=\"switch\">\n          <input onChange={this.handleInputChange} name=\"send\" type=\"checkbox\" checked={this.state.send} />\n        </label>\n        <label className=\"w100p\">\n          Y <input onChange={this.handleInputChange} type=\"range\" name=\"x\" min=\"30\" max={maxX} step=\"1\" value={this.state.x} disabled={this.state.send} />\n            <span><b>{this.state.x}</b>&nbsp;мм</span>\n        </label>\n      </div>\n    );\n  }\n}\n\nfunction correctSize(side,min,max){\n  let m = Math.abs(side);\n  if(m < min)\n    return min;\n  else if(m > max)\n    return max;\n  else\n    return m;\n}\n\nfunction DetailPlan(props){\n  let set = props.set;\n  let {width,minWidth,maxWidth,height,minHeight,maxHeight,lt,rt,lb,rb} = set;\n  let m = 50;\n\n  width = correctSize(width,minWidth,maxWidth);\n  height = correctSize(height,minHeight,maxHeight);\n\n  let ltA   = `M ${m} ${(Math.abs(lt.x) + m)} Q ${angleControlDotLT(m,lt)} ${(Math.abs(lt.y) + m)} ${m}`;\n  let top   = ` L ${(width-rt.y + m)} ${m}`;\n  let rtA   = ` Q ${angleControlDotRT(m,rt,set)} ${width+m} ${+rt.x + m}`;\n  let right = ` L ${(width + m)} ${(height - rb.x + m)}`;\n  let rbA   = ` Q ${angleControlDotRB(m,rb,set)} ${(width - rb.y + m)} ${(height + m)}`;\n  let bot   = ` L ${(+lb.y+m)} ${(height + m)}`;\n  let lbA   = ` Q ${angleControlDotLB(m,lb,set)} ${m} ${height-lb.x+m}`;\n\n  return(\n    <svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" viewBox={\"0 0 \" + (width+m*2) +' '+ (height+m*2)}>\n      {/* Деталь */}\n      <path d={ltA + top + rtA + right + rbA + bot + lbA + ' z'} stroke=\"#333333\" strokeWidth=\"3\" strokeLinejoin=\"miter\" fill=\"transparent\"/>\n      {/* Размеры углов */}\n      <path d={`M ${m} ${Math.abs(lt.x) + m} h ${lt.y} v -${lt.x}`}        stroke=\"red\" strokeDasharray=\"10\" fill=\"transparent\"/>\n      <path d={`M ${width+m} ${Math.abs(rt.x) + m} h -${rt.y} v -${rt.x}`} stroke=\"red\" strokeDasharray=\"10\" fill=\"transparent\"/>\n      <path d={`M ${width+m} ${height - rb.x + m} h -${rb.y} v ${rb.x}`}   stroke=\"red\" strokeDasharray=\"10\" fill=\"transparent\"/>\n      <path d={`M ${m} ${height - lb.x + m} h ${+lb.y} v ${+lb.x}`}        stroke=\"red\" strokeDasharray=\"10\" fill=\"transparent\"/>\n      {/* Размер детали */}\n      <text fontSize=\"150%\" x={(m+width)/2} y={20}>{width}мм</text>\n      <text fontSize=\"150%\" transform={`rotate(-90,${20},${(m+height)/2})`} x={m/2-50} y={(m+height)/2}>{height}мм</text>\n      {/* Петли */} <Loops set={set} m={m} />\n    </svg>\n  )\n}\n\nfunction angleControlDotLT(m,angle){\n  if(angle.type === 'outside')\n    return `${m} ${m}`;\n  else if(angle.type === 'linear')\n    return `${angle.x/2 + m} ${angle.y/2 + m}`;\n  else if(angle.type === 'inside')\n    return `${+angle.x + m} ${+angle.y + m}`;\n}\nfunction angleControlDotRT(m,angle,set){\n  if(angle.type === 'outside')\n    return `${(+set.width + m)} ${m}`;\n  else if(angle.type === 'linear')\n    return `${+set.width - angle.y/2 + m} ${angle.x/2 + m}`;\n  else if(angle.type === 'inside')\n    return `${+set.width - angle.y + m} ${+angle.x + m}`;\n}\nfunction angleControlDotRB(m,angle,set){\n  if(angle.type === 'outside')\n    return `${(+set.width + m)} ${+set.height + m}`;\n  else if(angle.type === 'linear')\n    return `${+set.width - angle.y/2 + m} ${+set.height - angle.x/2 + m}`;\n  else if(angle.type === 'inside')\n    return `${+set.width - angle.y + m} ${+set.height - angle.x + m}`;\n}\nfunction angleControlDotLB(m,angle,set){\n  if(angle.type === 'outside')\n    return `${m} ${+set.height + m}`;\n  else if(angle.type === 'linear')\n    return `${+angle.y/2 + m} ${+set.height - angle.x/2 + m}`;\n  else if(angle.type === 'inside')\n    return `${+angle.y + m} ${+set.height - angle.x + m}`;\n}\n\nfunction FormControls(props){\n  return(\n    <div id=\"calc-form-controlls-wrapper\">\n      <button className=\"btn\" onClick={props.addNewDetailFunc} >Добавить деталь</button>\n      <button className=\"btn\" disabled>Перейти к оформлению</button>\n    </div>\n  );\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}