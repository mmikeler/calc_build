{"version":3,"sources":["components/summary.js","components/checkout.js","components/texture-vector.js","helper.js","components/loops.js","components/groove.js","components/edge.js","components/detailPlan.js","components/angleOptions.js","components/detail.js","components/detailsList.js","App.js","reportWebVitals.js","index.js"],"names":["getCount","set","o","listS","SHEET_WIDTH","SHEET_LENGHT","SHEET_FILLING_AREA","S","listCount","size","detailsCount","values","detail","width","nominalwidth","height","nominalheight","count","lists","Math","floor","details","Summary","props","options","summaryOut","summary","SHEET_NAME","SHEET_DEPTH","SHEET_PRICE","materialImageUrl","SERVER_URL","SHEET_PICTURE_URL","key","push","SummItem","title","value","id","style","backgroundImage","className","summ","MoreOrderDetails","state","open","summNumber","this","onClick","setState","React","Component","final","get","edge","sm","lg","angle","groove","loops","billing","billingOptions","edgeSide","edgeSize","lt","x","rt","rb","lb","side","edgeSM","EDGE_MULTIPLICATOR","abs","PRICE_EDGE_04","edgeLG","PRICE_EDGE_02","edgeSumm","round","PRICE_EDGING","material","work","PRICE_SHEET_CUTTING","angles","PRICE_CURVATURE","finalLoops","PRICE_LOOP","finalGrooves","PRICE_GROOVE","pack","inbox","PRICE_TAPE","pallet","poddon","PRICE_PALLET","finalSumm","faster","price","PRICE_PERCENT_FAST","out","JSON","stringify","number","toFixed","replace","Checkout","mess","orderCreate","setRequest","e","preventDefault","undefined","username","useremail","userphone","json","createRequestData","data","svgs","url","importOptions","REQUEST_URL","formData","FormData","append","MAILTO","MAIL_FROM","fetch","method","body","then","res","text","afterCreateOrderFunc","error","heandleChange","target","fieldName","name","type","checked","setOrderDataFunc","message","toOrderFunc","onSubmit","required","defaultValue","placeholder","onChange","usercomment","billingaddress","form","date","Date","space","order","formatDate","SHEET_COLOR","ind","forEach","d","textureRotate","length","edgeL1","left","edgeL2","right","edgeW1","top","edgeW2","bot","row","_e","createComment","comment","breakString","y","nomX","nomY","beforeNominal","afterNominal","dd","getDate","mm","getMonth","yy","getFullYear","TextureVector","fontSize","fill","transform","Helper","os","trunc","helper","LoopsOptions","before","after","minSpace","handleInputChange","closest","dataset","steps","step","max","enscalingAny","func","isFree","r","A1","A2","beforeMin","beforeMax","afterMax","afterMin","countMax","LTangle","RTangle","RBangle","LBangle","reserve","resL","resT","resR","resB","disabled","onInput","min","toString","Loops","m","indent","radius","circles","stroke","strokeDasharray","Circle","nominal","cx","cy","beforeNom","stepNom","i","circleCX","circleCY","line","numberX","numberY","descalingAny","GrooveOptions","Groove","grooveIndent","grooveWidth","vector","strokeWidth","EdgeOptions","handleChange","lta","rta","rba","lba","newValue","edgeMin","edgeMax","query","tabIndex","Edge","ly","rx","color","correctSize","DetailPlan","minWidth","maxWidth","minHeight","maxHeight","window","ltA","angleControlDotLT","rtA","angleControlDotRT","rbA","angleControlDotRB","lbA","angleControlDotLB","fons","xmlns","version","viewBox","patternContentUnits","preserveAspectRatio","href","TEXTURE_IMAGE_URL","opacity","strokeLinejoin","AngleOptions","active","send","event","breakPoint","break","backToApp","angleName","next","prev","handleTypeChange","handleInputActive","maxX","maxY","input","closedAngle","reserveL","reserveT","reserveR","reserveB","motive","el","data-active","data-break","Detail","handleSetSize","dkey","classList","add","remove","ff","handleSetTitle","baseTabIndex","activeKey","data-key","autoFocus","maxLength","pattern","edgeF","data-action","changeDetailOptions","saveSVGfunc","prepareNumber","f","loopF","grooveF","DetailsList","list","setSizeF","saveSVG","CopyDetail","App","inputOnFocus","stage","Map","inputType","activeDetail","addNewDetailFunc","newDetail","detailKey","getTime","fromCheckout","field","inputOnChange","angleTitle","obj","clearReserve","item","handleSetDetailSize","loopChange","loopSide","grooveChange","edgeChange","action","create","forceUpdate","confirm","delete","toCheckoutFunc","toOrder","svgsDOM","document","querySelectorAll","arr","outerHTML","hasDetails","rel","FormControls","isDisabled","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.7eb44384.chunk.js","sourcesContent":["import React from 'react';\r\nimport '../App.css';\r\n\r\nfunction getCount(set,o){\r\n    let listS = o.SHEET_WIDTH*o.SHEET_LENGHT*o.SHEET_FILLING_AREA;\r\n    let S = 0;\r\n    let listCount = set.size > 0 ? 1 : 0;\r\n    let detailsCount = 0;\r\n    for (let detail of set.values()) {\r\n        let width = detail.nominalwidth;\r\n        let height = detail.nominalheight;\r\n        detailsCount += detail.count;\r\n        S += width*height*detail.count; // Считаем площадь детали по чистым размерам\r\n    }\r\n    // Считаем кол-во листов\r\n    listCount += Math.floor(S/listS);\r\n\r\n    return {\r\n        lists: listCount,\r\n        details: detailsCount\r\n    };\r\n}\r\n\r\nfunction Summary(props){\r\n\r\n    let set = props.set.details;\r\n    let o = props.options;\r\n    let summaryOut = [];\r\n    let summary = {\r\n        'Материал': o.SHEET_NAME,\r\n        'Размер': `${o.SHEET_WIDTH}мм x ${o.SHEET_LENGHT}мм x ${o.SHEET_DEPTH}мм`,\r\n        'Листов в раскрое': getCount(set,o).lists,\r\n        'Цена за лист': `${o.SHEET_PRICE} руб.`,\r\n        'Всего деталей': getCount(set,o).details\r\n    }\r\n    const SERVER_URL = o.SERVER_URL ? o.SERVER_URL : '/';\r\n    let materialImageUrl = SERVER_URL + o.SHEET_PICTURE_URL;\r\n\r\n    for(let key in summary){\r\n        summaryOut.push(<SummItem key={key} title={key} value={summary[key]} />);\r\n    }\r\n    \r\n    return(\r\n        <div id=\"summary\" style={{backgroundImage:\"url(\" + (materialImageUrl) + \")\"}}>\r\n            {summaryOut}\r\n            <div className=\"summ-item\">\r\n                <span><b>Примерная стоимость:</b></span>\r\n                <span><b>{summ(props.set,o,true)}</b></span>\r\n            </div>\r\n            <MoreOrderDetails set={props.set} o={o} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport {Summary};\r\n\r\nclass MoreOrderDetails extends React.Component{\r\n\r\n    state = {\r\n        open: false,\r\n    }\r\n\r\n    render(){\r\n        const summNumber = summ(this.props.set, this.props.o);\r\n        const detailsListSize = this.props.set.details.size;\r\n        if(detailsListSize === 0)\r\n            return null;\r\n        else if(this.state.open)\r\n            return(\r\n                <div className=\"summ-item more\">\r\n                    <span onClick={() => this.setState({open:false})} className=\"action-link red w100p\"><b>Свернуть</b></span>\r\n                    {summNumber}\r\n                </div>\r\n            );\r\n        else\r\n            return(\r\n                <div className=\"summ-item\">\r\n                    <span onClick={() => this.setState({open:true})} className=\"action-link red\"><b>Подробнее о расчёте</b></span>\r\n                </div>\r\n            );\r\n    }\r\n}\r\n\r\n\r\n\r\nfunction SummItem(props){\r\n\r\n    return(\r\n        <div className=\"summ-item\">\r\n            <span>{props.title}: </span>\r\n            <span>{props.value}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction summ(set,o,final=false,get=false){\r\n    let listS = o.SHEET_WIDTH*o.SHEET_LENGHT*o.SHEET_FILLING_AREA;\r\n    let S = 0;\r\n    let listCount = set.details.size > 0 ? 1 : 0;\r\n    let edge = {sm:0, lg:0}\r\n    let angle = 0;\r\n    let groove = 0;\r\n    let loops = 0;\r\n    let billing = set.billingOptions ? set.billingOptions : false;\r\n    for (let detail of set.details.values()) {\r\n        let width = detail.nominalwidth;\r\n        let height = detail.nominalheight;\r\n        let detailsCount = detail.count;\r\n\r\n        S += width*height*detailsCount; // Считаем площадь детали по чистым размерам\r\n        \r\n        // Кромление\r\n        for(let edgeSide in detail.edge){ \r\n            let edgeSize = detail.edge[edgeSide];\r\n            if( edgeSize > 0 && edgeSize < 1){\r\n                edgeSide === 'left' || edgeSide === 'right' ? edge.sm += height : edge.sm += width;\r\n            }\r\n            else if(edgeSize > 0 && edgeSize > 1){\r\n                edgeSide === 'left' || edgeSide === 'right' ? edge.lg += height : edge.lg += width;\r\n            }\r\n        }\r\n        // Углы\r\n        if(detail.lt.x > 0 || detail.rt.x > 0 || detail.rb.x > 0 || detail.lb.x > 0)\r\n            angle++;\r\n        // Петли\r\n        if(detail.loops && detail.loops.side !== 'none')\r\n            loops += detail.loops.count;\r\n        // Пазы\r\n        if(detail.groove)\r\n            groove++;\r\n        \r\n    }\r\n\r\n    // Считаем кол-во листов\r\n    listCount += Math.floor(S/listS);\r\n\r\n    let edgeSM = edge.sm*o.EDGE_MULTIPLICATOR/1000*Math.abs(o.PRICE_EDGE_04);\r\n    let edgeLG = edge.lg*o.EDGE_MULTIPLICATOR/1000*Math.abs(o.PRICE_EDGE_02);\r\n    let edgeSumm = Math.round(edgeSM+edgeLG+((edge.sm+edge.lg)*o.EDGE_MULTIPLICATOR/1000*Math.abs(o.PRICE_EDGING)));\r\n    let material = listCount*o.SHEET_PRICE;\r\n    let work = listCount*o.PRICE_SHEET_CUTTING;\r\n    let angles = angle*Math.abs(o.PRICE_CURVATURE);\r\n    let finalLoops = loops*Math.abs(o.PRICE_LOOP);\r\n    let finalGrooves = groove*Math.abs(o.PRICE_GROOVE);\r\n    let pack = billing && billing.inbox && listCount > 0 ? +o.PRICE_TAPE : 0;\r\n    let pallet = billing && billing.poddon && listCount > 0 ? +o.PRICE_PALLET : 0;\r\n    let finalSumm = material+work+edgeSumm+angles+finalLoops+finalGrooves+pack+pallet;\r\n    \r\n    // Billing options\r\n    let billingOptions = [];\r\n    if(billing){\r\n        if(billing.faster)\r\n            billingOptions.push(<tr><td>Срочный распил</td><td>{price((+o.PRICE_PERCENT_FAST - 1)*finalSumm)}</td></tr>);\r\n        if(billing.inbox)\r\n            billingOptions.push(<tr><td>Упаковка</td><td>{price(+o.PRICE_TAPE)}</td></tr>);\r\n        if(billing.poddon)\r\n            billingOptions.push(<tr><td>На поддон</td><td>{price(+o.PRICE_PALLET)}</td></tr>);\r\n    }\r\n    \r\n    if(billing && billing.faster)\r\n            finalSumm *= +o.PRICE_PERCENT_FAST;\r\n    \r\n    if(final)\r\n        return price(finalSumm);\r\n    \r\n    if(get){\r\n        let out = [\r\n            [\"Материал\", o.SHEET_NAME],\r\n            [\"Размер\", `${o.SHEET_WIDTH} x ${o.SHEET_LENGHT}`],\r\n            [\"Цена за лист\", o.SHEET_PRICE],\r\n            [\"Листов в раскрое\", listCount],\r\n            [\"Всего деталей\", getCount(set.details,o).details],\r\n            ['<b>Итого</b>', `<b>${price(finalSumm)}</b>`],\r\n            ['Подробнее', false],\r\n            ['материал', price(material)],\r\n            ['рез', price(work)],\r\n            ['кромление', price(edgeSumm)],\r\n            ['криволинейность', price(angles)],\r\n            ['петли', price(finalLoops)],\r\n            ['пазы', price(finalGrooves)],\r\n        ];\r\n        if(billing){\r\n            if(billing.faster)\r\n                out.push(['Срочный распил', price((+o.PRICE_PERCENT_FAST - 1)*finalSumm)]);\r\n            if(billing.inbox)\r\n                out.push(['Упаковка',price(+o.PRICE_TAPE)]);\r\n            if(billing.poddon)\r\n                out.push(['На поддон',price(+o.PRICE_PALLET)]);\r\n        }\r\n        return JSON.stringify(out);\r\n    }\r\n    \r\n    return(\r\n        <table className=\"w100p\">\r\n            <tbody>\r\n                <tr><td>Материал</td><td>{price(material)}</td></tr>\r\n                <tr><td>Рез</td><td>{price(work)}</td></tr>\r\n                <tr><td>Кромление</td><td>{price(edgeSumm)}</td></tr>\r\n                <tr><td>Криволинейность</td><td>{price(angles)}</td></tr>\r\n                <tr><td>Петли</td><td>{price(finalLoops)}</td></tr>\r\n                <tr><td>Пазы</td><td>{price(finalGrooves)}</td></tr>\r\n                {billingOptions}\r\n            </tbody>\r\n        </table>\r\n    );\r\n}\r\nexport {summ};\r\n\r\nfunction price(number){\r\n    return (number).toFixed(1).replace(/\\d(?=(\\d{3})+\\.)/g, '$&,')  + ' руб.';\r\n}","import React from 'react';\r\nimport '../App.css';\r\nimport {Summary,summ} from './summary';\r\n\r\nclass Checkout extends React.Component{\r\n\r\n    state = {\r\n        mess: '',\r\n        orderCreate: false,\r\n    }\r\n\r\n    setRequest = (e) => {\r\n        e.preventDefault()\r\n\r\n        // Проверяем поля формы\r\n        if(\r\n            this.state.username === undefined\r\n            || this.state.useremail === undefined\r\n            || this.state.userphone === undefined){\r\n                this.setState({mess: 'Заполните обязательные поля'});\r\n                return;\r\n        }\r\n\r\n        let json = createRequestData(this.props.data, this.state);\r\n        let svgs = this.props.svgs;\r\n        let url = this.props.data.importOptions.REQUEST_URL;\r\n        let formData = new FormData();\r\n        formData.append('order', json);\r\n        formData.append('svg', JSON.stringify(svgs));\r\n        formData.append('mailto', this.props.data.importOptions.MAILTO);\r\n        formData.append('mailfrom', this.props.data.importOptions.MAIL_FROM);\r\n        formData.append('subtotal_table_data', summ(this.props.data,this.props.data.importOptions,false,true));\r\n        this.setState(\r\n            {mess: 'Отправка заявки...'},\r\n            () => fetch(url, { method: 'POST', body: formData })\r\n                .then((res) => res.text())\r\n                .then(\r\n                    (res) => {\r\n                        if(res === 'ok'){\r\n                            let mess = 'Ваш заказ принят в обработку. В течение 20 минут(кроме выходных) с Вами свяжется представитель нашей компании и уточнит сроки и условия доставки заказа.'\r\n                            this.setState(\r\n                                {mess,orderCreate:true},\r\n                                () => {\r\n                                    this.props.afterCreateOrderFunc();\r\n                                }\r\n                            );\r\n                        }\r\n                        else{\r\n                            this.setState({mess: 'Ошибка при создании заказа. Попробуйте ещё раз.'});\r\n                        }\r\n                    },\r\n                    (error) => {\r\n                        this.setState({mess: 'Ошибка при создании заказа #' + error});\r\n                    }\r\n                )\r\n        )\r\n        \r\n    }\r\n\r\n    heandleChange = (e) => {\r\n        let target = e.target;\r\n        let fieldName = target.name;\r\n        const value = target.type === 'checkbox' ? target.checked : target.value;\r\n\r\n        this.setState(\r\n            {[fieldName]: value, mess: ''},\r\n            () => {\r\n                if(fieldName === 'faster' || fieldName === 'inbox' || fieldName === 'poddon')\r\n                    this.props.setOrderDataFunc(fieldName, this.state[fieldName]);\r\n            }\r\n        );        \r\n    }\r\n\r\n    render(){\r\n        const data = this.props.data;\r\n        const billing = data.billingOptions;\r\n        let message = this.state.mess ? <div id=\"message\">{this.state.mess}</div> : '';\r\n        if(!this.state.orderCreate){\r\n        return(\r\n            <>\r\n            <Summary set={data} options={data.importOptions} />\r\n            <h4 className=\"tac\">Заполните форму ниже</h4>\r\n            <form onSubmit={this.setRequest} id=\"checkoutForm\">\r\n                <fieldset className=\"flex w100p\">\r\n                    <legend>Ваши данные</legend>\r\n                    <label className=\"reqiured-field\">\r\n                        <input type=\"text\" name=\"username\" required defaultValue={this.state.username} placeholder=\"ФИО\" onChange={this.heandleChange} />\r\n                    </label>\r\n                    <label className=\"reqiured-field\">\r\n                        <input type=\"phone\" name=\"userphone\" required defaultValue={this.state.userphone} placeholder=\"Телефон\" onChange={this.heandleChange} />\r\n                    </label>\r\n                    <label className=\"reqiured-field\">\r\n                        <input type=\"email\" name=\"useremail\" required defaultValue={this.state.useremail} placeholder=\"Ваш email\" onChange={this.heandleChange} />\r\n                    </label>\r\n                    <label className=\"\">\r\n                        <textarea name=\"usercomment\" defaultValue={this.state.usercomment} placeholder=\"Комментарий к заказу\" onChange={this.heandleChange}></textarea>\r\n                    </label>\r\n                </fieldset>\r\n                <fieldset className=\"flex w100p\">\r\n                    <legend>Дополнительно</legend>\r\n                    <label className=\"flex-center\">\r\n                        <span className=\"fons12\">Срочный распил</span>\r\n                        <input type=\"checkbox\" name=\"faster\" checked={billing.faster} onChange={this.heandleChange} />\r\n                    </label>\r\n                    <label className=\"flex-center\">\r\n                        <span className=\"fons12\">Упаковка в плёнку</span>\r\n                        <input type=\"checkbox\" name=\"inbox\" checked={billing.inbox} onChange={this.heandleChange} />\r\n                    </label>\r\n                    <label className=\"flex-center\">\r\n                        <span className=\"fons12\">Упаковка на поддон</span>\r\n                        <input type=\"checkbox\" name=\"poddon\" checked={billing.poddon} onChange={this.heandleChange} />\r\n                    </label>\r\n                </fieldset>\r\n                <fieldset className=\"w100p\">\r\n                    <legend>Доставка</legend>\r\n                    <label>\r\n                        <input type=\"text\" name=\"billingaddress\" defaultValue={this.state.billingaddress} placeholder=\"Адрес доставки\" onChange={this.heandleChange} />\r\n                    </label>\r\n                </fieldset>\r\n            </form>\r\n            <div id=\"calc-form-controlls-wrapper\">\r\n                <button className=\"btn\" onClick={this.props.toOrderFunc}>Назад к списку</button>\r\n                <button className=\"btn\" onClick={this.setRequest}>Создать заказ</button>\r\n            </div>\r\n            {message}\r\n            </>\r\n        );\r\n        }\r\n        else{\r\n            return(\r\n                <>\r\n                <div id=\"calc-form-controlls-wrapper\">\r\n                    <button className=\"btn\" onClick={this.props.toOrderFunc}>Назад к списку</button>\r\n                </div>\r\n                {message}\r\n                </>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport {Checkout};\r\n\r\nfunction createRequestData(data,form){\r\n    let details = data.details;\r\n    let o = data.importOptions;\r\n    let date = new Date();\r\n    let userData = `${form.username} ${form.userphone} ${form.useremail}`;\r\n    let space = '';\r\n    let order = [\r\n        [space],\r\n        ['Заказчик',userData,space,space,space,'дата',formatDate(date)],\r\n        [space],\r\n        ['Цвет плиты',o.SHEET_COLOR,space,'Толщина плиты',o.SHEET_DEPTH],\r\n        [space],\r\n        ['Цвет кромки',space,'Обозначение',space],\r\n        ['Цвет кромки',space,'Обозначение',space],\r\n        ['Цвет кромки',space,'Обозначение',space],\r\n        [space],\r\n        ['ПОЗИЦИЯ','Длина','Ширина','Кол-во','Крома L1','Крома L2','Крома W1','Крома W2','Паз','Комментарий'],\r\n        [space]\r\n    ]\r\n    //console.log(order);\r\n    let ind = 1;\r\n    details.forEach((d,key) => {\r\n        let textureRotate = d.textureRotate;\r\n        let width = d.nominalwidth;\r\n        let length = d.nominalheight;\r\n        let edgeL1 = d.edge.left > 0 ? d.edge.left : '';\r\n        let edgeL2 = d.edge.right > 0 ? d.edge.right : '';\r\n        let edgeW1 = d.edge.top > 0 ? d.edge.top : '';\r\n        let edgeW2 = d.edge.bot > 0 ? d.edge.bot : '';\r\n        // Если текстура повёрнута, меняем значения ширина-длина\r\n        if(textureRotate === 0){\r\n            width = d.nominalheight;\r\n            length = d.nominalwidth;\r\n        }\r\n        // Если текстура повёрнута, меняем значения кромок L-W\r\n        if(textureRotate === 0){\r\n            edgeL1 = d.edge.top;\r\n            edgeL2 = d.edge.bot;\r\n            edgeW1 = d.edge.right;\r\n            edgeW2 = d.edge.left;\r\n        }\r\n        // Добавляем значения в таблицу\r\n        let row = [\r\n            `${ind}`, // key убрали\r\n            length,\r\n            width,\r\n            d.count,\r\n            edgeL1,edgeL2,edgeW1,edgeW2,\r\n            _e(d.groove ? d.groove : ''),\r\n            createComment(d,form)\r\n        ];\r\n        order.push(row);\r\n        ind++;\r\n    })\r\n    return JSON.stringify(order);\r\n}\r\n\r\nfunction createComment(d,form){\r\n    let comment = '';\r\n    let breakString = '\\n';\r\n    // Добавляем углы\r\n    if(d.lt.x > 0 && d.lt.y > 0)\r\n        comment += `Левый верхний: ${_e(d.lt.type)} | X:${d.lt.nomX} Y:${d.lt.nomY}` + breakString;\r\n    if(d.rt.x > 0 && d.rt.y > 0)\r\n        comment += `Правый верхний: ${_e(d.rt.type)} | X:${d.rt.nomX} Y:${d.rt.nomY}` + breakString;\r\n    if(d.rb.x > 0 && d.rb.y > 0)\r\n        comment += `Правый нижний: ${_e(d.rb.type)} | X:${d.rb.nomX} Y:${d.rb.nomY}` + breakString;\r\n    if(d.lb.x > 0 && d.lb.y > 0)\r\n        comment += `Левый нижний: ${_e(d.lb.type)} | X:${d.lb.nomX} Y:${d.lb.nomY}` + breakString;\r\n    // Добавляем петли\r\n    if(d.loops && d.loops.side !== 'none'){\r\n        comment += `Кол-во петель: ${d.loops.count}` + breakString;\r\n        comment += `Сторона: ${_e(d.loops.side)}` + breakString;\r\n        comment += `До первой: ${d.loops.beforeNominal}` + breakString;\r\n        comment += `До последней: ${d.loops.afterNominal}` + breakString;\r\n    }\r\n    // Добавляем доп.опции\r\n    if(form.faster)\r\n        comment += 'Срочный распил - да' + breakString;\r\n    if(form.inbox)\r\n        comment += 'Упаковка в плёнку - да' + breakString;\r\n    if(form.poddon)\r\n        comment += 'Упаковка в поддон - да' + breakString;\r\n    // Добавляем комментарии\r\n    if(d.comment)\r\n        comment += 'Комментарий к детали:' + d.comment + breakString;\r\n\r\n    return comment;\r\n}\r\n\r\nfunction formatDate(date) {\r\n    var dd = date.getDate();\r\n    if (dd < 10) dd = '0' + dd;\r\n  \r\n    var mm = date.getMonth() + 1;\r\n    if (mm < 10) mm = '0' + mm;\r\n  \r\n    var yy = date.getFullYear() % 100;\r\n    if (yy < 10) yy = '0' + yy;\r\n  \r\n    return dd + '.' + mm + '.' + yy;\r\n}\r\n\r\nfunction _e(text){\r\n    // Sides\r\n    if(text === 'left')\r\n        return 'слева';\r\n    else if(text === 'top')\r\n        return 'сверху';\r\n    else if(text === 'right')\r\n        return 'справа';\r\n    else if(text === 'bot')\r\n        return 'снизу';\r\n    // Angles\r\n    else if(text === 'outside')\r\n        return 'Наружный';\r\n    else if(text === 'linear')\r\n        return 'Прямой';\r\n    else if(text === 'inside')\r\n        return 'внутренний';\r\n    // Default\r\n    else\r\n        return text;\r\n}","import '../App.css';\r\n\r\nfunction TextureVector(props){\r\n\r\n    let {width,height,textureRotate} = props.set;\r\n    let m = 70;\r\n    let arrows  = '>>>>>';\r\n    let x = textureRotate === 0 ? (70+width)/2 - 40  : (70+width)/2 + 60 ;\r\n    let y = textureRotate === 0 ? (70+height)/2 + 40 : (70+height)/2 + 100 ;\r\n    return(\r\n        <text \r\n            fontSize=\"400%\" \r\n            fill=\"#999999\"\r\n            transform={`rotate(${-textureRotate},${x},${y})`} \r\n            x={x} \r\n            y={y}>\r\n                {arrows}\r\n        </text>\r\n    )\r\n}\r\n\r\nexport {TextureVector};","// Helpful functions\r\n\r\nclass Helper{\r\n\r\n    prepareNumber(number){\r\n        return number;\r\n    }\r\n    scalingW(number,set){\r\n        return number/(set.width/set.nominalwidth);\r\n    }\r\n    scalingH(number,set){\r\n        return number/(set.height/set.nominalheight);\r\n    }\r\n    enscalingW(number,set){\r\n        return number/(set.nominalwidth/set.width);\r\n    }\r\n    enscalingH(number,set){\r\n        return number/(set.nominalheight/set.height);\r\n    }\r\n    enscalingAny(number,set,side){\r\n        let os = side === 'left' || side === 'right' ? 'height' : 'width';\r\n        if(set.nominalwidth >= 500){\r\n            return number/(set['nominal'+os]/(set[os]));\r\n        }\r\n        else\r\n            return number;\r\n    }\r\n    descalingAny(number,set,side){\r\n        let os = side === 'left' || side === 'right' ? 'height' : 'width';\r\n        if(set.nominalwidth >= 500){\r\n            return Math.trunc((number-70)*(set['nominal'+os]/(set[os])));\r\n        }\r\n        else\r\n            return number;\r\n    }\r\n    descalingAnyV2(number,set,side){\r\n        let os = side === 'left' || side === 'right' ? 'height' : 'width';\r\n        if(set.nominalwidth >= 500){\r\n            return Math.trunc(number*(set['nominal'+os]/(set[os])));\r\n        }\r\n        else\r\n            return number;\r\n    }\r\n}\r\n\r\nexport {Helper};","import React from 'react';\r\nimport '../App.css';\r\nimport {Helper} from '../helper';\r\n\r\nconst helper = new Helper();\r\n\r\n// ============================================ LOOPS\r\nclass LoopsOptions extends React.Component{\r\n    state = {\r\n      side: 'none',\r\n      count: 2,\r\n      before: 100,\r\n      after: 200,\r\n      minSpace: 50,\r\n      error: false,\r\n    }\r\n  \r\n    handleInputChange = (e) => {\r\n        let fieldName = e.target.name; // Поле формы\r\n        let value = e.target.value; // Значение формы\r\n        let key = e.target.closest('.detail').dataset.key; // Ключ детали\r\n        let steps = this.state.count - 1; // желаемое кол-во отрезков между первой и последней деталью\r\n        let step = Math.round((this.state.after-this.state.before)/steps, 1); // размер одного отрезка\r\n        let set = this.props.set;\r\n        // Предотвращаем введение невозможных значений\r\n        if(e.target.type === 'number'){\r\n            //const min = e.target.min;\r\n            const max = e.target.max;\r\n            if(+value > +max) value = max;\r\n        }\r\n        \r\n        this.setState({\r\n            [fieldName]: value,\r\n            error: false\r\n        }, () => {\r\n            //  Не позволяем добавлять больше петель, \r\n            //  чем это возможно при сохранении минимального расстояния между центрами петель,\r\n            //  обозначенного как minSpace, не путать с indent(отступ петли от края детали)\r\n            if(fieldName === 'count' && step < this.state.minSpace){\r\n                return\r\n            }\r\n            let before = helper.enscalingAny(this.state.before, set, this.state.side);\r\n            let after = helper.enscalingAny(this.state.after, set, this.state.side);\r\n            let loops = {\r\n                side: fieldName === 'side' ? value : this.state.side,\r\n                count: this.state.count,\r\n                before: before,\r\n                beforeNominal: this.state.before,\r\n                after: after,\r\n                afterNominal: this.state.after,\r\n                minSpace: this.state.minSpace,\r\n            }\r\n            this.props.func(loops, key); // отправлем данные в Арр\r\n        })\r\n    }\r\n\r\n    isFree = (r,A1,A2) => {\r\n        if(r === 'groove' || A1 || A2){\r\n            return true;\r\n        }\r\n        if(!r) return false;\r\n    }\r\n  \r\n    render(){\r\n        let {side,before,after,minSpace} = this.state;\r\n        let set = this.props.set;\r\n        let beforeMin = +minSpace*2;\r\n        let beforeMax = after - minSpace*2;\r\n        let afterMax = side === 'top' || side === 'bot' ? set.nominalwidth - minSpace*2 : set.nominalheight - minSpace*2;\r\n        let afterMin = +minSpace*2 + +before;\r\n        let countMax = Math.round((after-before)/minSpace) + 1;\r\n        let LTangle = +set.lt.x === 0 ? false : true;\r\n        let RTangle = +set.rt.x === 0 ? false : true;\r\n        let RBangle = +set.rb.x === 0 ? false : true;\r\n        let LBangle = +set.lb.x === 0 ? false : true;\r\n        let r = set.reserve;\r\n        let resL = this.isFree(r.left,LTangle,LBangle);\r\n        let resT = this.isFree(r.top,LTangle,RTangle);\r\n        let resR = this.isFree(r.right,RTangle,RBangle);\r\n        let resB = this.isFree(r.bot,RBangle,LBangle);\r\n        \r\n        if(set.nominalwidth < 150)\r\n            resT = resB = true;\r\n        if(set.nominalheight < 150)\r\n            resL = resR = true;\r\n\r\n        if(r.left==='groove' || r.top==='groove' || r.right==='groove' || r.bot==='groove'){\r\n            return(\r\n                <span className=\"fons12 red\">Петли несовместимы с пазами</span>\r\n            )\r\n        }\r\n        if(resL && resT && resR && resB){\r\n            return(\r\n                <span className=\"fons12 red\">Нет вариантов</span>\r\n            )\r\n        }\r\n\r\n        return(\r\n            <>\r\n            <label className=\"flex-center\">\r\n                <span>Сторона</span>\r\n                <select onChange={this.handleInputChange} name=\"side\" defaultValue=\"none\" value={set.loops.side}>\r\n                    <option key=\"loopnone\" value=\"none\">Нет</option>\r\n                    <option key=\"loopleft\" value=\"left\"  disabled={resL}>Слева{resL && ' (занято)'}</option>\r\n                    <option key=\"looptop\" value=\"top\"   disabled={resT}>Сверху{resT && ' (занято)'}</option>\r\n                    <option key=\"loopright\" value=\"right\" disabled={resR}>Справа{resR && ' (занято)'}</option>\r\n                    <option key=\"loopbot\" value=\"bot\"   disabled={resB}>Снизу{resB && ' (занято)'}</option>\r\n                </select>\r\n            </label>\r\n            <label className=\"flex-center ml-a\"><span className=\"fons12\">От верхнего/нижнего края отступ отверстий {beforeMin}мм.</span></label>\r\n            <div className=\"w100p\"></div>\r\n\r\n            {this.state.side !== 'none' &&\r\n            <>\r\n            <label className=\"flex-center\">\r\n                <span>До&nbsp;первой <br/>петли, мм</span>\r\n                <input \r\n                    onInput={this.handleInputChange} \r\n                    name=\"before\" \r\n                    type=\"number\"\r\n                    min={beforeMin}\r\n                    max={beforeMax}\r\n                    step=\"1\" \r\n                    value={this.state.before.toString()} />\r\n                    <span>max: <b>{beforeMax}</b>&nbsp;мм</span>\r\n            </label>\r\n            <label className=\"flex-center\">\r\n                <span>До&nbsp;последней <br/>петли, мм</span>\r\n                <input \r\n                    onInput={this.handleInputChange} \r\n                    name=\"after\" \r\n                    type=\"number\"\r\n                    min={afterMin}\r\n                    max={afterMax}\r\n                    step=\"1\" \r\n                    value={this.state.after.toString()} />\r\n                    <span>max: <b>{afterMax}</b>&nbsp;мм</span>\r\n            </label>\r\n            <label className=\"flex-center\">\r\n                <span>Кол-во, шт</span>\r\n                <input \r\n                    className={this.state.error ? 'error' : ''}\r\n                    onInput={this.handleInputChange} \r\n                    name=\"count\" \r\n                    type=\"number\"\r\n                    min=\"2\"\r\n                    max={countMax}\r\n                    step=\"1\" \r\n                    defaultValue=\"2\" />\r\n            </label>\r\n            </>\r\n            }\r\n            </>\r\n        );\r\n    }\r\n  }\r\n\r\nfunction Loops(props){\r\n    let set = props.set;\r\n    let m = props.m;\r\n    let loops = set.loops;\r\n    let indent = helper.enscalingAny(25,set,loops.side);\r\n    let radius = helper.enscalingAny(35/2,set,loops.side);\r\n\r\n    if(loops.side === undefined || loops.side === 'none') return('');\r\n  \r\n    let width = set.width;\r\n    let height = set.height;\r\n    let circles = [];\r\n\r\n    if(loops.side === 'left'){\r\n        circles.push(<path key=\"lpath\" d={`M ${m+indent} ${m} v ${height}`} stroke=\"#72aee6\" strokeDasharray=\"10\" fill=\"transparent\"/>);\r\n        circles.push(<Circle set={set} key={'lbefore'} side={loops.side} nominal={+loops.beforeNominal} cx={m+indent} cy={+loops.before+m} r={radius} m={m} />);\r\n        circles.push(<Circle set={set} key={'lafter'} side={loops.side} nominal={+loops.afterNominal} cx={m+indent} cy={+loops.after+m} r={radius} m={m} />);\r\n    }\r\n    else if(loops.side === 'top'){\r\n        circles.push(<path key=\"tpath\" d={`M ${m} ${m+indent} h ${width}`} stroke=\"#72aee6\" strokeDasharray=\"10\" fill=\"transparent\"/>);\r\n        circles.push(<Circle set={set} key={'tbefore'} side={loops.side} nominal={+loops.beforeNominal} cx={+loops.before+m} cy={m+indent} r={radius} m={m} />);\r\n        circles.push(<Circle set={set} key={'tafter'} side={loops.side} nominal={+loops.afterNominal} cx={+loops.after+m} cy={m+indent} r={radius} m={m} />);\r\n    }\r\n    else if(loops.side === 'right'){\r\n        circles.push(<path key=\"rpath\" d={`M ${m+width-indent} ${m} v ${height}`} stroke=\"#72aee6\" strokeDasharray=\"10\" fill=\"transparent\"/>);\r\n        circles.push(<Circle set={set} key={'rbefore'} side={loops.side} nominal={+loops.beforeNominal} cx={m+width-indent} cy={+loops.before+m} r={radius} m={m} />);\r\n        circles.push(<Circle set={set} key={'rafter'} side={loops.side} nominal={+loops.afterNominal} cx={m+width-indent} cy={+loops.after+m} r={radius} m={m} />);\r\n    }\r\n    else if(loops.side === 'bot'){\r\n        circles.push(<path key=\"bpath\" d={`M ${m} ${height+m-indent} h ${width}`} stroke=\"#72aee6\" strokeDasharray=\"10\" fill=\"transparent\"/>);\r\n        circles.push(<Circle set={set} key={'bbefore'} side={loops.side} nominal={+loops.beforeNominal} cx={+loops.before+m} cy={height+m-indent} r={radius} m={m} />);\r\n        circles.push(<Circle set={set} key={'bafter'} side={loops.side} nominal={+loops.afterNominal} cx={+loops.after+m} cy={height+m-indent} r={radius} m={m} />);\r\n    }\r\n        \r\n\r\n    if(loops.count > 2){\r\n        let steps = loops.count - 1;\r\n        let before = loops.before;\r\n        let after = loops.after;\r\n        let beforeNom = +loops.beforeNominal;\r\n        let afterNom = +loops.afterNominal;\r\n        let stepNom = (afterNom-beforeNom)/steps;\r\n        let step = (after-before)/steps;\r\n        for(let i = 1; i < steps; i++){\r\n            let circleCX = m+indent;\r\n            let circleCY = +loops.before+(step*i)+m;\r\n            let nominal = beforeNom+(stepNom*i)+m;\r\n            if(loops.side === 'top'){\r\n                circleCY = m+indent;\r\n                circleCX = +loops.before+(step*i)+m;\r\n                nominal = beforeNom+(stepNom*i)+m;\r\n            }\r\n            else if(loops.side === 'right'){\r\n                circleCX = width+m-indent;\r\n                circleCY = +loops.before+(step*i)+m;\r\n                nominal = beforeNom+(stepNom*i)+m;\r\n            }\r\n            else if(loops.side === 'bot'){\r\n                circleCY = height+m-indent;\r\n                circleCX = +loops.before+(step*i)+m;\r\n                nominal = beforeNom+(stepNom*i)+m;\r\n            }\r\n            circles.push(\r\n                <Circle \r\n                    key={`${circleCX}-${circleCY}-${i}`} \r\n                    nominal={nominal}\r\n                    cx={circleCX} \r\n                    cy={circleCY} \r\n                    r={radius} \r\n                    width={width} \r\n                    height={height} \r\n                    side={loops.side}\r\n                    set={set}\r\n                    m={m} />);\r\n        }\r\n    }  \r\n    return circles;\r\n}\r\n  \r\nfunction Circle(props){\r\n    let set = props.set;\r\n    let side = props.side;\r\n    let line = `M ${props.cx} ${props.cy} h ${props.r + 20}`;\r\n    let numberX = props.cx + 45;\r\n    let numberY = props.cy + 8;\r\n    let number = helper.descalingAny(props.cy,set,side);\r\n    if(side === 'top'){\r\n        line = `M ${props.cx} ${props.cy} v ${props.r + 20}`;\r\n        numberX = props.cx - 23;\r\n        numberY = props.cy + 60;\r\n        number = helper.descalingAny(props.cx,set,side);\r\n    }\r\n    else if(side === 'right'){\r\n        line = `M ${props.cx} ${props.cy} h -${props.r + 20}`;\r\n        numberX = props.cx - 90;\r\n        numberY = props.cy + 10;\r\n        number = helper.descalingAny(props.cy,set,side);\r\n    }\r\n    else if(side === 'bot'){\r\n        line = `M ${props.cx} ${props.cy} v -${props.r + 20}`;\r\n        numberX = props.cx - 20;\r\n        numberY = props.cy - 50;\r\n        number = helper.descalingAny(props.cx,set,side);\r\n    }\r\n    \r\n    let deg = 0;\r\n    if(side === 'top' || side === 'bot'){\r\n        //deg = -90; ДОРАБОТАТЬ\r\n    }\r\n\r\n    return (\r\n      <>\r\n      <circle cx={props.cx} cy={props.cy} r={props.r} stroke=\"#3b8ecc\" fill=\"#3b8ecc\" />\r\n      <path d={line}  stroke=\"#3b8ecc\" />\r\n      <text transform={`rotate(${deg},${numberX},${numberY})`} fill=\"#3b8ecc\" fontSize=\"150%\" x={numberX} y={numberY}>{Math.floor(props.nominal)}</text>\r\n      </>\r\n    );\r\n}\r\n\r\nexport {LoopsOptions, Loops};","import React from 'react';\r\nimport '../App.css';\r\n\r\n// ============================================ GROOVE\r\nclass GrooveOptions extends React.Component{\r\n\r\n    handleInputChange = (e) => {\r\n        let fieldName = e.target.name; // Поле формы\r\n        let value = e.target.value; // Значение формы\r\n        let key = e.target.closest('.detail').dataset.key; // Ключ детали\r\n\r\n        this.setState({\r\n            [fieldName]: value,\r\n            error: false\r\n          }, () => {\r\n            this.props.func(this.state.side, key); // отправлем данные в Арр\r\n          }\r\n        )\r\n    }\r\n\r\n    isFree = (r,A1,A2) => {\r\n        if(r === 'loops' || A1 || A2){\r\n            return true;\r\n        }\r\n        if(!r) return false;\r\n    }\r\n\r\n    render(){\r\n        let set = this.props.set;\r\n        let LTangle = +set.lt.x === 0 ? false : true;\r\n        let RTangle = +set.rt.x === 0 ? false : true;\r\n        let RBangle = +set.rb.x === 0 ? false : true;\r\n        let LBangle = +set.lb.x === 0 ? false : true;\r\n        let r = set.reserve;\r\n        let resL = this.isFree(r.left,LTangle,LBangle);\r\n        let resT = this.isFree(r.top,LTangle,RTangle);\r\n        let resR = this.isFree(r.right,RTangle,RBangle);\r\n        let resB = this.isFree(r.bot,RBangle,LBangle);\r\n\r\n        if(r.left==='loops' || r.top==='loops' || r.right==='loops' || r.bot==='loops'){\r\n            return(\r\n                <span className=\"fons12 red\">Пазы несовместимы с петлями</span>\r\n            )\r\n        }\r\n\r\n        if(resL && resT && resR && resB){\r\n            return(\r\n                <span className=\"fons12 red\">Нет вариантов</span>\r\n            )\r\n        }\r\n\r\n        return(\r\n            <div className=\"flex-nowrap flex-center\">\r\n                <label className=\"flex-column\">\r\n                    <span>Сторона</span>\r\n                    <select onChange={this.handleInputChange} name=\"side\" value={set.groove}>\r\n                        <option value=\"none\">Нет</option>\r\n                        <option value=\"left\"  disabled={resL}>Слева{resL && ' (занято)'}</option>\r\n                        <option value=\"top\"   disabled={resT}>Сверху{resT && ' (занято)'}</option>\r\n                        <option value=\"right\" disabled={resR}>Справа{resR && ' (занято)'}</option>\r\n                        <option value=\"bot\"   disabled={resB}>Снизу{resB && ' (занято)'}</option>\r\n                    </select>\r\n                </label>\r\n                <span className=\"fons12\">\r\n                    <b>Параметры паза: </b>\r\n                    глубина 8 мм,\r\n                    ширина 4 мм,\r\n                    расстояние от края 16 мм (20 мм вместе с пазом)\r\n                </span>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport {GrooveOptions};\r\n\r\nfunction Groove(props){\r\n    let set = props.set;\r\n    let m = props.m;\r\n    let side = set.groove;\r\n    \r\n    if(!side) return('');\r\n    \r\n    let indent = set.grooveIndent;\r\n    let width = set.grooveWidth;\r\n    let x = m;\r\n    let y = m;\r\n    let vector = side === 'left' || side === 'right' ? 'v' : 'h';\r\n    let size = vector === 'h' ? set.width : set.height;\r\n    \r\n    if(side === 'left')\r\n        x = m + indent; size = size*-1;\r\n    if(side === 'top')\r\n        y = m + indent;\r\n    if(side === 'right')\r\n        x = m + +set.width - indent;\r\n    if(side === 'bot')\r\n        y = +set.height + m - indent; size = size*-1;\r\n\r\n    return <path d={`M ${x} ${y} ${vector} ${size}`} stroke=\"green\" strokeWidth={width} fill=\"transparent\"/>\r\n}\r\nexport {Groove};","import React from 'react';\r\nimport '../App.css';\r\n\r\n// ============================================ GROOVE\r\nclass EdgeOptions extends React.Component{\r\n\r\n    state = {\r\n        left: '0.0', top: '0.0', right: '0.0', bot: '0.0',\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        let set   = this.props.set;\r\n        let lta = set.lt.x > 0 ? true : false;\r\n        let rta = set.rt.x > 0 ? true : false;\r\n        let rba = set.rb.x > 0 ? true : false;\r\n        let lba = set.lb.x > 0 ? true : false;\r\n\r\n        let fieldName = e.target.name; // Поле формы\r\n        let value = e.target.value; // Значение формы\r\n        let key = e.target.closest('.detail').dataset.key; // Ключ детали\r\n        let newValue = {[fieldName]: value}\r\n\r\n        if(fieldName === 'left' && lta)\r\n            newValue.top = value;\r\n        else if(fieldName === 'left' && lba)\r\n            newValue.bot = value;\r\n        else if(fieldName === 'top' && lta)\r\n            newValue.left = value;\r\n        else if(fieldName === 'top' && rta)\r\n            newValue.right = value;\r\n        else if(fieldName === 'right' && rta)\r\n            newValue.top = value;\r\n        else if(fieldName === 'right' && rba)\r\n            newValue.bot = value;\r\n        else if(fieldName === 'bot' && rba)\r\n            newValue.right = value;\r\n        else if(fieldName === 'bot' && lba)\r\n            newValue.left = value;\r\n\r\n        this.setState( newValue, () => {\r\n            this.props.func(this.state, key); // отправлем данные в Арр\r\n          }\r\n        )\r\n    }\r\n\r\n    render(){\r\n        let set   = this.props.set;\r\n        let left  = set.edge.left;\r\n        let top   = set.edge.top;\r\n        let right = set.edge.right;\r\n        let bot   = set.edge.bot;\r\n        let min   = set.edgeMin;\r\n        let max   = set.edgeMax;\r\n        let query = this.props.query;\r\n        return(\r\n            <>\r\n            <label className=\"flex-column\">\r\n                <span>Слева</span>\r\n                <select tabIndex={query + '4'} onChange={this.handleChange} name=\"left\" value={left}>\r\n                    <option value=\"0.0\">0.0</option>\r\n                    <option value={min}>{min}</option>\r\n                    <option value={max}>{max}</option>\r\n                </select>\r\n            </label>\r\n            <label className=\"flex-column\">\r\n                <span>Сверху</span>\r\n                <select tabIndex={query + '5'} onChange={this.handleChange} name=\"top\" value={top}>\r\n                    <option value=\"0.0\">0.0</option>\r\n                    <option value={min}>{min}</option>\r\n                    <option value={max}>{max}</option>\r\n                </select>\r\n            </label>\r\n            <label className=\"flex-column\">\r\n                <span>Справа</span>\r\n                <select tabIndex={query + '6'} onChange={this.handleChange} name=\"right\" value={right}>\r\n                    <option value=\"0.0\">0.0</option>\r\n                    <option value={min}>{min}</option>\r\n                    <option value={max}>{max}</option>\r\n                </select>\r\n            </label>\r\n            <label className=\"flex-column\">\r\n                <span>Снизу</span>\r\n                <select tabIndex={query + '7'} onChange={this.handleChange} name=\"bot\" value={bot}>\r\n                    <option value=\"0.0\">0.0</option>\r\n                    <option value={min}>{min}</option>\r\n                    <option value={max}>{max}</option>\r\n                </select>\r\n            </label>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport {EdgeOptions};\r\n\r\nfunction Edge(props){\r\n    let {set,m} = props;\r\n    let width = set.width;\r\n    let height = set.height;\r\n    let length = 100;\r\n    //let lx = m - 10;\r\n    let ly = m + set.height + 10;\r\n    let rx = m + set.width + 10;\r\n    let color = \"green\";\r\n    let fontSize = \"130%\";\r\n    return(\r\n        <>\r\n        <path d={`M ${m-7} ${(m+height)/2-length/2} v ${length}`} stroke={color} strokeDasharray=\"15,10\" strokeWidth=\"3\" fill=\"transparent\" />\r\n        <text fontSize={fontSize} x={m-27} y={height/2+50} transform={`rotate(-90,${m-27},${height/2+40})`} fill={color}>{set.edge.left}</text>\r\n        <path d={`M ${(width+m)/2} ${ly} h ${length}`} stroke={color} strokeDasharray=\"15,10\" strokeWidth=\"3\" fill=\"transparent\" />\r\n        <text fontSize={fontSize} x={(width+m)/2+20} y={height+m+40} fill={color}>{set.edge.bot}</text>\r\n\r\n        <path d={`M ${rx} ${(m+height)/2} v ${length}`} stroke={color} strokeDasharray=\"15,10\" strokeWidth=\"3\" fill=\"transparent\" />\r\n        <text fontSize={fontSize} x={rx+25} y={(m+height)/2 + 70} transform={`rotate(-90,${rx+25},${(m+height)/2 + 60})`} fill={color}>{set.edge.right}</text>\r\n        <path d={`M ${(m+width)/2} ${m-7} h ${length}`} stroke={color} strokeDasharray=\"15,10\" strokeWidth=\"3\" fill=\"transparent\" />\r\n        <text fontSize={fontSize} x={(m+width)/2+20} y={m-16} fill={color}>{set.edge.top}</text>\r\n        </>\r\n    );\r\n}\r\nexport {Edge};","import {TextureVector} from './texture-vector';\r\nimport {Loops} from './loops';\r\nimport {Groove} from './groove';\r\nimport {Edge} from './edge';\r\n\r\nfunction correctSize(side,min,max){\r\n    let m = Math.abs(side);\r\n    if(m < min)\r\n      return min;\r\n    else if(m > max)\r\n      return max;\r\n    else\r\n      return m;\r\n}\r\n  \r\nfunction DetailPlan(props){\r\n    let set = props.set;\r\n    // Раздаём значения\r\n    let {width,nominalwidth,minWidth,maxWidth,height,nominalheight,minHeight,maxHeight,lt,rt,lb,rb} = set;\r\n    let m = 70;\r\n    const o = window.importOptions;\r\n  \r\n    width = correctSize(width,minWidth,maxWidth);\r\n    height = correctSize(height,minHeight,maxHeight);\r\n  \r\n    // Пробуем сохранить пропорции\r\n    if(nominalwidth >= 500){\r\n      //## Размеры детали\r\n      height = set.height = Math.round(500/((Math.round(nominalwidth/nominalheight*10,-1)/10)));\r\n    }\r\n  \r\n    if(height < 200)\r\n      height = set.height = 200;\r\n    \r\n    // Выводим фигуру\r\n    let ltA   = `M ${m} ${lt.x + m} Q ${angleControlDotLT(m,lt)} ${lt.y + m} ${m}`;\r\n    let top   = ` L ${(width-rt.y + m)} ${m}`;\r\n    let rtA   = ` Q ${angleControlDotRT(m,rt,set)} ${width+m} ${+rt.x + m}`;\r\n    let right = ` L ${(width + m)} ${(height - rb.x + m)}`;\r\n    let rbA   = ` Q ${angleControlDotRB(m,rb,set)} ${(width - rb.y + m)} ${(height + m)}`;\r\n    let bot   = ` L ${(+lb.y+m)} ${(height + m)}`;\r\n    let lbA   = ` Q ${angleControlDotLB(m,lb,set)} ${m} ${height-lb.x+m}`;\r\n  \r\n    let color = \"brown\";\r\n    let fons = '150%';\r\n    let id = `bg-${props.id}`;\r\n    let transform = <rect \r\n                      x={m} \r\n                      y={m} \r\n                      width={1000} \r\n                      height={1000} \r\n                      fill={`url(#${id})`}>\r\n                    </rect>;\r\n    if(set.textureRotate > 0){\r\n      transform = <rect \r\n                    x={m+width} \r\n                    y={m} \r\n                    width={1000} \r\n                    height={1000} \r\n                    fill={`url(#${id})`} \r\n                    transform={`rotate(90,${m+width},${m})`} >\r\n                  </rect>;\r\n    }\r\n    let svg = \r\n      <svg id={props.id} xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" viewBox={\"0 0 \" + (width+m*2) +' '+ (height+m*2)}>\r\n        {/* ФОН */}\r\n        <defs>\r\n          <pattern \r\n            id={id} \r\n            height=\"100%\" width=\"100%\"\r\n            patternContentUnits=\"objectBoundingBox\" \r\n            viewBox={`${m} ${m} ${width} ${height}`} preserveAspectRatio=\"xMidYMid slice\">\r\n            <image \r\n              href={o.TEXTURE_IMAGE_URL}\r\n              preserveAspectRatio=\"xMidYMid slice\"\r\n              x={m} y={m} \r\n              opacity=\"0.5\"\r\n              width=\"100%\" \r\n              height=\"100%\" />\r\n          </pattern>\r\n          <pattern \r\n            id={`${id}-copy`} \r\n            height=\"100%\" width=\"100%\" \r\n            patternContentUnits=\"objectBoundingBox\" \r\n            viewBox={`${m} ${m} ${width} ${height}`} preserveAspectRatio=\"xMidYMid slice\">\r\n            {transform}\r\n          </pattern>\r\n        </defs>\r\n        {/* Деталь */}\r\n        <path d={ltA + top + rtA + right + rbA + bot + lbA + ' z'} stroke=\"#333333\" strokeWidth=\"3\" strokeLinejoin=\"miter\" fill={`url(#${id}-copy)`} opacity=\"0.7\"/>\r\n        {/* Размеры углов */}\r\n        {/* LT */}\r\n        <path d={`M ${m} ${Math.abs(lt.x) + m} v -${lt.x} h ${lt.y}`} strokeWidth=\"2\" stroke={color} strokeDasharray=\"10\" fill=\"transparent\"/>\r\n        <text fill={color} fontSize={fons} x={-30} y={135} transform={`rotate(-90,${(20)},${(96)})`}>{lt.nomX}мм</text>\r\n        <text fill={color} fontSize={fons} x={m+10} y={m-10}>{lt.nomY}мм</text>\r\n        {/* RT */}\r\n        <path d={`M ${width+m} ${Math.abs(rt.x) + m} v -${rt.x} h -${rt.y}`} strokeWidth=\"3\" stroke={color} strokeDasharray=\"10\" fill=\"transparent\"/>\r\n        <text fill={color} fontSize={fons} x={width+m-70} y={m-10}>{rt.nomY}мм</text>\r\n        <text fill={color} fontSize={fons} x={(width+m-20)} y={m+50} transform={`rotate(-90,${(width+m)+10},${(m+30)})`}>{rt.nomX}мм</text>\r\n        {/* RB */}\r\n        <path d={`M ${width+m} ${height - rb.x + m} v ${rb.x} h -${rb.y}`} strokeWidth=\"3\" stroke={color} strokeDasharray=\"10\" fill=\"transparent\"/>\r\n        <text fill={color} fontSize={fons} x={width+m-70} y={height+m+30}>{rb.nomY}мм</text>\r\n        <text fill={color} fontSize={fons} x={(width+m-20)} y={height+m+20} transform={`rotate(-90,${(width+m)-20},${(height+m-30)})`}>{rb.nomX}мм</text>\r\n        {/* LB */}\r\n        <path d={`M ${m} ${height - lb.x + m} v ${+lb.x} h ${+lb.y}`} strokeWidth=\"3\" stroke={color} strokeDasharray=\"10\" fill=\"transparent\"/>\r\n        <text fill={color} fontSize={fons} x={m+10} y={height+m+30}>{lb.nomY}мм</text>\r\n        <text fill={color} fontSize={fons} x={(m-10)} y={height+m-10} transform={`rotate(-90,${m-10},${height+m-10})`}>{lb.nomX}мм</text>\r\n        {/* Размер детали */}\r\n        <text fontSize={fons} x={(m+width)/2} y={20}>{nominalwidth}мм</text>\r\n        <text fontSize={fons} transform={`rotate(-90,${20},${(m+height)/2})`} x={m/2-50} y={(m+height)/2}>{nominalheight}мм</text>\r\n        {/* Петли */} <Loops set={set} m={m} />\r\n        {/* Паз */} <Groove set={set} m={m} />\r\n        {/* Кромка */} <Edge set={set} m={m} />\r\n        {/* Направление текстуры */} <TextureVector set={set} />\r\n      </svg>;\r\n    return svg;\r\n}\r\nexport {DetailPlan};\r\n\r\nfunction angleControlDotLT(m,angle){\r\n    if(angle.type === 'outside')\r\n      return `${m} ${m}`;\r\n    else if(angle.type === 'linear')\r\n      return `${angle.x/2 + m} ${angle.y/2 + m}`;\r\n    else if(angle.type === 'inside')\r\n      return `${+angle.x + m} ${+angle.y + m}`;\r\n}\r\nfunction angleControlDotRT(m,angle,set){\r\n    if(angle.type === 'outside')\r\n      return `${(+set.width + m)} ${m}`;\r\n    else if(angle.type === 'linear')\r\n      return `${+set.width - angle.y/2 + m} ${angle.x/2 + m}`;\r\n    else if(angle.type === 'inside')\r\n      return `${+set.width - angle.y + m} ${+angle.x + m}`;\r\n}\r\nfunction angleControlDotRB(m,angle,set){\r\n    if(angle.type === 'outside')\r\n      return `${(+set.width + m)} ${+set.height + m}`;\r\n    else if(angle.type === 'linear')\r\n      return `${+set.width - angle.y/2 + m} ${+set.height - angle.x/2 + m}`;\r\n    else if(angle.type === 'inside')\r\n      return `${+set.width - angle.y + m} ${+set.height - angle.x + m}`;\r\n}\r\nfunction angleControlDotLB(m,angle,set){\r\n    if(angle.type === 'outside')\r\n      return `${m} ${+set.height + m}`;\r\n    else if(angle.type === 'linear')\r\n      return `${+angle.y/2 + m} ${+set.height - angle.x/2 + m}`;\r\n    else if(angle.type === 'inside')\r\n      return `${+angle.y + m} ${+set.height - angle.x + m}`;\r\n}","import React from \"react\";\r\n\r\nclass AngleOptions extends React.Component{\r\n    state = {\r\n      active: false,\r\n      type: 'outside',\r\n      send: true,\r\n      x: 0,\r\n      y: 0,\r\n      nomX:0,\r\n      nomY:0\r\n    }\r\n  \r\n    handleInputChange = (event) => {\r\n      const target = event.target;\r\n      let value = target.type === 'checkbox' ? target.checked : Math.abs(target.value);\r\n      const name = target.name;\r\n  \r\n      if(target.type === 'number' && this.state.send){\r\n        const breakPoint = target.dataset.break;\r\n        const max = target.max;\r\n        if(value > max) value = max;\r\n        this.setState({\r\n          x: value <= breakPoint ? value : breakPoint,\r\n          y: value,\r\n          nomX: value,\r\n          nomY: value,\r\n        }, () => this.backToApp(target))\r\n      }\r\n      else{\r\n        this.setState({\r\n          [name]: value,\r\n          nomX: name === 'x' ? value : this.state.x,\r\n          nomY: name === 'y' ? value : this.state.y,\r\n        }, () => this.backToApp(target));\r\n      }\r\n      \r\n      \r\n    }\r\n  \r\n    backToApp = (target) => {// Отправляем данные угла назад\r\n      let x = this.state.x;\r\n      let y = this.state.y;\r\n      let width = this.props.set.width;\r\n      let nominalwidth = this.props.set.nominalwidth;\r\n      let height = this.props.set.height;\r\n      let nominalheight = this.props.set.nominalheight;\r\n      //## Масштабирование, НЕ ОКРУГЛЯТЬ\r\n      if(nominalwidth >= 500){\r\n        x = x*(height/nominalheight);\r\n        y = y*(width/nominalwidth);\r\n      }\r\n      this.props.func(\r\n        this.props.angleName,\r\n        { \r\n          x:x,\r\n          y:y,\r\n          nomX:this.state.x,\r\n          nomY:this.state.y,\r\n          type:this.state.type,\r\n          title:this.props.set[this.props.angleName].title,\r\n          next:this.props.set[this.props.angleName].next,\r\n          prev:this.props.set[this.props.angleName].prev\r\n        },\r\n        target.closest('.detail').dataset.key\r\n      );\r\n    }\r\n  \r\n    handleTypeChange = (e) => {\r\n      let type = e.target.name;\r\n      this.setState(\r\n        {type: type},\r\n        () => this.backToApp(e.target)\r\n      );\r\n    }\r\n  \r\n    handleInputActive = (e) => {\r\n      const value = e.target.checked;\r\n      this.setState({\r\n        active: value\r\n      })\r\n      this.props.func(\r\n        this.props.angleName,\r\n        { // Отправляем данные угла назад\r\n          x: value ? this.state.x : 0,\r\n          y: value ? this.state.y : 0,\r\n          nomX:this.state.nomX,\r\n          nomY:this.state.nomY,\r\n          type:this.state.type,\r\n          title:this.props.set[this.props.angleName].title,\r\n          next:this.props.set[this.props.angleName].next,\r\n          prev:this.props.set[this.props.angleName].prev\r\n        },\r\n        e.target.closest('.detail').dataset.key\r\n      );\r\n    }\r\n  \r\n    render(){\r\n      let set = this.props.set;\r\n      let next = set[set[this.props.angleName].next];\r\n      let prev = set[set[this.props.angleName].prev];\r\n      let maxX = 101;\r\n      let maxY = 101;\r\n      \r\n      if(this.props.angleName === 'lt'){\r\n        maxY = +set.nominalwidth - next.nomY;\r\n        maxX = +set.nominalheight - prev.nomX;\r\n      }\r\n      else if(this.props.angleName === 'rt'){\r\n        maxY = +set.nominalwidth - prev.nomX;\r\n        maxX = +set.nominalheight - next.nomY;\r\n      }\r\n      else if(this.props.angleName === 'rb'){\r\n        maxY = +set.nominalwidth - next.nomY;\r\n        maxX = +set.nominalheight - prev.nomX;\r\n      }\r\n      else{\r\n        maxY = +set.nominalwidth - prev.nomY;\r\n        maxX = +set.nominalheight - next.nomX;\r\n      }\r\n  \r\n      let input = <span><input onChange={this.handleInputActive} type=\"checkbox\" name=\"active\" checked={this.state.active} /></span>;\r\n      // Если сторона зарезервирована\r\n      let closedAngle = [];\r\n      let reserveL = set.reserve.left;\r\n      let reserveT = set.reserve.top;\r\n      let reserveR = set.reserve.right;\r\n      let reserveB = set.reserve.bot;\r\n      let motive = '';\r\n      if( reserveL === 'loops' || reserveL === 'groove'){\r\n        closedAngle = ['lb','lt'];\r\n        reserveL === \"loops\" ? motive = 'петлями' : motive = 'пазом';\r\n      }\r\n      else if(reserveT === 'loops' || reserveT === 'groove'){\r\n        closedAngle = ['lt','rt'];\r\n        reserveT === \"loops\" ? motive = 'петлями' : motive = 'пазом';\r\n      }\r\n      else if(reserveR === 'loops' || reserveR === 'groove'){\r\n        closedAngle = ['rt','rb'];\r\n        reserveR === \"loops\" ? motive = 'петлями' : motive = 'пазом';\r\n      }\r\n      else if(reserveB === 'loops' || reserveB === 'groove'){\r\n        closedAngle = ['rb','lb'];\r\n        reserveB === \"loops\" ? motive = 'петлями' : motive = 'пазом';\r\n      }\r\n  \r\n      closedAngle.forEach((el)=>{\r\n        if(this.props.angleName === el)\r\n          input = <span className=\"reserve-notice red\">Сторона занята {motive}</span>;\r\n      })\r\n  \r\n      // Закрытое положение\r\n      if(!this.state.active){\r\n        return(\r\n          <div className=\"angle-options-wrapper\">\r\n            <div className=\"angle-options-type w100p\">\r\n              <label className=\"angle-title-wrapper\">\r\n                <span className={`angle-title ${this.props.angleName}`}>{set[this.props.angleName].title}</span>\r\n                {input}\r\n              </label>\r\n            </div>\r\n          </div>\r\n        )\r\n      }\r\n      // Открытое положение\r\n      return(\r\n        <div className={`angle-options-wrapper ${this.state.active && 'active'}`}>\r\n          <div className=\"angle-options-type w100p\">\r\n            <label className=\"angle-title-wrapper\">\r\n              <span className={`angle-title ${this.props.angleName}`}>{set[this.props.angleName].title}</span>\r\n              <span><input onChange={this.handleInputActive} type=\"checkbox\" name=\"active\" checked={this.state.active} /> вкл.</span>\r\n            </label>\r\n            <button onClick={this.handleTypeChange} name=\"outside\" className=\"angle-type__outside ml-a\" data-active={this.state.type === 'outside' && 'active' }>Внешний</button>\r\n            <button onClick={this.handleTypeChange} name=\"linear\" className=\"angle-type__linear\" data-active={this.state.type === 'linear' && 'active' }>Косой</button>\r\n            <button onClick={this.handleTypeChange} name=\"inside\" className=\"angle-type__inside\" data-active={this.state.type === 'inside' && 'active' }>Внутренний</button>\r\n          </div>\r\n          <label className=\"\">\r\n            X <input \r\n                onInput={this.handleInputChange} \r\n                type=\"number\" \r\n                name=\"y\" \r\n                min=\"30\" \r\n                max={Math.round(maxY,1)} \r\n                data-break={maxX} \r\n                step=\"1\" \r\n                value={this.state.y.toString()} />\r\n              <span>max: <b>{Math.round(maxY,1)}</b>&nbsp;мм</span>\r\n          </label>\r\n          <label className=\"switch\">\r\n            <span>Объединить<br />показатели</span>\r\n            <input \r\n              onChange={this.handleInputChange} \r\n              name=\"send\" \r\n              type=\"checkbox\" \r\n              checked={this.state.send} />\r\n          </label>\r\n          <label className=\"\">\r\n            Y <input \r\n                onInput={this.handleInputChange} \r\n                type=\"number\" \r\n                name=\"x\" \r\n                min=\"30\" \r\n                max={Math.round(maxX,1)} \r\n                step=\"1\" \r\n                value={this.state.x.toString()} \r\n                disabled={this.state.send} />\r\n              <span>max: <b>{Math.round(maxX,1)}</b>&nbsp;мм</span>\r\n          </label>\r\n        </div>\r\n      );\r\n    }\r\n}\r\n\r\nexport {AngleOptions};","import React from \"react\";\r\nimport { DetailPlan } from \"./detailPlan\";\r\nimport {LoopsOptions} from './loops';\r\nimport {GrooveOptions} from './groove';\r\nimport {EdgeOptions} from './edge';\r\nimport { AngleOptions } from \"./angleOptions\";\r\nimport {Helper} from '../helper';\r\n\r\nconst helper = new Helper();\r\n\r\nclass Detail extends React.Component{\r\n  \r\n    state = { error: null }\r\n  \r\n    handleSetSize = (e) => {\r\n      e.preventDefault();\r\n      let fieldName = e.target.name;\r\n      let key = this.props.dkey;\r\n      let min = +e.target.min;\r\n      let max = +e.target.max;\r\n      let value = +e.target.value.toString();\r\n  \r\n      this.setState({[fieldName]: value}, () => {\r\n        if(value < min || value > max){\r\n          e.target.classList.add('error')\r\n          if(value > max){\r\n            value = max;\r\n            this.setState({error: 'Значение поля было автоматически исправлено'});\r\n            e.target.classList.remove('error')\r\n          }\r\n        }\r\n        else{\r\n          this.setState({error:null})\r\n          e.target.classList.remove('error')}\r\n  \r\n        this.props.ff(key,fieldName,value);\r\n      })\r\n    }\r\n    handleSetTitle = (e) => {\r\n      let fieldName = e.target.name;\r\n      let value = e.target.value;\r\n      let key = this.props.dkey;\r\n  \r\n      this.props.ff(key,fieldName,value);\r\n    }\r\n  \r\n    render(){\r\n      let set = this.props.value;\r\n      let o = window.importOptions;\r\n      let baseTabIndex = this.props.query;\r\n      if(this.props.activeKey === 0){\r\n        return(\r\n          <div id={this.props.dkey} className=\"detail not-active\" data-key={this.props.dkey}>\r\n            <div className=\"detail-settings w100p\">\r\n              <div className=\"flex-nowrap relative\">\r\n                <fieldset id=\"detail-size\" className=\"flex\">\r\n                  <legend>Размеры</legend>\r\n                  <label className=\"w100p\">\r\n                    <input tabIndex=\"-1\" onChange={this.handleSetTitle} type=\"text\" name=\"title\" value={set.title} />\r\n                  </label>\r\n                  <label className=\"flex-column w100p\">\r\n                    <span>Комментарий</span>\r\n                    <input tabIndex=\"-1\" onChange={this.handleSetTitle} type=\"text\" name=\"comment\" value={set.comment} />\r\n                  </label>\r\n                  {this.state.error && <div className=\"field-error\">{this.state.error}</div>}\r\n                  <label className=\"flex-column\">\r\n                    <span>Длина, мм</span>\r\n                    <input autoFocus tabIndex={baseTabIndex + '1'} onChange={this.handleSetSize} type=\"number\" maxLength=\"4\" name=\"height\" min=\"60\" max={o.SHEET_LENGHT} value={set.nominalheight.toString()} />\r\n                    <span className=\"text-muted\">max: {o.SHEET_LENGHT}</span>\r\n                  </label>\r\n                  <label className=\"flex-column\">\r\n                    <span>Ширина, мм</span>\r\n                    <input tabIndex={baseTabIndex + '2'} onChange={this.handleSetSize} type=\"number\" pattern=\"[0-9]\" maxLength=\"4\" name=\"width\" min=\"60\" max={o.SHEET_WIDTH} value={set.nominalwidth.toString()} />\r\n                    <span className=\"text-muted\">max: {o.SHEET_WIDTH}</span>\r\n                  </label>\r\n                  <label className=\"flex-column\">\r\n                    <span>Кол-во, шт</span>\r\n                    <input tabIndex={baseTabIndex + '3'} onChange={this.handleSetSize} type=\"number\" maxLength=\"4\" name=\"count\" min=\"1\" max=\"1000\" value={set.count} />\r\n                  </label>\r\n                </fieldset>\r\n                <fieldset id=\"edge\" className=\"flex\">\r\n                  <legend>Кромка</legend>\r\n                  <EdgeOptions query={this.props.query} func={this.props.edgeF} set={this.props.value} />\r\n                </fieldset>\r\n                <div className=\"detail-ext-options\">\r\n                  <button tabIndex=\"-1\" data-action=\"change\" onClick={this.props.changeDetailOptions} className=\"btn\">Доп. опции</button>\r\n                  <button tabIndex=\"-1\" data-action=\"copy\" onClick={this.props.changeDetailOptions} className=\"btn\">Копировать</button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"detail-plan\">\r\n              <DetailPlan id={this.props.dkey} set={this.props.value} saveSVGfunc={this.props.saveSVGfunc} />\r\n              <button tabIndex=\"-1\" className=\"remove-detail-btn\" data-action=\"remove\" onClick={this.props.changeDetailOptions} title=\"Удалить деталь\"></button>\r\n            </div>\r\n          </div>\r\n        )\r\n      }\r\n      return(\r\n        <div className=\"detail active\" data-key={this.props.dkey}>\r\n          <div className=\"detail-settings w100p\">\r\n            <div className=\"flex-nowrap relative\">\r\n              <fieldset id=\"detail-size\" className=\"flex\">\r\n                <legend>Размеры</legend>\r\n                <label className=\"w100p\">\r\n                  <input tabIndex=\"-1\" onChange={this.handleSetSize} type=\"text\" name=\"title\" value={set.title} />\r\n                </label>\r\n                <label className=\"flex-column w100p\">\r\n                  <span>Комментарий</span>\r\n                  <input tabIndex=\"-1\" onChange={this.handleSetSize} type=\"text\" name=\"comment\" value={set.comment} />\r\n                </label>\r\n                {this.state.error && <div className=\"field-error\">{this.state.error}</div>}\r\n                <label className=\"flex-column\">\r\n                  <span>Длина, мм</span>\r\n                  <input tabIndex={1 + baseTabIndex} onChange={this.handleSetSize} type=\"number\" name=\"height\" min=\"60\" max={o.SHEET_LENGHT} value={set.nominalheight.toString()} />\r\n                  <span className=\"text-muted\">max: {o.SHEET_LENGHT}</span>\r\n                </label>\r\n                <label className=\"flex-column\">\r\n                  <span>Ширина, мм</span>\r\n                  <input tabIndex={2 + baseTabIndex} onInput={this.handleSetSize} \r\n                         type=\"number\" name=\"width\" min=\"60\" max={o.SHEET_WIDTH} \r\n                         value={helper.prepareNumber(set.nominalwidth.toString())} />\r\n                  <span className=\"text-muted\">max: {o.SHEET_WIDTH}</span>\r\n                </label>\r\n                <label className=\"flex-column\">\r\n                  <span>Кол-во, шт</span>\r\n                  <input tabIndex={3 + baseTabIndex} onChange={this.handleSetSize} type=\"number\" name=\"count\"  min=\"1\" max=\"1000\" value={set.count.toString()} />\r\n                </label>\r\n              </fieldset>\r\n  \r\n              <fieldset id=\"edge\" className=\"flex\">\r\n                <legend>Кромка</legend>\r\n                <EdgeOptions func={this.props.edgeF} set={this.props.value} />\r\n              </fieldset>\r\n              \r\n              <div className=\"detail-ext-options\">\r\n                <button tabIndex=\"-1\" data-action=\"close\" onClick={this.props.changeDetailOptions} className=\"btn\">Свернуть</button>\r\n                <button tabIndex=\"-1\" data-action=\"copy\" onClick={this.props.changeDetailOptions} className=\"btn\">Копировать</button>\r\n                <button tabIndex=\"-1\" data-action=\"rotate\" onClick={this.props.changeDetailOptions} className=\"btn\">Повернуть текстуру</button>\r\n              </div>\r\n            </div>\r\n  \r\n            <fieldset id=\"angles\" className=\"w100p\">\r\n              <legend>Углы</legend>\r\n              <AngleOptions angleName='lt' func={this.props.f} set={this.props.value} />\r\n              <AngleOptions angleName='rt' func={this.props.f} set={this.props.value} />\r\n              <AngleOptions angleName='lb' func={this.props.f} set={this.props.value} />\r\n              <AngleOptions angleName='rb' func={this.props.f} set={this.props.value} />\r\n            </fieldset>\r\n  \r\n            <fieldset id=\"loops\" className={set.loops && set.loops.side !== 'none' ? 'flex w100p' : 'flex w50p'}>\r\n              <legend>Петли</legend>\r\n              <LoopsOptions func={this.props.loopF} set={this.props.value} />\r\n            </fieldset>\r\n  \r\n            <fieldset id=\"groove\" className=\"flex w50p\">\r\n              <legend>Паз</legend>\r\n              <GrooveOptions func={this.props.grooveF} set={this.props.value} />\r\n            </fieldset>\r\n  \r\n          </div>\r\n          <div className=\"detail-plan\">\r\n            <DetailPlan id={this.props.dkey} set={this.props.value} />\r\n            <button tabIndex=\"-1\" className=\"remove-detail-btn\" data-action=\"remove\" onClick={this.props.changeDetailOptions} title=\"Удалить деталь\"></button>\r\n          </div>\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n\r\nexport {Detail};","import {Detail} from './detail';\r\n\r\nexport function DetailsList(props){\r\n  let list = [];\r\n  let {\r\n        set,\r\n        setSizeF,\r\n        loopF,\r\n        grooveF,\r\n        edgeF,\r\n        activeKey,\r\n        saveSVG,\r\n        changeDetailOptions\r\n      } = {...props};\r\n  let query = 1;\r\n  props.list.forEach(function(value,key) {\r\n    list.push( <Detail \r\n                activeKey={activeKey === key ? 1 : 0}\r\n                query={query}\r\n                changeDetailOptions={changeDetailOptions}\r\n                saveSVGfunc={saveSVG}\r\n                ff={setSizeF} \r\n                f={set} \r\n                loopF={loopF} \r\n                grooveF={grooveF}\r\n                edgeF={edgeF} \r\n                key={key} \r\n                dkey={key} \r\n                value={value} /> ); query++;\r\n  });\r\n  return(\r\n    <>\r\n    <h2>Список деталей</h2>\r\n    {list.length > 0 ? list : 'Список пуст'}\r\n    </>\r\n  );\r\n}","import React from 'react';\nimport './App.css';\nimport {Summary} from './components/summary';\nimport {Checkout} from './components/checkout';\nimport {DetailsList} from './components/detailsList';\n\nclass CopyDetail{\n  constructor(data){\n    this.detail = {\n      'title': data.title + ' (копия)',\n      'width': data.width,\n      'nominalwidth': data.width,\n      'minWidth': 60,\n      'maxWidth': window.importOptions.SHEET_WIDTH,\n      'height': data.height,\n      'nominalheight': data.height,\n      'minHeight': 60,\n      'maxHeight': window.importOptions.SHEET_LENGHT,\n      'count': 1,\n      'reserve':{\n        'left': data.reserve.left,\n        'top': data.reserve.top,\n        'right': data.reserve.right,\n        'bot': data.reserve.bot\n      },\n      'lt': {title:'Левый верхний' , prev:'lb', next:'rt', x:data.lt.x, y:data.lt.y, nomX:data.lt.nomX, nomY:data.lt.nomY, type:data.lt.type},\n      'rt': {title:'Правый верхний', prev:'lt', next:'rb', x:data.rt.x, y:data.rt.y, nomX:data.rt.nomX, nomY:data.rt.nomY, type:data.rt.type},\n      'rb': {title:'Правый нижний' , prev:'rt', next:'lb', x:data.rb.x, y:data.rb.y, nomX:data.rb.nomX, nomY:data.rb.nomY, type:data.rb.type},\n      'lb': {title:'Левый нижний'  , prev:'rb', next:'lt', x:data.lb.x, y:data.lb.y, nomX:data.lb.nomX, nomY:data.lb.nomY, type:data.lb.type},\n      'loops': data.loops,\n      'groove': data.groove,\n      'grooveIndent': 16,\n      'grooveWidth': 4,\n      'grooveDeep': 8,\n      'edge': data.edge,\n      'edgeMin': 0.4,\n      'edgeMax': 2.0,\n      'textureRotate': data.textureRotate,\n      'svg': null,\n    }\n  }\n  create(){\n    return this.detail;\n  }\n}\n\nclass App extends React.Component {\n\n  state = {\n    inputOnFocus: null,\n    stage: 'setorder',\n    details: new Map(),\n    importOptions: window.importOptions,\n    inputType: 'number',\n    activeDetail: null,\n    billingOptions: {\n      faster: false,\n      inbox: false,\n      poddon: false,\n    }\n  }\n\n  addNewDetailFunc = (e) => {\n    let newDetail = {\n      'title': \"Деталь #\" + (this.state.details.size + 1),\n      'width': 400,\n      'nominalwidth': 1400,\n      'minWidth': 60,\n      'maxWidth': 2040,\n      'height': 600,\n      'nominalheight': 1600,\n      'minHeight': 60,\n      'maxHeight': 2770,\n      'count': 1,\n      'reserve':{\n        'left': false,\n        'top': false,\n        'right': false,\n        'bot': false    \n      },\n      'lt': {title:'Левый верхний' , prev:'lb', next:'rt', x:0, y:0, nomX:0, nomY:0, type:'outside'},\n      'rt': {title:'Правый верхний', prev:'lt', next:'rb', x:0, y:0, nomX:0, nomY:0, type:'outside'},\n      'rb': {title:'Правый нижний' , prev:'rt', next:'lb', x:0, y:0, nomX:0, nomY:0, type:'outside'},\n      'lb': {title:'Левый нижний'  , prev:'rb', next:'lt', x:0, y:0, nomX:0, nomY:0, type:'outside'},\n      'loops': false,\n      'groove': false,\n      'grooveIndent': 16,\n      'grooveWidth': 4,\n      'grooveDeep': 8,\n      'edge':{\n        'left': 0.0,\n        'top': 0.0,\n        'right': 0.0,\n        'bot': 0.0    \n      },\n      'edgeMin': 0.4,\n      'edgeMax': 2.0,\n      'textureRotate': 90,\n      'svg': null,\n    }\n    let details = this.state.details;\n    let detailKey = 'D-' + new Date().getTime();\n    details.set(detailKey, newDetail);\n    this.setState({details});\n\n    return detailKey;\n  }\n\n  fromCheckout = (field,value) => {\n    let billingOptions = this.state.billingOptions;\n    billingOptions[field] = value;\n    this.setState({billingOptions});\n  }\n\n  inputOnChange = (angleTitle, obj, detailKey) => {\n    let details = this.state.details;\n    let detail = details.get(detailKey);\n\n    for(let key in obj){\n      detail[angleTitle][key] = obj[key];\n    }\n\n    details.set(detailKey,detail);\n    this.setState({details});\n  }\n\n  clearReserve = (set,item) => {\n    for(let side in set.reserve){\n      if(set.reserve[side] === item)\n        set.reserve[side] = false;\n    }\n    if(item === 'loops')\n      set.loops.side = false;\n    \n    return set;\n  }\n\n  handleSetDetailSize = (detailKey, side, value) => {\n    let details = this.state.details;\n    let detail = details.get(detailKey);\n\n    detail[side] = value;      \n    \n    if(side === 'width' && value > 500){\n      detail[side] = 500;\n    }\n    else if(side === 'width' && value < 150){\n      detail[side] = 150;\n    }\n    else if(side === 'height' && value > 700){\n      detail[side] = 700;\n    }\n    else if(side === 'height' && value < 150){\n      detail[side] = 150;\n    }\n\n    // Сбрасываем петли, если для них нет места\n    if(side === 'width' && value < 150){\n      if(detail.loops){\n        if(detail.loops.side === 'top' || detail.loops.side === 'bot'){\n          detail = this.clearReserve(detail,'loops');\n        }\n      }\n    }\n    if(side === 'height' && value < 150){\n      if(detail.loops){\n        if(detail.loops.side === 'left' || detail.loops.side === 'right'){\n          detail = this.clearReserve(detail,'loops');\n        }\n      }\n    }\n    \n    detail['nominal'+side] = value;\n    details.set(detailKey,detail);\n    this.setState({details});\n  }\n\n  loopChange = (loops, detailKey) => {\n    let details = this.state.details;\n    let detail = details.get(detailKey);\n    let width = detail.width;\n    let height = detail.height;\n\n    // Резервируем сторону детали, если она свободна\n    if(!detail.reserve[loops.side]){\n      for(let loopSide in detail.reserve){\n        if(detail.reserve[loopSide] === 'loops')\n          detail.reserve[loopSide] = false;\n      }\n      if(loops.side !== 'none')\n        detail.reserve[loops.side] = 'loops';\n    }\n    \n    // Здесь пересчитываем расположение последней петли, \n    // если оно дальше границы детали\n    if(loops.side === 'left' || loops.side === 'right'){\n      if(loops.after > height){\n        loops.after = height - 100;\n      }\n    }\n    else{\n      if(loops.after > width){\n        loops.after = width - 100;\n      }\n    }\n    // Перезаписываем объект детали с новыми данными петель\n    detail.loops = loops;\n    details.set(detailKey,detail);\n    this.setState({details});\n  }\n\n  grooveChange = (side, detailKey) => {\n    let details = this.state.details;\n    let detail = details.get(detailKey);\n\n    // Резервируем сторону детали, если она свободна\n    if(!detail.reserve[side] || detail.reserve[side] === 'groove'){\n      this.clearReserve(detail,'groove');\n      if(side !== 'none'){\n        detail.reserve[side] = 'groove';\n        detail.groove = side;\n      }\n      else{\n        detail.groove = false;\n      }\n    }\n\n    details.set(detailKey,detail);\n    this.setState({details});\n  }\n\n  edgeChange = (edge,detailKey) => {\n    let details = this.state.details;\n    let detail = details.get(detailKey);\n    detail.edge = edge;\n    details.set(detailKey,detail);\n    this.setState({details});\n  }\n\n  changeDetailOptions = (e) => {\n    let target = e.target;\n    let activeDetail = target.closest('.detail').dataset.key;\n    let action = target.dataset.action;\n    let details = this.state.details;\n    if(action === 'remove'){\n      let confirm = window.confirm('Удалить деталь? Это действие нельзя отменить.');\n      if(confirm){\n        details.delete(activeDetail);\n        this.setState({details});\n      }\n      return;\n    }\n    if(action === 'copy'){\n      let d = new CopyDetail(details.get(activeDetail));\n      let newDetail = d.create();\n      let detailKey = 'D-' + new Date().getTime();\n      activeDetail = detailKey;\n      details.set(detailKey, newDetail);\n      this.setState({details}, this.forceUpdate());\n      return;\n    }\n    if(action === 'close'){\n      this.setState({activeDetail: null});\n      return;\n    }\n    if(action === 'rotate'){\n      let detail = details.get(activeDetail);\n      let width = detail.width;\n      let height = detail.height;\n      detail.textureRotate = detail.textureRotate > 0 ? 0 : 90;\n\n      if(width >= 500){\n        detail.width = 500;\n      }\n      else if(width < 150){\n        detail.width = 150;\n      }\n      else if(height >= 700){\n        detail.height = 700;\n      }\n      else if(height < 150){\n        detail.height = 150;\n      }\n\n      details.set(activeDetail,detail);\n      this.setState({details});\n      return;\n    }\n    this.setState({activeDetail});\n  }\n\n  toCheckoutFunc = () => {\n    this.saveSVG();\n    this.setState({stage: 'checkout'});\n  }\n  toOrder = () => {\n    this.setState({stage: 'setorder'});\n  }\n\n  saveSVG = () => {\n    let svgsDOM = document.querySelectorAll('#root svg');\n    let svgs = {};\n    svgsDOM.forEach((el,ind,arr) => {\n      let key = el.id;\n      svgs[key] = arr[ind].outerHTML;\n    })\n    this.svgs = svgs;\n  }\n\n  afterCreateOrderFunc = () => {\n    this.setState({details: new Map()});\n  }\n  \n  render(){\n    let stage = this.state.stage === 'checkout' ? true : false;\n    let hasDetails = this.state.details.size > 0 ? false: true;\n    \n    if(stage)\n      return(\n      <>\n      <Checkout \n        data={this.state} \n        toOrderFunc={this.toOrder} \n        afterCreateOrderFunc={this.afterCreateOrderFunc}\n        svgs={this.svgs} \n        setOrderDataFunc={this.fromCheckout} />\n      <div className=\"copyright\">\n        Приложение разработано в интернет-агентстве <a rel=\"noreferrer\" target=\"_blank\" href=\"https://alpha-max.ru\">Альфамакс</a>\n      </div>\n      </>\n      )\n\n    return (\n      <>\n      <Summary set={this.state} options={this.state.importOptions} />\n      {this.state.details.size > 2 && \n      <FormControls\n        tabIndex=\"-1\"\n        isDisabled={hasDetails}\n        addNewDetailFunc={this.addNewDetailFunc}\n        toCheckoutFunc={this.toCheckoutFunc} />}\n      <DetailsList\n        activeKey={this.state.activeDetail} \n        changeDetailOptions={this.changeDetailOptions}\n        saveSVG = {this.saveSVG}\n        list={this.state.details}\n        loopF={this.loopChange} \n        grooveF={this.grooveChange} \n        edgeF={this.edgeChange}\n        set={this.inputOnChange} \n        setSizeF={this.handleSetDetailSize} />\n      <FormControls\n        tabIndex=\"999\"\n        isDisabled={hasDetails}\n        addNewDetailFunc={this.addNewDetailFunc}\n        toCheckoutFunc={this.toCheckoutFunc} />\n      <div className=\"copyright\">\n        Приложение разработано в интернет-агентстве <a rel=\"noreferrer\" target=\"_blank\" href=\"https://alpha-max.ru\">Альфамакс</a>\n      </div>\n      </>\n    );\n  }\n}\nexport default App;\n\nfunction FormControls(props){\n  return(\n    <div id=\"calc-form-controlls-wrapper\">\n      <button tabIndex={props.tabIndex} className=\"btn\" onClick={props.addNewDetailFunc}><b>+</b> Добавить деталь</button>\n      <button className=\"btn\" disabled={props.isDisabled} onClick={props.toCheckoutFunc}>Перейти к оформлению</button>\n    </div>\n  );\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}