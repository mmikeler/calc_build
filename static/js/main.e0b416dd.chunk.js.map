{"version":3,"sources":["helper.js","components/loops.js","components/groove.js","components/edge.js","components/summary.js","components/checkout.js","App.js","reportWebVitals.js","index.js"],"names":["Helper","number","set","width","nominalwidth","height","nominalheight","side","os","Math","trunc","helper","LoopsOptions","state","count","before","after","minSpace","error","handleInputChange","e","fieldName","target","name","value","key","closest","dataset","steps","step","round","props","type","max","setState","enscalingAny","loops","beforeNominal","afterNominal","func","isFree","r","A1","A2","this","beforeMin","beforeMax","afterMax","afterMin","countMax","LTangle","lt","x","RTangle","rt","RBangle","rb","LBangle","lb","reserve","resL","left","resT","top","resR","right","resB","bot","className","onChange","defaultValue","disabled","onInput","min","toString","React","Component","Loops","m","indent","radius","undefined","circles","push","d","stroke","strokeDasharray","fill","Circle","nominal","cx","cy","beforeNom","stepNom","i","circleCX","circleCY","line","numberX","numberY","descalingAny","transform","fontSize","y","floor","GrooveOptions","groove","Groove","grooveIndent","grooveWidth","vector","size","strokeWidth","EdgeOptions","handleChange","lta","rta","rba","lba","newValue","edge","edgeMin","edgeMax","Edge","length","ly","rx","color","getCount","o","listS","SHEET_WIDTH","SHEET_LENGHT","SHEET_FILLING_AREA","S","listCount","detailsCount","values","detail","lists","details","Summary","options","summaryOut","summary","SHEET_NAME","SHEET_DEPTH","SHEET_PRICE","materialImageUrl","window","importOptions","SHEET_PICTURE_URL","SummItem","title","id","style","backgroundImage","summ","MoreOrderDetails","open","summNumber","onClick","final","sm","lg","angle","billing","billingOptions","edgeSide","edgeSize","edgeSM","EDGE_MULTIPLICATOR","abs","PRICE_EDGE_04","edgeLG","PRICE_EDGE_02","edgeSumm","PRICE_EDGING","material","work","PRICE_SHEET_CUTTING","angles","PRICE_CURVATURE","finalLoops","PRICE_LOOP","finalGrooves","PRICE_GROOVE","pack","inbox","PRICE_TAPE","pallet","poddon","PRICE_PALLET","finalSumm","faster","price","toFixed","replace","Checkout","mess","orderCreate","setRequest","preventDefault","username","useremail","userphone","json","createRequestData","data","svgs","url","REQUEST_URL","formData","FormData","append","JSON","stringify","MAILTO","fetch","method","body","then","res","text","afterCreateOrderFunc","heandleChange","checked","setOrderDataFunc","message","toOrderFunc","onSubmit","required","placeholder","usercomment","billingaddress","form","date","Date","space","order","formatDate","SHEET_COLOR","ind","forEach","textureRotate","edgeL1","edgeL2","edgeW1","edgeW2","row","_e","createComment","comment","breakString","nomX","nomY","dd","getDate","mm","getMonth","yy","getFullYear","CopyDetail","prev","next","App","stage","Map","inputType","activeDetail","addNewDetailFunc","newDetail","detailKey","getTime","fromCheckout","field","inputOnChange","angleTitle","obj","get","clearReserve","item","handleSetDetailSize","loopChange","loopSide","grooveChange","edgeChange","changeDetailOptions","action","create","forceUpdate","confirm","delete","toCheckoutFunc","saveSVG","toOrder","svgsDOM","document","querySelectorAll","el","arr","outerHTML","hasDetails","rel","href","FormControls","isDisabled","saveSVGfunc","list","loopF","grooveF","edgeF","f","ff","DetailsList","setSizeF","activeKey","dkey","Detail","handleSetSize","classList","add","remove","handleSetTitle","data-key","pattern","maxLength","data-action","DetailPlan","prepareNumber","angleName","AngleOptions","active","send","event","breakPoint","break","backToApp","handleTypeChange","handleInputActive","maxX","maxY","input","closedAngle","reserveL","reserveT","reserveR","reserveB","motive","data-active","data-break","correctSize","minWidth","maxWidth","minHeight","maxHeight","ltA","angleControlDotLT","rtA","angleControlDotRT","rbA","angleControlDotRB","lbA","angleControlDotLB","bgVector","xmlns","version","viewBox","patternUnits","preserveAspectRatio","patternTransform","TEXTURE_IMAGE_URL","opacity","strokeLinejoin","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.e0b416dd.chunk.js","sourcesContent":["// Helpful functions\r\n\r\nclass Helper{\r\n\r\n    prepareNumber(number){\r\n        return number;\r\n    }\r\n    scalingW(number,set){\r\n        return number/(set.width/set.nominalwidth);\r\n    }\r\n    scalingH(number,set){\r\n        return number/(set.height/set.nominalheight);\r\n    }\r\n    enscalingW(number,set){\r\n        return number/(set.nominalwidth/set.width);\r\n    }\r\n    enscalingH(number,set){\r\n        return number/(set.nominalheight/set.height);\r\n    }\r\n    enscalingAny(number,set,side){\r\n        let os = side === 'left' || side === 'right' ? 'height' : 'width';\r\n        if(set.nominalwidth >= 500){\r\n            return number/(set['nominal'+os]/(set[os]));\r\n        }\r\n        else\r\n            return number;\r\n    }\r\n    descalingAny(number,set,side){\r\n        let os = side === 'left' || side === 'right' ? 'height' : 'width';\r\n        if(set.nominalwidth >= 500){\r\n            return Math.trunc((number-70)*(set['nominal'+os]/(set[os])));\r\n        }\r\n        else\r\n            return number;\r\n    }\r\n    descalingAnyV2(number,set,side){\r\n        let os = side === 'left' || side === 'right' ? 'height' : 'width';\r\n        if(set.nominalwidth >= 500){\r\n            return Math.trunc(number*(set['nominal'+os]/(set[os])));\r\n        }\r\n        else\r\n            return number;\r\n    }\r\n}\r\n\r\nexport {Helper};","import React from 'react';\r\nimport '../App.css';\r\nimport {Helper} from '../helper';\r\n\r\nconst helper = new Helper();\r\n\r\n// ============================================ LOOPS\r\nclass LoopsOptions extends React.Component{\r\n    state = {\r\n      side: 'none',\r\n      count: 2,\r\n      before: 100,\r\n      after: 200,\r\n      minSpace: 50,\r\n      error: false,\r\n    }\r\n  \r\n    handleInputChange = (e) => {\r\n        let fieldName = e.target.name; // Поле формы\r\n        let value = e.target.value; // Значение формы\r\n        let key = e.target.closest('.detail').dataset.key; // Ключ детали\r\n        let steps = this.state.count - 1; // желаемое кол-во отрезков между первой и последней деталью\r\n        let step = Math.round((this.state.after-this.state.before)/steps, 1); // размер одного отрезка\r\n        let set = this.props.set;\r\n        // Предотвращаем введение невозможных значений\r\n        if(e.target.type === 'number'){\r\n            //const min = e.target.min;\r\n            const max = e.target.max;\r\n            if(+value > +max) value = max;\r\n        }\r\n        \r\n        this.setState({\r\n            [fieldName]: value,\r\n            error: false\r\n        }, () => {\r\n            //  Не позволяем добавлять больше петель, \r\n            //  чем это возможно при сохранении минимального расстояния между центрами петель,\r\n            //  обозначенного как minSpace, не путать с indent(отступ петли от края детали)\r\n            if(fieldName === 'count' && step < this.state.minSpace){\r\n                return\r\n            }\r\n            let before = helper.enscalingAny(this.state.before, set, this.state.side);\r\n            let after = helper.enscalingAny(this.state.after, set, this.state.side);\r\n            let loops = {\r\n                side: fieldName === 'side' ? value : this.state.side,\r\n                count: this.state.count,\r\n                before: before,\r\n                beforeNominal: this.state.before,\r\n                after: after,\r\n                afterNominal: this.state.after,\r\n                minSpace: this.state.minSpace,\r\n            }\r\n            this.props.func(loops, key); // отправлем данные в Арр\r\n        })\r\n    }\r\n\r\n    isFree = (r,A1,A2) => {\r\n        if(r === 'groove' || A1 || A2){\r\n            return true;\r\n        }\r\n        if(!r) return false;\r\n    }\r\n  \r\n    render(){\r\n        let {side,before,after,minSpace} = this.state;\r\n        let set = this.props.set;\r\n        let beforeMin = +minSpace*2;\r\n        let beforeMax = after - minSpace*2;\r\n        let afterMax = side === 'top' || side === 'bot' ? set.nominalwidth - minSpace*2 : set.nominalheight - minSpace*2;\r\n        let afterMin = +minSpace*2 + +before;\r\n        let countMax = Math.round((after-before)/minSpace) + 1;\r\n        let LTangle = +set.lt.x === 0 ? false : true;\r\n        let RTangle = +set.rt.x === 0 ? false : true;\r\n        let RBangle = +set.rb.x === 0 ? false : true;\r\n        let LBangle = +set.lb.x === 0 ? false : true;\r\n        let r = set.reserve;\r\n        let resL = this.isFree(r.left,LTangle,LBangle);\r\n        let resT = this.isFree(r.top,LTangle,RTangle);\r\n        let resR = this.isFree(r.right,RTangle,RBangle);\r\n        let resB = this.isFree(r.bot,RBangle,LBangle);\r\n        \r\n        if(set.nominalwidth < 150)\r\n            resT = resB = true;\r\n        if(set.nominalheight < 150)\r\n            resL = resR = true;\r\n\r\n        if(r.left==='groove' || r.top==='groove' || r.right==='groove' || r.bot==='groove'){\r\n            return(\r\n                <span className=\"fons12 red\">Петли несовместимы с пазами</span>\r\n            )\r\n        }\r\n        if(resL && resT && resR && resB){\r\n            return(\r\n                <span className=\"fons12 red\">Нет вариантов</span>\r\n            )\r\n        }\r\n\r\n        return(\r\n            <>\r\n            <label className=\"flex-center\">\r\n                <span>Сторона</span>\r\n                <select onChange={this.handleInputChange} name=\"side\" defaultValue=\"none\" value={set.loops.side}>\r\n                    <option key=\"loopnone\" value=\"none\">Нет</option>\r\n                    <option key=\"loopleft\" value=\"left\"  disabled={resL}>Слева{resL && ' (занято)'}</option>\r\n                    <option key=\"looptop\" value=\"top\"   disabled={resT}>Сверху{resT && ' (занято)'}</option>\r\n                    <option key=\"loopright\" value=\"right\" disabled={resR}>Справа{resR && ' (занято)'}</option>\r\n                    <option key=\"loopbot\" value=\"bot\"   disabled={resB}>Снизу{resB && ' (занято)'}</option>\r\n                </select>\r\n            </label>\r\n            <label className=\"flex-center ml-a\"><span className=\"fons12\">От верхнего/нижнего края отступ отверстий {beforeMin}мм.</span></label>\r\n            <div className=\"w100p\"></div>\r\n\r\n            {this.state.side !== 'none' &&\r\n            <>\r\n            <label className=\"flex-center\">\r\n                <span>До&nbsp;первой <br/>петли, мм</span>\r\n                <input \r\n                    onInput={this.handleInputChange} \r\n                    name=\"before\" \r\n                    type=\"number\"\r\n                    min={beforeMin}\r\n                    max={beforeMax}\r\n                    step=\"1\" \r\n                    value={this.state.before.toString()} />\r\n                    <span>max: <b>{beforeMax}</b>&nbsp;мм</span>\r\n            </label>\r\n            <label className=\"flex-center\">\r\n                <span>До&nbsp;последней <br/>петли, мм</span>\r\n                <input \r\n                    onInput={this.handleInputChange} \r\n                    name=\"after\" \r\n                    type=\"number\"\r\n                    min={afterMin}\r\n                    max={afterMax}\r\n                    step=\"1\" \r\n                    value={this.state.after.toString()} />\r\n                    <span>max: <b>{afterMax}</b>&nbsp;мм</span>\r\n            </label>\r\n            <label className=\"flex-center\">\r\n                <span>Кол-во, шт</span>\r\n                <input \r\n                    className={this.state.error ? 'error' : ''}\r\n                    onInput={this.handleInputChange} \r\n                    name=\"count\" \r\n                    type=\"number\"\r\n                    min=\"2\"\r\n                    max={countMax}\r\n                    step=\"1\" \r\n                    defaultValue=\"2\" />\r\n            </label>\r\n            </>\r\n            }\r\n            </>\r\n        );\r\n    }\r\n  }\r\n\r\nfunction Loops(props){\r\n    let set = props.set;\r\n    let m = props.m;\r\n    let loops = set.loops;\r\n    let indent = helper.enscalingAny(25,set,loops.side);\r\n    let radius = helper.enscalingAny(35/2,set,loops.side);\r\n\r\n    if(loops.side === undefined || loops.side === 'none') return('');\r\n  \r\n    let width = set.width;\r\n    let height = set.height;\r\n    let circles = [];\r\n\r\n    if(loops.side === 'left'){\r\n        circles.push(<path key=\"lpath\" d={`M ${m+indent} ${m} v ${height}`} stroke=\"#72aee6\" strokeDasharray=\"10\" fill=\"transparent\"/>);\r\n        circles.push(<Circle set={set} key={'lbefore'} side={loops.side} nominal={+loops.beforeNominal} cx={m+indent} cy={+loops.before+m} r={radius} m={m} />);\r\n        circles.push(<Circle set={set} key={'lafter'} side={loops.side} nominal={+loops.afterNominal} cx={m+indent} cy={+loops.after+m} r={radius} m={m} />);\r\n    }\r\n    else if(loops.side === 'top'){\r\n        circles.push(<path key=\"tpath\" d={`M ${m} ${m+indent} h ${width}`} stroke=\"#72aee6\" strokeDasharray=\"10\" fill=\"transparent\"/>);\r\n        circles.push(<Circle set={set} key={'tbefore'} side={loops.side} nominal={+loops.beforeNominal} cx={+loops.before+m} cy={m+indent} r={radius} m={m} />);\r\n        circles.push(<Circle set={set} key={'tafter'} side={loops.side} nominal={+loops.afterNominal} cx={+loops.after+m} cy={m+indent} r={radius} m={m} />);\r\n    }\r\n    else if(loops.side === 'right'){\r\n        circles.push(<path key=\"rpath\" d={`M ${m+width-indent} ${m} v ${height}`} stroke=\"#72aee6\" strokeDasharray=\"10\" fill=\"transparent\"/>);\r\n        circles.push(<Circle set={set} key={'rbefore'} side={loops.side} nominal={+loops.beforeNominal} cx={m+width-indent} cy={+loops.before+m} r={radius} m={m} />);\r\n        circles.push(<Circle set={set} key={'rafter'} side={loops.side} nominal={+loops.afterNominal} cx={m+width-indent} cy={+loops.after+m} r={radius} m={m} />);\r\n    }\r\n    else if(loops.side === 'bot'){\r\n        circles.push(<path key=\"bpath\" d={`M ${m} ${height+m-indent} h ${width}`} stroke=\"#72aee6\" strokeDasharray=\"10\" fill=\"transparent\"/>);\r\n        circles.push(<Circle set={set} key={'bbefore'} side={loops.side} nominal={+loops.beforeNominal} cx={+loops.before+m} cy={height+m-indent} r={radius} m={m} />);\r\n        circles.push(<Circle set={set} key={'bafter'} side={loops.side} nominal={+loops.afterNominal} cx={+loops.after+m} cy={height+m-indent} r={radius} m={m} />);\r\n    }\r\n        \r\n\r\n    if(loops.count > 2){\r\n        let steps = loops.count - 1;\r\n        let before = loops.before;\r\n        let after = loops.after;\r\n        let beforeNom = +loops.beforeNominal;\r\n        let afterNom = +loops.afterNominal;\r\n        let stepNom = (afterNom-beforeNom)/steps;\r\n        let step = (after-before)/steps;\r\n        for(let i = 1; i < steps; i++){\r\n            let circleCX = m+indent;\r\n            let circleCY = +loops.before+(step*i)+m;\r\n            let nominal = beforeNom+(stepNom*i)+m;\r\n            if(loops.side === 'top'){\r\n                circleCY = m+indent;\r\n                circleCX = +loops.before+(step*i)+m;\r\n                nominal = beforeNom+(stepNom*i)+m;\r\n            }\r\n            else if(loops.side === 'right'){\r\n                circleCX = width+m-indent;\r\n                circleCY = +loops.before+(step*i)+m;\r\n                nominal = beforeNom+(stepNom*i)+m;\r\n            }\r\n            else if(loops.side === 'bot'){\r\n                circleCY = height+m-indent;\r\n                circleCX = +loops.before+(step*i)+m;\r\n                nominal = beforeNom+(stepNom*i)+m;\r\n            }\r\n            circles.push(\r\n                <Circle \r\n                    key={`${circleCX}-${circleCY}-${i}`} \r\n                    nominal={nominal}\r\n                    cx={circleCX} \r\n                    cy={circleCY} \r\n                    r={radius} \r\n                    width={width} \r\n                    height={height} \r\n                    side={loops.side}\r\n                    set={set}\r\n                    m={m} />);\r\n        }\r\n    }  \r\n    return circles;\r\n}\r\n  \r\nfunction Circle(props){\r\n    let set = props.set;\r\n    let side = props.side;\r\n    let line = `M ${props.cx} ${props.cy} h ${props.r + 20}`;\r\n    let numberX = props.cx + 45;\r\n    let numberY = props.cy + 8;\r\n    let number = helper.descalingAny(props.cy,set,side);\r\n    if(side === 'top'){\r\n        line = `M ${props.cx} ${props.cy} v ${props.r + 20}`;\r\n        numberX = props.cx - 23;\r\n        numberY = props.cy + 60;\r\n        number = helper.descalingAny(props.cx,set,side);\r\n    }\r\n    else if(side === 'right'){\r\n        line = `M ${props.cx} ${props.cy} h -${props.r + 20}`;\r\n        numberX = props.cx - 90;\r\n        numberY = props.cy + 10;\r\n        number = helper.descalingAny(props.cy,set,side);\r\n    }\r\n    else if(side === 'bot'){\r\n        line = `M ${props.cx} ${props.cy} v -${props.r + 20}`;\r\n        numberX = props.cx - 20;\r\n        numberY = props.cy - 50;\r\n        number = helper.descalingAny(props.cx,set,side);\r\n    }\r\n    \r\n    let deg = 0;\r\n    if(side === 'top' || side === 'bot'){\r\n        //deg = -90; ДОРАБОТАТЬ\r\n    }\r\n\r\n    return (\r\n      <>\r\n      <circle cx={props.cx} cy={props.cy} r={props.r} stroke=\"#3b8ecc\" fill=\"#3b8ecc\" />\r\n      <path d={line}  stroke=\"#3b8ecc\" />\r\n      <text transform={`rotate(${deg},${numberX},${numberY})`} fill=\"#3b8ecc\" fontSize=\"150%\" x={numberX} y={numberY}>{Math.floor(props.nominal)}</text>\r\n      </>\r\n    );\r\n}\r\n\r\nexport {LoopsOptions, Loops};","import React from 'react';\r\nimport '../App.css';\r\n\r\n// ============================================ GROOVE\r\nclass GrooveOptions extends React.Component{\r\n\r\n    handleInputChange = (e) => {\r\n        let fieldName = e.target.name; // Поле формы\r\n        let value = e.target.value; // Значение формы\r\n        let key = e.target.closest('.detail').dataset.key; // Ключ детали\r\n\r\n        this.setState({\r\n            [fieldName]: value,\r\n            error: false\r\n          }, () => {\r\n            this.props.func(this.state.side, key); // отправлем данные в Арр\r\n          }\r\n        )\r\n    }\r\n\r\n    isFree = (r,A1,A2) => {\r\n        if(r === 'loops' || A1 || A2){\r\n            return true;\r\n        }\r\n        if(!r) return false;\r\n    }\r\n\r\n    render(){\r\n        let set = this.props.set;\r\n        let LTangle = +set.lt.x === 0 ? false : true;\r\n        let RTangle = +set.rt.x === 0 ? false : true;\r\n        let RBangle = +set.rb.x === 0 ? false : true;\r\n        let LBangle = +set.lb.x === 0 ? false : true;\r\n        let r = set.reserve;\r\n        let resL = this.isFree(r.left,LTangle,LBangle);\r\n        let resT = this.isFree(r.top,LTangle,RTangle);\r\n        let resR = this.isFree(r.right,RTangle,RBangle);\r\n        let resB = this.isFree(r.bot,RBangle,LBangle);\r\n\r\n        if(r.left==='loops' || r.top==='loops' || r.right==='loops' || r.bot==='loops'){\r\n            return(\r\n                <span className=\"fons12 red\">Пазы несовместимы с петлями</span>\r\n            )\r\n        }\r\n\r\n        if(resL && resT && resR && resB){\r\n            return(\r\n                <span className=\"fons12 red\">Нет вариантов</span>\r\n            )\r\n        }\r\n\r\n        return(\r\n            <div className=\"flex-nowrap flex-center\">\r\n                <label className=\"flex-column\">\r\n                    <span>Сторона</span>\r\n                    <select onChange={this.handleInputChange} name=\"side\" value={set.groove}>\r\n                        <option value=\"none\">Нет</option>\r\n                        <option value=\"left\"  disabled={resL}>Слева{resL && ' (занято)'}</option>\r\n                        <option value=\"top\"   disabled={resT}>Сверху{resT && ' (занято)'}</option>\r\n                        <option value=\"right\" disabled={resR}>Справа{resR && ' (занято)'}</option>\r\n                        <option value=\"bot\"   disabled={resB}>Снизу{resB && ' (занято)'}</option>\r\n                    </select>\r\n                </label>\r\n                <span className=\"fons12\">\r\n                    <b>Параметры паза: </b>\r\n                    глубина 8 мм,\r\n                    ширина 4 мм,\r\n                    расстояние от края 16 мм (20 мм вместе с пазом)\r\n                </span>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport {GrooveOptions};\r\n\r\nfunction Groove(props){\r\n    let set = props.set;\r\n    let m = props.m;\r\n    let side = set.groove;\r\n    \r\n    if(!side) return('');\r\n    \r\n    let indent = set.grooveIndent;\r\n    let width = set.grooveWidth;\r\n    let x = m;\r\n    let y = m;\r\n    let vector = side === 'left' || side === 'right' ? 'v' : 'h';\r\n    let size = vector === 'h' ? set.width : set.height;\r\n    \r\n    if(side === 'left')\r\n        x = m + indent; size = size*-1;\r\n    if(side === 'top')\r\n        y = m + indent;\r\n    if(side === 'right')\r\n        x = m + +set.width - indent;\r\n    if(side === 'bot')\r\n        y = +set.height + m - indent; size = size*-1;\r\n\r\n    return <path d={`M ${x} ${y} ${vector} ${size}`} stroke=\"green\" strokeWidth={width} fill=\"transparent\"/>\r\n}\r\nexport {Groove};","import React from 'react';\r\nimport '../App.css';\r\n\r\n// ============================================ GROOVE\r\nclass EdgeOptions extends React.Component{\r\n\r\n    state = {\r\n        left: '0.0', top: '0.0', right: '0.0', bot: '0.0',\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        let set   = this.props.set;\r\n        let lta = set.lt.x > 0 ? true : false;\r\n        let rta = set.rt.x > 0 ? true : false;\r\n        let rba = set.rb.x > 0 ? true : false;\r\n        let lba = set.lb.x > 0 ? true : false;\r\n\r\n        let fieldName = e.target.name; // Поле формы\r\n        let value = e.target.value; // Значение формы\r\n        let key = e.target.closest('.detail').dataset.key; // Ключ детали\r\n        let newValue = {[fieldName]: value}\r\n\r\n        if(fieldName === 'left' && lta)\r\n            newValue.top = value;\r\n        else if(fieldName === 'left' && lba)\r\n            newValue.bot = value;\r\n        else if(fieldName === 'top' && lta)\r\n            newValue.left = value;\r\n        else if(fieldName === 'top' && rta)\r\n            newValue.right = value;\r\n        else if(fieldName === 'right' && rta)\r\n            newValue.top = value;\r\n        else if(fieldName === 'right' && rba)\r\n            newValue.bot = value;\r\n        else if(fieldName === 'bot' && rba)\r\n            newValue.right = value;\r\n        else if(fieldName === 'bot' && lba)\r\n            newValue.left = value;\r\n\r\n        this.setState( newValue, () => {\r\n            this.props.func(this.state, key); // отправлем данные в Арр\r\n          }\r\n        )\r\n    }\r\n\r\n    render(){\r\n        let set   = this.props.set;\r\n        let left  = set.edge.left;\r\n        let top   = set.edge.top;\r\n        let right = set.edge.right;\r\n        let bot   = set.edge.bot;\r\n        let min   = set.edgeMin;\r\n        let max = set.edgeMax;\r\n        return(\r\n            <>\r\n            <label className=\"flex-column\">\r\n                <span>Слева</span>\r\n                <select onChange={this.handleChange} name=\"left\" value={left}>\r\n                    <option value=\"0.0\">0.0</option>\r\n                    <option value={min}>{min}</option>\r\n                    <option value={max}>{max}</option>\r\n                </select>\r\n            </label>\r\n            <label className=\"flex-column\">\r\n                <span>Сверху</span>\r\n                <select onChange={this.handleChange} name=\"top\" value={top}>\r\n                    <option value=\"0.0\">0.0</option>\r\n                    <option value={min}>{min}</option>\r\n                    <option value={max}>{max}</option>\r\n                </select>\r\n            </label>\r\n            <label className=\"flex-column\">\r\n                <span>Справа</span>\r\n                <select onChange={this.handleChange} name=\"right\" value={right}>\r\n                    <option value=\"0.0\">0.0</option>\r\n                    <option value={min}>{min}</option>\r\n                    <option value={max}>{max}</option>\r\n                </select>\r\n            </label>\r\n            <label className=\"flex-column\">\r\n                <span>Снизу</span>\r\n                <select onChange={this.handleChange} name=\"bot\" value={bot}>\r\n                    <option value=\"0.0\">0.0</option>\r\n                    <option value={min}>{min}</option>\r\n                    <option value={max}>{max}</option>\r\n                </select>\r\n            </label>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport {EdgeOptions};\r\n\r\nfunction Edge(props){\r\n    let {set,m} = props;\r\n    let width = set.width;\r\n    let height = set.height;\r\n    let length = 100;\r\n    //let lx = m - 10;\r\n    let ly = m + set.height + 10;\r\n    let rx = m + set.width + 10;\r\n    let color = \"green\";\r\n    let fontSize = \"130%\";\r\n    return(\r\n        <>\r\n        <path d={`M ${m-7} ${(m+height)/2-length/2} v ${length}`} stroke={color} strokeDasharray=\"15,10\" strokeWidth=\"3\" fill=\"transparent\" />\r\n        <text fontSize={fontSize} x={m-27} y={height/2+50} transform={`rotate(-90,${m-27},${height/2+40})`} fill={color}>{set.edge.left}</text>\r\n        <path d={`M ${(width+m)/2} ${ly} h ${length}`} stroke={color} strokeDasharray=\"15,10\" strokeWidth=\"3\" fill=\"transparent\" />\r\n        <text fontSize={fontSize} x={(width+m)/2+20} y={height+m+40} fill={color}>{set.edge.bot}</text>\r\n\r\n        <path d={`M ${rx} ${(m+height)/2} v ${length}`} stroke={color} strokeDasharray=\"15,10\" strokeWidth=\"3\" fill=\"transparent\" />\r\n        <text fontSize={fontSize} x={rx+25} y={(m+height)/2 + 70} transform={`rotate(-90,${rx+25},${(m+height)/2 + 60})`} fill={color}>{set.edge.right}</text>\r\n        <path d={`M ${(m+width)/2} ${m-7} h ${length}`} stroke={color} strokeDasharray=\"15,10\" strokeWidth=\"3\" fill=\"transparent\" />\r\n        <text fontSize={fontSize} x={(m+width)/2+20} y={m-16} fill={color}>{set.edge.top}</text>\r\n        </>\r\n    );\r\n}\r\nexport {Edge};","import React from 'react';\r\nimport '../App.css';\r\n\r\nfunction getCount(set,o){\r\n    let listS = o.SHEET_WIDTH*o.SHEET_LENGHT*o.SHEET_FILLING_AREA;\r\n    let S = 0;\r\n    let listCount = set.size > 0 ? 1 : 0;\r\n    let detailsCount = 0;\r\n    for (let detail of set.values()) {\r\n        let width = detail.nominalwidth;\r\n        let height = detail.nominalheight;\r\n        detailsCount += detail.count;\r\n        S += width*height*detail.count; // Считаем площадь детали по чистым размерам\r\n    }\r\n    // Считаем кол-во листов\r\n    listCount += Math.floor(S/listS);\r\n\r\n    return {\r\n        lists: listCount,\r\n        details: detailsCount\r\n    };\r\n}\r\n\r\nfunction Summary(props){\r\n\r\n    let set = props.set.details;\r\n    let o = props.options;\r\n    let summaryOut = [];\r\n    let summary = {\r\n        'Материал': o.SHEET_NAME,\r\n        'Размер': `${o.SHEET_WIDTH}мм x ${o.SHEET_LENGHT}мм x ${o.SHEET_DEPTH}мм`,\r\n        'Листов в раскрое': getCount(set,o).lists,\r\n        'Цена за лист': `${o.SHEET_PRICE} руб.`,\r\n        'Всего деталей': getCount(set,o).details\r\n    }\r\n    let materialImageUrl = 'http://rondo.96min.ru/' + window.importOptions.SHEET_PICTURE_URL;\r\n\r\n    for(let key in summary){\r\n        summaryOut.push(<SummItem key={key} title={key} value={summary[key]} />);\r\n    }\r\n    \r\n    return(\r\n        <div id=\"summary\" style={{backgroundImage:\"url(\" + (materialImageUrl) + \")\"}}>\r\n            {summaryOut}\r\n            <div className=\"summ-item\">\r\n                <span><b>Примерная стоимость:</b></span>\r\n                <span><b>{summ(props.set,o,true)}</b></span>\r\n            </div>\r\n            <MoreOrderDetails set={props.set} o={o} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport {Summary};\r\n\r\nclass MoreOrderDetails extends React.Component{\r\n\r\n    state = {\r\n        open: false,\r\n    }\r\n\r\n    render(){\r\n        const summNumber = summ(this.props.set, this.props.o);\r\n        const detailsListSize = this.props.set.details.size;\r\n        if(detailsListSize === 0)\r\n            return null;\r\n        else if(this.state.open)\r\n            return(\r\n                <div className=\"summ-item more\">\r\n                    <span onClick={() => this.setState({open:false})} className=\"action-link red w100p\"><b>Свернуть</b></span>\r\n                    {summNumber}\r\n                </div>\r\n            );\r\n        else\r\n            return(\r\n                <div className=\"summ-item\">\r\n                    <span onClick={() => this.setState({open:true})} className=\"action-link red\"><b>Подробнее о расчёте</b></span>\r\n                </div>\r\n            );\r\n    }\r\n}\r\n\r\nfunction SummItem(props){\r\n\r\n    return(\r\n        <div className=\"summ-item\">\r\n            <span>{props.title}: </span>\r\n            <span>{props.value}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction summ(set,o,final=false){\r\n    let listS = o.SHEET_WIDTH*o.SHEET_LENGHT*o.SHEET_FILLING_AREA;\r\n    let S = 0;\r\n    let listCount = set.details.size > 0 ? 1 : 0;\r\n    let edge = {sm:0, lg:0}\r\n    let angle = 0;\r\n    let groove = 0;\r\n    let loops = 0;\r\n    let billing = set.billingOptions ? set.billingOptions : false;\r\n    for (let detail of set.details.values()) {\r\n        let width = detail.nominalwidth;\r\n        let height = detail.nominalheight;\r\n        let detailsCount = detail.count;\r\n\r\n        S += width*height*detailsCount; // Считаем площадь детали по чистым размерам\r\n        \r\n        // Кромление\r\n        for(let edgeSide in detail.edge){ \r\n            let edgeSize = detail.edge[edgeSide];\r\n            if( edgeSize > 0 && edgeSize < 1){\r\n                edgeSide === 'left' || edgeSide === 'right' ? edge.sm += height : edge.sm += width;\r\n            }\r\n            else if(edgeSize > 0 && edgeSize > 1){\r\n                edgeSide === 'left' || edgeSide === 'right' ? edge.lg += height : edge.lg += width;\r\n            }\r\n        }\r\n        // Углы\r\n        if(detail.lt.x > 0 || detail.rt.x > 0 || detail.rb.x > 0 || detail.lb.x > 0)\r\n            angle++;\r\n        // Петли\r\n        if(detail.loops && detail.loops.side !== 'none')\r\n            loops += detail.loops.count;\r\n        // Пазы\r\n        if(detail.groove)\r\n            groove++;\r\n        \r\n    }\r\n\r\n    // Считаем кол-во листов\r\n    listCount += Math.floor(S/listS);\r\n\r\n    let edgeSM = edge.sm*o.EDGE_MULTIPLICATOR/1000*Math.abs(o.PRICE_EDGE_04);\r\n    let edgeLG = edge.lg*o.EDGE_MULTIPLICATOR/1000*Math.abs(o.PRICE_EDGE_02);\r\n    let edgeSumm = Math.round(edgeSM+edgeLG+((edge.sm+edge.lg)*o.EDGE_MULTIPLICATOR/1000*Math.abs(o.PRICE_EDGING)));\r\n    let material = listCount*o.SHEET_PRICE;\r\n    let work = listCount*o.PRICE_SHEET_CUTTING;\r\n    let angles = angle*Math.abs(o.PRICE_CURVATURE);\r\n    let finalLoops = loops*Math.abs(o.PRICE_LOOP);\r\n    let finalGrooves = groove*Math.abs(o.PRICE_GROOVE);\r\n    let pack = billing && billing.inbox && listCount > 0 ? +o.PRICE_TAPE : 0;\r\n    let pallet = billing && billing.poddon && listCount > 0 ? +o.PRICE_PALLET : 0;\r\n    let finalSumm = material+work+edgeSumm+angles+finalLoops+finalGrooves+pack+pallet;\r\n    \r\n    // Billing options\r\n    let billingOptions = [];\r\n    if(billing){\r\n        if(billing.faster)\r\n            billingOptions.push(<tr><td>Срочный распил</td><td>{price(finalSumm*0.25)}</td></tr>);\r\n        if(billing.inbox)\r\n            billingOptions.push(<tr><td>Упаковка</td><td>{price(+o.PRICE_TAPE)}</td></tr>);\r\n        if(billing.poddon)\r\n            billingOptions.push(<tr><td>На поддон</td><td>{price(+o.PRICE_PALLET)}</td></tr>);\r\n    }\r\n    \r\n    if(final){        \r\n        if(billing && billing.faster)\r\n            finalSumm *= 1.25;\r\n\r\n        return price(finalSumm);\r\n    }\r\n    return(\r\n        <table className=\"w100p\">\r\n            <tbody>\r\n                <tr><td>Материал</td><td>{price(material)}</td></tr>\r\n                <tr><td>Рез</td><td>{price(work)}</td></tr>\r\n                <tr><td>Кромление</td><td>{price(edgeSumm)}</td></tr>\r\n                <tr><td>Криволинейность</td><td>{price(angles)}</td></tr>\r\n                <tr><td>Петли</td><td>{price(finalLoops)}</td></tr>\r\n                <tr><td>Пазы</td><td>{price(finalGrooves)}</td></tr>\r\n                {billingOptions}\r\n            </tbody>\r\n        </table>\r\n    );\r\n}\r\n\r\nfunction price(number){\r\n    return (number).toFixed(1).replace(/\\d(?=(\\d{3})+\\.)/g, '$&,')  + ' руб.';\r\n}","import React from 'react';\r\nimport '../App.css';\r\nimport {Summary} from './summary';\r\n\r\nclass Checkout extends React.Component{\r\n\r\n    state = {\r\n        mess: '',\r\n        orderCreate: false,\r\n    }\r\n\r\n    setRequest = (e) => {\r\n        e.preventDefault()\r\n\r\n        // Проверяем поля формы\r\n        if(\r\n            this.state.username === undefined\r\n            || this.state.useremail === undefined\r\n            || this.state.userphone === undefined){\r\n                this.setState({mess: 'Заполните обязательные поля'});\r\n                return;\r\n        }\r\n\r\n        let json = createRequestData(this.props.data, this.state);\r\n        let svgs = this.props.svgs;\r\n        let url = this.props.data.importOptions.REQUEST_URL;\r\n        let formData = new FormData();\r\n        formData.append('order', json);\r\n        formData.append('svg', JSON.stringify(svgs));\r\n        formData.append('mailto', this.props.data.importOptions.MAILTO);\r\n        this.setState(\r\n            {mess: 'Отправка заявки...'},\r\n            () => fetch(url, { method: 'POST', body: formData })\r\n                .then((res) => res.text())\r\n                .then(\r\n                    (res) => {\r\n                        if(res === 'ok'){\r\n                            let mess = 'Ваш заказ принят в обработку. В течение 20 минут(кроме выходных) с Вами свяжется представитель нашей компании и уточнит сроки и условия доставки заказа.'\r\n                            this.setState(\r\n                                {mess,orderCreate:true},\r\n                                () => {\r\n                                    this.props.afterCreateOrderFunc();\r\n                                }\r\n                            );\r\n                        }\r\n                        else{\r\n                            this.setState({mess: 'Ошибка при создании заказа. Попробуйте ещё раз.'});\r\n                        }\r\n                    },\r\n                    (error) => {\r\n                        this.setState({mess: 'Ошибка при создании заказа #' + error});\r\n                    }\r\n                )\r\n        )\r\n        \r\n    }\r\n\r\n    heandleChange = (e) => {\r\n        let target = e.target;\r\n        let fieldName = target.name;\r\n        const value = target.type === 'checkbox' ? target.checked : target.value;\r\n\r\n        this.setState(\r\n            {[fieldName]: value, mess: ''},\r\n            () => {\r\n                if(fieldName === 'faster' || fieldName === 'inbox' || fieldName === 'poddon')\r\n                    this.props.setOrderDataFunc(fieldName, this.state[fieldName]);\r\n            }\r\n        );        \r\n    }\r\n\r\n    render(){\r\n        const data = this.props.data;\r\n        const billing = data.billingOptions;\r\n        let message = this.state.mess ? <div id=\"message\">{this.state.mess}</div> : '';\r\n        if(!this.state.orderCreate){\r\n        return(\r\n            <>\r\n            <Summary set={data} options={data.importOptions} />\r\n            <h4 className=\"tac\">Заполните форму ниже</h4>\r\n            <form onSubmit={this.setRequest} id=\"checkoutForm\">\r\n                <fieldset className=\"flex w100p\">\r\n                    <legend>Ваши данные</legend>\r\n                    <label className=\"reqiured-field\">\r\n                        <input type=\"text\" name=\"username\" required defaultValue={this.state.username} placeholder=\"ФИО\" onChange={this.heandleChange} />\r\n                    </label>\r\n                    <label className=\"reqiured-field\">\r\n                        <input type=\"phone\" name=\"userphone\" required defaultValue={this.state.userphone} placeholder=\"Телефон\" onChange={this.heandleChange} />\r\n                    </label>\r\n                    <label className=\"reqiured-field\">\r\n                        <input type=\"email\" name=\"useremail\" required defaultValue={this.state.useremail} placeholder=\"Ваш email\" onChange={this.heandleChange} />\r\n                    </label>\r\n                    <label className=\"\">\r\n                        <textarea name=\"usercomment\" defaultValue={this.state.usercomment} placeholder=\"Комментарий к заказу\" onChange={this.heandleChange}></textarea>\r\n                    </label>\r\n                </fieldset>\r\n                <fieldset className=\"flex w100p\">\r\n                    <legend>Дополнительно</legend>\r\n                    <label className=\"flex-center\">\r\n                        <span className=\"fons12\">Срочный распил</span>\r\n                        <input type=\"checkbox\" name=\"faster\" checked={billing.faster} onChange={this.heandleChange} />\r\n                    </label>\r\n                    <label className=\"flex-center\">\r\n                        <span className=\"fons12\">Упаковка в плёнку</span>\r\n                        <input type=\"checkbox\" name=\"inbox\" checked={billing.inbox} onChange={this.heandleChange} />\r\n                    </label>\r\n                    <label className=\"flex-center\">\r\n                        <span className=\"fons12\">Упаковка на поддон</span>\r\n                        <input type=\"checkbox\" name=\"poddon\" checked={billing.poddon} onChange={this.heandleChange} />\r\n                    </label>\r\n                </fieldset>\r\n                <fieldset className=\"w100p\">\r\n                    <legend>Доставка</legend>\r\n                    <label>\r\n                        <input type=\"text\" name=\"billingaddress\" defaultValue={this.state.billingaddress} placeholder=\"Адрес доставки\" onChange={this.heandleChange} />\r\n                    </label>\r\n                </fieldset>\r\n            </form>\r\n            <div id=\"calc-form-controlls-wrapper\">\r\n                <button className=\"btn\" onClick={this.props.toOrderFunc}>Назад к списку</button>\r\n                <button className=\"btn\" onClick={this.setRequest}>Создать заказ</button>\r\n            </div>\r\n            {message}\r\n            </>\r\n        );\r\n        }\r\n        else{\r\n            return(\r\n                <>\r\n                <div id=\"calc-form-controlls-wrapper\">\r\n                    <button className=\"btn\" onClick={this.props.toOrderFunc}>Назад к списку</button>\r\n                </div>\r\n                {message}\r\n                </>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport {Checkout};\r\n\r\nfunction createRequestData(data,form){\r\n    let details = data.details;\r\n    let o = data.importOptions;\r\n    let date = new Date();\r\n    let userData = `${form.username} ${form.userphone} ${form.useremail}`;\r\n    let space = '';\r\n    let order = [\r\n        [space],\r\n        ['Заказчик',userData,space,space,space,'дата',formatDate(date)],\r\n        [space],\r\n        ['Цвет плиты',o.SHEET_COLOR,space,'Толщина плиты',o.SHEET_DEPTH],\r\n        [space],\r\n        ['Цвет кромки',space,'Обозначение',space],\r\n        ['Цвет кромки',space,'Обозначение',space],\r\n        ['Цвет кромки',space,'Обозначение',space],\r\n        [space],\r\n        ['ПОЗИЦИЯ','Длина','Ширина','Кол-во','Крома L1','Крома L2','Крома W1','Крома W2','Паз','Комментарий'],\r\n        [space]\r\n    ]\r\n    //console.log(order);\r\n    let ind = 1;\r\n    details.forEach((d,key) => {\r\n        let textureRotate = d.textureRotate;\r\n        let width = d.nominalwidth;\r\n        let length = d.nominalheight;\r\n        let edgeL1 = d.edge.left;\r\n        let edgeL2 = d.edge.right;\r\n        let edgeW1 = d.edge.top;\r\n        let edgeW2 = d.edge.bot;\r\n        // Если текстура повёрнута, меняем значения ширина-длина\r\n        if(textureRotate === 0){\r\n            width = d.nominalheight;\r\n            length = d.nominalwidth;\r\n        }\r\n        // Если текстура повёрнута, меняем значения кромок L-W\r\n        if(textureRotate === 0){\r\n            edgeL1 = d.edge.top;\r\n            edgeL2 = d.edge.bot;\r\n            edgeW1 = d.edge.right;\r\n            edgeW2 = d.edge.left;\r\n        }\r\n        // Добавляем значения в таблицу\r\n        let row = [\r\n            `#${ind} ${key}`,\r\n            length,\r\n            width,\r\n            d.count,\r\n            edgeL1,edgeL2,edgeW1,edgeW2,\r\n            _e(d.groove),\r\n            createComment(d,form)\r\n        ];\r\n        order.push(row);\r\n        ind++;\r\n    })\r\n    return JSON.stringify(order);\r\n}\r\n\r\nfunction createComment(d,form){\r\n    let comment = '';\r\n    let breakString = '\\n';\r\n    // Добавляем углы\r\n    if(d.lt.x > 0 && d.lt.y > 0)\r\n        comment += `Левый верхний: ${_e(d.lt.type)} | X:${d.lt.nomX} Y:${d.lt.nomY}` + breakString;\r\n    if(d.rt.x > 0 && d.rt.y > 0)\r\n        comment += `Правый верхний: ${_e(d.rt.type)} | X:${d.rt.nomX} Y:${d.rt.nomY}` + breakString;\r\n    if(d.rb.x > 0 && d.rb.y > 0)\r\n        comment += `Правый нижний: ${_e(d.rb.type)} | X:${d.rb.nomX} Y:${d.rb.nomY}` + breakString;\r\n    if(d.lb.x > 0 && d.lb.y > 0)\r\n        comment += `Левый нижний: ${_e(d.lb.type)} | X:${d.lb.nomX} Y:${d.lb.nomY}` + breakString;\r\n    // Добавляем петли\r\n    if(d.loops && d.loops.side !== 'none'){\r\n        comment += `Кол-во петель: ${d.loops.count}` + breakString;\r\n        comment += `Сторона: ${_e(d.loops.side)}` + breakString;\r\n        comment += `До первой: ${d.loops.beforeNominal}` + breakString;\r\n        comment += `До последней: ${d.loops.afterNominal}` + breakString;\r\n    }\r\n    // Добавляем доп.опции\r\n    if(form.faster)\r\n        comment += 'Срочный распил - да' + breakString;;\r\n    if(form.inbox)\r\n        comment += 'Упаковка в плёнку - да' + breakString;;\r\n    if(form.poddon)\r\n        comment += 'Упаковка в поддон - да' + breakString;;\r\n\r\n    return comment;\r\n}\r\n\r\nfunction formatDate(date) {\r\n    var dd = date.getDate();\r\n    if (dd < 10) dd = '0' + dd;\r\n  \r\n    var mm = date.getMonth() + 1;\r\n    if (mm < 10) mm = '0' + mm;\r\n  \r\n    var yy = date.getFullYear() % 100;\r\n    if (yy < 10) yy = '0' + yy;\r\n  \r\n    return dd + '.' + mm + '.' + yy;\r\n}\r\n\r\nfunction _e(text){\r\n    // Sides\r\n    if(text === 'left')\r\n        return 'слева';\r\n    else if(text === 'top')\r\n        return 'сверху';\r\n    else if(text === 'right')\r\n        return 'справа';\r\n    else if(text === 'bot')\r\n        return 'снизу';\r\n    // Angles\r\n    else if(text === 'outside')\r\n        return 'Наружный';\r\n    else if(text === 'linear')\r\n        return 'Прямой';\r\n    else if(text === 'inside')\r\n        return 'внутренний';\r\n    // Default\r\n    else\r\n        return text;\r\n}","import React from 'react';\nimport './App.css';\nimport {LoopsOptions, Loops} from './components/loops';\nimport {GrooveOptions, Groove} from './components/groove';\nimport {EdgeOptions, Edge} from './components/edge';\nimport {Summary} from './components/summary';\nimport {Checkout} from './components/checkout';\nimport {Helper} from './helper';\n\nconst helper = new Helper();\n\nclass CopyDetail{\n  constructor(data){\n    this.detail = {\n      'title': data.title + ' (копия)',\n      'width': data.width,\n      'nominalwidth': data.width,\n      'minWidth': 60,\n      'maxWidth': window.importOptions.SHEET_WIDTH,\n      'height': data.height,\n      'nominalheight': data.height,\n      'minHeight': 60,\n      'maxHeight': window.importOptions.SHEET_LENGHT,\n      'count': 1,\n      'reserve':{\n        'left': data.reserve.left,\n        'top': data.reserve.top,\n        'right': data.reserve.right,\n        'bot': data.reserve.bot\n      },\n      'lt': {title:'Левый верхний' , prev:'lb', next:'rt', x:data.lt.x, y:data.lt.y, nomX:data.lt.nomX, nomY:data.lt.nomY, type:data.lt.type},\n      'rt': {title:'Правый верхний', prev:'lt', next:'rb', x:data.rt.x, y:data.rt.y, nomX:data.rt.nomX, nomY:data.rt.nomY, type:data.rt.type},\n      'rb': {title:'Правый нижний' , prev:'rt', next:'lb', x:data.rb.x, y:data.rb.y, nomX:data.rb.nomX, nomY:data.rb.nomY, type:data.rb.type},\n      'lb': {title:'Левый нижний'  , prev:'rb', next:'lt', x:data.lb.x, y:data.lb.y, nomX:data.lb.nomX, nomY:data.lb.nomY, type:data.lb.type},\n      'loops': data.loops,\n      'groove': data.groove,\n      'grooveIndent': 16,\n      'grooveWidth': 4,\n      'grooveDeep': 8,\n      'edge': data.edge,\n      'edgeMin': 0.4,\n      'edgeMax': 2.0,\n      'textureRotate': data.textureRotate,\n      'svg': null,\n    }\n  }\n  create(){\n    return this.detail;\n  }\n}\n\nclass App extends React.Component {\n\n  state = {\n    stage: 'setorder',\n    details: new Map(),\n    importOptions: window.importOptions,\n    inputType: 'number',\n    activeDetail: null,\n    billingOptions: {\n      faster: false,\n      inbox: false,\n      poddon: false,\n    }\n  }\n\n  addNewDetailFunc = (e) => {\n    let newDetail = {\n      'title': \"Деталь #\" + (this.state.details.size + 1),\n      'width': 400,\n      'nominalwidth': 1400,\n      'minWidth': 60,\n      'maxWidth': 2040,\n      'height': 600,\n      'nominalheight': 1600,\n      'minHeight': 60,\n      'maxHeight': 2770,\n      'count': 1,\n      'reserve':{\n        'left': false,\n        'top': false,\n        'right': false,\n        'bot': false    \n      },\n      'lt': {title:'Левый верхний' , prev:'lb', next:'rt', x:0, y:0, nomX:0, nomY:0, type:'outside'},\n      'rt': {title:'Правый верхний', prev:'lt', next:'rb', x:0, y:0, nomX:0, nomY:0, type:'outside'},\n      'rb': {title:'Правый нижний' , prev:'rt', next:'lb', x:0, y:0, nomX:0, nomY:0, type:'outside'},\n      'lb': {title:'Левый нижний'  , prev:'rb', next:'lt', x:0, y:0, nomX:0, nomY:0, type:'outside'},\n      'loops': false,\n      'groove': false,\n      'grooveIndent': 16,\n      'grooveWidth': 4,\n      'grooveDeep': 8,\n      'edge':{\n        'left': 0.0,\n        'top': 0.0,\n        'right': 0.0,\n        'bot': 0.0    \n      },\n      'edgeMin': 0.4,\n      'edgeMax': 2.0,\n      'textureRotate': 90,\n      'svg': null,\n    }\n    let details = this.state.details;\n    let detailKey = 'D-' + new Date().getTime();\n    let activeDetail = detailKey;\n    details.set(detailKey, newDetail);\n    this.setState({details,activeDetail});\n\n    return detailKey;\n  }\n\n  fromCheckout = (field,value) => {\n    let billingOptions = this.state.billingOptions;\n    billingOptions[field] = value;\n    this.setState({billingOptions});\n  }\n\n  inputOnChange = (angleTitle, obj, detailKey) => {\n    let details = this.state.details;\n    let detail = details.get(detailKey);\n\n    for(let key in obj){\n      detail[angleTitle][key] = obj[key];\n    }\n\n    details.set(detailKey,detail);\n    this.setState({details});\n  }\n\n  clearReserve = (set,item) => {\n    for(let side in set.reserve){\n      if(set.reserve[side] === item)\n        set.reserve[side] = false;\n    }\n    if(item === 'loops')\n      set.loops.side = false;\n    \n    return set;\n  }\n\n  handleSetDetailSize = (detailKey, side, value) => {\n    let details = this.state.details;\n    let detail = details.get(detailKey);\n\n    detail[side] = value;      \n    \n    if(side === 'width' && value > 500){\n      detail[side] = 500;\n    }\n    else if(side === 'width' && value < 150){\n      detail[side] = 150;\n    }\n    else if(side === 'height' && value > 700){\n      detail[side] = 700;\n    }\n    else if(side === 'height' && value < 150){\n      detail[side] = 150;\n    }\n\n    // Сбрасываем петли, если для них нет места\n    if(side === 'width' && value < 150){\n      if(detail.loops){\n        if(detail.loops.side === 'top' || detail.loops.side === 'bot'){\n          detail = this.clearReserve(detail,'loops');\n        }\n      }\n    }\n    if(side === 'height' && value < 150){\n      if(detail.loops){\n        if(detail.loops.side === 'left' || detail.loops.side === 'right'){\n          detail = this.clearReserve(detail,'loops');\n        }\n      }\n    }\n    \n    detail['nominal'+side] = value;\n    details.set(detailKey,detail);\n    this.setState({details});\n  }\n\n  loopChange = (loops, detailKey) => {\n    let details = this.state.details;\n    let detail = details.get(detailKey);\n    let width = detail.width;\n    let height = detail.height;\n\n    // Резервируем сторону детали, если она свободна\n    if(!detail.reserve[loops.side]){\n      for(let loopSide in detail.reserve){\n        if(detail.reserve[loopSide] === 'loops')\n          detail.reserve[loopSide] = false;\n      }\n      if(loops.side !== 'none')\n        detail.reserve[loops.side] = 'loops';\n    }\n    \n    // Здесь пересчитываем расположение последней петли, \n    // если оно дальше границы детали\n    if(loops.side === 'left' || loops.side === 'right'){\n      if(loops.after > height){\n        loops.after = height - 100;\n      }\n    }\n    else{\n      if(loops.after > width){\n        loops.after = width - 100;\n      }\n    }\n    // Перезаписываем объект детали с новыми данными петель\n    detail.loops = loops;\n    details.set(detailKey,detail);\n    this.setState({details});\n  }\n\n  grooveChange = (side, detailKey) => {\n    let details = this.state.details;\n    let detail = details.get(detailKey);\n\n    // Резервируем сторону детали, если она свободна\n    if(!detail.reserve[side] || detail.reserve[side] === 'groove'){\n      this.clearReserve(detail,'groove');\n      if(side !== 'none'){\n        detail.reserve[side] = 'groove';\n        detail.groove = side;\n      }\n      else{\n        detail.groove = false;\n      }\n    }\n\n    details.set(detailKey,detail);\n    this.setState({details});\n  }\n\n  edgeChange = (edge,detailKey) => {\n    let details = this.state.details;\n    let detail = details.get(detailKey);\n    detail.edge = edge;\n    details.set(detailKey,detail);\n    this.setState({details});\n  }\n\n  changeDetailOptions = (e) => {\n    let target = e.target;\n    let activeDetail = target.closest('.detail').dataset.key;\n    let action = target.dataset.action;\n    let details = this.state.details;\n    if(action === 'remove'){\n      let confirm = window.confirm('Удалить деталь? Это действие нельзя отменить.');\n      if(confirm){\n        details.delete(activeDetail);\n        this.setState({details});\n      }\n      return;\n    }\n    if(action === 'copy'){\n      let d = new CopyDetail(details.get(activeDetail));\n      let newDetail = d.create();\n      let detailKey = 'D-' + new Date().getTime();\n      activeDetail = detailKey;\n      details.set(detailKey, newDetail);\n      this.setState({details,activeDetail}, this.forceUpdate());\n    }\n    if(action === 'close'){\n      this.setState({activeDetail: null});\n      return;\n    }\n    if(action === 'rotate'){\n      let detail = details.get(activeDetail);\n      let width = detail.width;\n      //let nominalwidth = detail.nominalwidth;\n      let height = detail.height;\n      //let nominalheight = detail.nominalheight;\n      detail.textureRotate = detail.textureRotate > 0 ? 0 : 90;\n      // detail.width = height;\n      // detail.nominalwidth = nominalheight;\n      // detail.height = width;\n      // detail.nominalheight = nominalwidth;\n\n      if(width >= 500){\n        detail.width = 500;\n      }\n      else if(width < 150){\n        detail.width = 150;\n      }\n      else if(height >= 700){\n        detail.height = 700;\n      }\n      else if(height < 150){\n        detail.height = 150;\n      }\n\n      details.set(activeDetail,detail);\n      this.setState({details});\n      return;\n    }\n    this.setState({activeDetail});\n  }\n\n  toCheckoutFunc = () => {\n    this.saveSVG();\n    this.setState({stage: 'checkout'});\n  }\n  toOrder = () => {\n    this.setState({stage: 'setorder'});\n  }\n\n  saveSVG = () => {\n    let svgsDOM = document.querySelectorAll('#root svg');\n    let svgs = {};\n    svgsDOM.forEach((el,ind,arr) => {\n      let key = el.id;\n      svgs[key] = arr[ind].outerHTML;\n    })\n    this.svgs = svgs;\n  }\n\n  afterCreateOrderFunc = () => {\n    this.setState({details: new Map()});\n  }\n  \n  render(){\n    let stage = this.state.stage === 'checkout' ? true : false;\n    let hasDetails = this.state.details.size > 0 ? false: true;\n    \n    if(stage)\n      return(\n      <>\n      <Checkout \n        data={this.state} \n        toOrderFunc={this.toOrder} \n        afterCreateOrderFunc={this.afterCreateOrderFunc}\n        svgs={this.svgs} \n        setOrderDataFunc={this.fromCheckout} />\n      <div className=\"copyright\">\n        Приложение разработано в интернет-агентстве <a rel=\"noreferrer\" target=\"_blank\" href=\"https://alpha-max.ru\">Альфамакс</a>\n      </div>\n      </>\n      )\n\n    return (\n      <>\n      <Summary set={this.state} options={this.state.importOptions} />\n      {this.state.details.size > 2 && \n      <FormControls isDisabled={hasDetails} addNewDetailFunc={this.addNewDetailFunc} toCheckoutFunc={this.toCheckoutFunc} />}\n      <DetailsList\n        activeDetail={this.state.activeDetail} \n        changeDetailOptions={this.changeDetailOptions}\n        saveSVGfunc = {this.saveSVG}\n        list={this.state.details}\n        loopF={this.loopChange} \n        grooveF={this.grooveChange} \n        edgeF={this.edgeChange}\n        f={this.inputOnChange} \n        ff={this.handleSetDetailSize} />\n      <FormControls isDisabled={hasDetails} addNewDetailFunc={this.addNewDetailFunc} toCheckoutFunc={this.toCheckoutFunc} />\n      <div className=\"copyright\">\n        Приложение разработано в интернет-агентстве <a rel=\"noreferrer\" target=\"_blank\" href=\"https://alpha-max.ru\">Альфамакс</a>\n      </div>\n      </>\n    );\n  }\n}\nexport default App;\n\nclass DetailsList extends React.Component{\n  state = {}\n\n  render(){\n    let list = [];\n    let set = this.props.f;\n    let setSizeF = this.props.ff;\n    let loopF = this.props.loopF;\n    let grooveF = this.props.grooveF;\n    let edgeF = this.props.edgeF;\n    let activeKey = this.props.activeDetail;\n    let saveSVG = this.props.saveSVGfunc;\n    let changeDetailOptions = this.props.changeDetailOptions;\n    this.props.list.forEach(function(value,key) {\n      list.push( <Detail \n        activeKey={activeKey === key ? 1 : 0}\n        changeDetailOptions={changeDetailOptions}\n        saveSVGfunc={saveSVG}\n        ff={setSizeF} \n        f={set} \n        loopF={loopF} \n        grooveF={grooveF}\n        edgeF={edgeF} \n        key={key} \n        dkey={key} \n        value={value} /> );\n    });\n    return(\n      <>\n      <h2>Список деталей</h2>\n      {list.length > 0 ? list : 'Список пуст'}\n      </>\n    );\n  }\n}\n\nclass Detail extends React.Component{\n  state = {}\n\n  handleSetSize = (e) => {\n    e.preventDefault();\n    let fieldName = e.target.name;\n    let key = this.props.dkey;\n    let min = +e.target.min;\n    let max = +e.target.max;\n    let value = +e.target.value.toString();\n\n    this.setState({[fieldName]: value}, () => {\n      if(value < min || value > max)\n        e.target.classList.add('error')\n        if(value > max){\n          value = max;\n          e.target.classList.remove('error')\n        }\n      else\n        e.target.classList.remove('error')\n\n      this.props.ff(key,fieldName,value);\n    })\n  }\n  handleSetTitle = (e) => {\n    let fieldName = e.target.name;\n    let value = e.target.value;\n    let key = this.props.dkey;\n\n    this.props.ff(key,fieldName,value);\n  }\n\n  render(){\n    let set = this.props.value;\n    let o = window.importOptions;\n    if(this.props.activeKey === 0){\n      return(\n        <div className=\"detail not-active\" data-key={this.props.dkey}>\n          <div className=\"detail-settings w100p\">\n            <div className=\"flex-nowrap\">\n              <fieldset id=\"detail-size\" className=\"flex\">\n                <legend>Размеры</legend>\n                <label className=\"w100p\">\n                  <input onChange={this.handleSetTitle} type=\"text\" name=\"title\" placeholder=\"Комментарий\" value={set.title} />\n                </label>\n                <label className=\"flex-column\">\n                  <span>Ширина, мм</span>\n                  <input onChange={this.handleSetSize} type=\"text\" pattern=\"[0-9]\" maxLength=\"4\" name=\"width\" min=\"60\" max={o.SHEET_WIDTH} value={set.nominalwidth.toString()} />\n                </label>\n                <label className=\"flex-column\">\n                  <span>Длина, мм</span>\n                  <input onChange={this.handleSetSize} type=\"number\" maxLength=\"4\" name=\"height\" min=\"60\" max={o.SHEET_LENGHT} value={set.nominalheight.toString()} />\n                </label>\n                <label className=\"flex-column\">\n                  <span>Кол-во, шт</span>\n                  <input onChange={this.handleSetSize} type=\"number\" maxLength=\"4\" name=\"count\" min=\"1\" max=\"1000\" value={set.count} />\n                </label>\n              </fieldset>\n              <fieldset className=\"detail-ext-options\">\n                <legend>Опции</legend>\n                <button data-action=\"change\" onClick={this.props.changeDetailOptions} className=\"btn\">Редактировать</button>\n                <button data-action=\"copy\" onClick={this.props.changeDetailOptions} className=\"btn\">Копировать</button>\n              </fieldset>\n            </div>\n          </div>\n          <div className=\"detail-plan\">\n            <DetailPlan id={this.props.dkey} set={this.props.value} saveSVGfunc={this.props.saveSVGfunc} />\n            <button className=\"remove-detail-btn\" data-action=\"remove\" onClick={this.props.changeDetailOptions} title=\"Удалить деталь\"></button>\n          </div>\n        </div>\n      )\n    }\n    return(\n      <div className=\"detail active\" data-key={this.props.dkey}>\n        <div className=\"detail-settings w100p\">\n          <div className=\"flex-nowrap\">\n            <fieldset id=\"detail-size\" className=\"flex\">\n              <legend>Размеры</legend>\n              <label className=\"w100p\">\n                <input onChange={this.handleSetSize} type=\"text\" name=\"title\" placeholder=\"Комментарий\" value={set.title} />\n              </label>\n              <label className=\"flex-column\">\n                <span>Ширина, мм</span>\n                <input onInput={this.handleSetSize} \n                       type=\"number\" name=\"width\" min=\"60\" max={o.SHEET_WIDTH} \n                       value={helper.prepareNumber(set.nominalwidth.toString())} />\n              </label>\n              <label className=\"flex-column\">\n                <span>Длина, мм</span>\n                <input onChange={this.handleSetSize} type=\"number\" name=\"height\" min=\"60\" max={o.SHEET_LENGHT} value={set.nominalheight.toString()} />\n              </label>\n              <label className=\"flex-column\">\n                <span>Кол-во, шт</span>\n                <input onChange={this.handleSetSize} type=\"number\" name=\"count\"  min=\"1\" max=\"1000\" value={set.count.toString()} />\n              </label>\n            </fieldset>\n\n            <fieldset id=\"edge\" className=\"flex\">\n              <legend>Кромка</legend>\n              <EdgeOptions func={this.props.edgeF} set={this.props.value} />\n            </fieldset>\n            \n            <div className=\"detail-ext-options\">\n              <button data-action=\"close\" onClick={this.props.changeDetailOptions} className=\"btn\">Свернуть</button>\n              <button data-action=\"copy\" onClick={this.props.changeDetailOptions} className=\"btn\">Копировать</button>\n              <button data-action=\"rotate\" onClick={this.props.changeDetailOptions} className=\"btn\">Повернуть текстуру</button>\n            </div>\n          </div>\n\n          <fieldset id=\"angles\" className=\"w100p\">\n            <legend>Углы</legend>\n            <AngleOptions angleName='lt' func={this.props.f} set={this.props.value} />\n            <AngleOptions angleName='rt' func={this.props.f} set={this.props.value} />\n            <AngleOptions angleName='rb' func={this.props.f} set={this.props.value} />\n            <AngleOptions angleName='lb' func={this.props.f} set={this.props.value} />\n          </fieldset>\n\n          <fieldset id=\"loops\" className={set.loops && set.loops.side !== 'none' ? 'flex w100p' : 'flex w50p'}>\n            <legend>Петли</legend>\n            <LoopsOptions func={this.props.loopF} set={this.props.value} />\n          </fieldset>\n\n          <fieldset id=\"groove\" className=\"flex w50p\">\n            <legend>Паз</legend>\n            <GrooveOptions func={this.props.grooveF} set={this.props.value} />\n          </fieldset>\n\n        </div>\n        <div className=\"detail-plan\">\n          <DetailPlan id={this.props.dkey} set={this.props.value} />\n          <button className=\"remove-detail-btn\" data-action=\"remove\" onClick={this.props.changeDetailOptions} title=\"Удалить деталь\"></button>\n        </div>\n      </div>\n    )\n  }\n}\n\nclass AngleOptions extends React.Component{\n  state = {\n    active: false,\n    type: 'outside',\n    send: true,\n    x: 0,\n    y: 0,\n    nomX:0,\n    nomY:0\n  }\n\n  handleInputChange = (event) => {\n    const target = event.target;\n    let value = target.type === 'checkbox' ? target.checked : Math.abs(target.value);\n    const name = target.name;\n\n    if(target.type === 'number' && this.state.send){\n      const breakPoint = target.dataset.break;\n      const max = target.max;\n      if(value > max) value = max;\n      this.setState({\n        x: value <= breakPoint ? value : breakPoint,\n        y: value,\n        nomX: value,\n        nomY: value,\n      }, () => this.backToApp(target))\n    }\n    else{\n      this.setState({\n        [name]: value,\n        nomX: name === 'x' ? value : this.state.x,\n        nomY: name === 'y' ? value : this.state.y,\n      }, () => this.backToApp(target));\n    }\n    \n    \n  }\n\n  backToApp = (target) => {// Отправляем данные угла назад\n    let x = this.state.x;\n    let y = this.state.y;\n    let width = this.props.set.width;\n    let nominalwidth = this.props.set.nominalwidth;\n    let height = this.props.set.height;\n    let nominalheight = this.props.set.nominalheight;\n    //## Масштабирование, НЕ ОКРУГЛЯТЬ\n    if(nominalwidth >= 500){\n      x = x*(height/nominalheight);\n      y = y*(width/nominalwidth);\n    }\n    this.props.func(\n      this.props.angleName,\n      { \n        x:x,\n        y:y,\n        nomX:this.state.x,\n        nomY:this.state.y,\n        type:this.state.type,\n        title:this.props.set[this.props.angleName].title,\n        next:this.props.set[this.props.angleName].next,\n        prev:this.props.set[this.props.angleName].prev\n      },\n      target.closest('.detail').dataset.key\n    );\n  }\n\n  handleTypeChange = (e) => {\n    let type = e.target.name;\n    this.setState(\n      {type: type},\n      () => this.backToApp(e.target)\n    );\n  }\n\n  handleInputActive = (e) => {\n    const value = e.target.checked;\n    this.setState({\n      active: value\n    })\n    this.props.func(\n      this.props.angleName,\n      { // Отправляем данные угла назад\n        x: value ? this.state.x : 0,\n        y: value ? this.state.y : 0,\n        nomX:this.state.nomX,\n        nomY:this.state.nomY,\n        type:this.state.type,\n        title:this.props.set[this.props.angleName].title,\n        next:this.props.set[this.props.angleName].next,\n        prev:this.props.set[this.props.angleName].prev\n      },\n      e.target.closest('.detail').dataset.key\n    );\n  }\n\n  render(){\n    let set = this.props.set;\n    let next = set[set[this.props.angleName].next];\n    let prev = set[set[this.props.angleName].prev];\n    let maxX = 101;\n    let maxY = 101;\n    \n    if(this.props.angleName === 'lt'){\n      maxY = +set.nominalwidth - next.nomY;\n      maxX = +set.nominalheight - prev.nomX;\n    }\n    else if(this.props.angleName === 'rt'){\n      maxY = +set.nominalwidth - prev.nomX;\n      maxX = +set.nominalheight - next.nomY;\n    }\n    else if(this.props.angleName === 'rb'){\n      maxY = +set.nominalwidth - next.nomY;\n      maxX = +set.nominalheight - prev.nomX;\n    }\n    else{\n      maxY = +set.nominalwidth - prev.nomY;\n      maxX = +set.nominalheight - next.nomX;\n    }\n\n    let input = <span><input onChange={this.handleInputActive} type=\"checkbox\" name=\"active\" checked={this.state.active} /></span>;\n    // Если сторона зарезервирована\n    let closedAngle = [];\n    let reserveL = set.reserve.left;\n    let reserveT = set.reserve.top;\n    let reserveR = set.reserve.right;\n    let reserveB = set.reserve.bot;\n    let motive = '';\n    if( reserveL === 'loops' || reserveL === 'groove'){\n      closedAngle = ['lb','lt'];\n      reserveL === \"loops\" ? motive = 'петлями' : motive = 'пазом';\n    }\n    else if(reserveT === 'loops' || reserveT === 'groove'){\n      closedAngle = ['lt','rt'];\n      reserveT === \"loops\" ? motive = 'петлями' : motive = 'пазом';\n    }\n    else if(reserveR === 'loops' || reserveR === 'groove'){\n      closedAngle = ['rt','rb'];\n      reserveR === \"loops\" ? motive = 'петлями' : motive = 'пазом';\n    }\n    else if(reserveB === 'loops' || reserveB === 'groove'){\n      closedAngle = ['rb','lb'];\n      reserveB === \"loops\" ? motive = 'петлями' : motive = 'пазом';\n    }\n\n    closedAngle.forEach((el)=>{\n      if(this.props.angleName === el)\n        input = <span className=\"reserve-notice red\">Сторона занята {motive}</span>;\n    })\n\n    // Закрытое положение\n    if(!this.state.active){\n      return(\n        <div className=\"angle-options-wrapper\">\n          <div className=\"angle-options-type w100p\">\n            <label className=\"angle-title-wrapper\">\n              <span className={`angle-title ${this.props.angleName}`}>{set[this.props.angleName].title}</span>\n              {input}\n            </label>\n          </div>\n        </div>\n      )\n    }\n    // Открытое положение\n    return(\n      <div className={`angle-options-wrapper ${this.state.active && 'active'}`}>\n        <div className=\"angle-options-type w100p\">\n          <label className=\"angle-title-wrapper\">\n            <span className={`angle-title ${this.props.angleName}`}>{set[this.props.angleName].title}</span>\n            <span><input onChange={this.handleInputActive} type=\"checkbox\" name=\"active\" checked={this.state.active} /> вкл.</span>\n          </label>\n          <button onClick={this.handleTypeChange} name=\"outside\" className=\"angle-type__outside ml-a\" data-active={this.state.type === 'outside' && 'active' }>Наружный</button>\n          <button onClick={this.handleTypeChange} name=\"linear\" className=\"angle-type__linear\" data-active={this.state.type === 'linear' && 'active' }>Прямой</button>\n          <button onClick={this.handleTypeChange} name=\"inside\" className=\"angle-type__inside\" data-active={this.state.type === 'inside' && 'active' }>Внутренний</button>\n        </div>\n        <label className=\"\">\n          X <input \n              onInput={this.handleInputChange} \n              type=\"number\" \n              name=\"y\" \n              min=\"30\" \n              max={Math.round(maxY,1)} \n              data-break={maxX} \n              step=\"1\" \n              value={this.state.y.toString()} />\n            <span>max: <b>{Math.round(maxY,1)}</b>&nbsp;мм</span>\n        </label>\n        <label className=\"switch\">\n          <span>Объединить<br />показатели</span>\n          <input \n            onChange={this.handleInputChange} \n            name=\"send\" \n            type=\"checkbox\" \n            checked={this.state.send} />\n        </label>\n        <label className=\"\">\n          Y <input \n              onInput={this.handleInputChange} \n              type=\"number\" \n              name=\"x\" \n              min=\"30\" \n              max={Math.round(maxX,1)} \n              step=\"1\" \n              value={this.state.x.toString()} \n              disabled={this.state.send} />\n            <span>max: <b>{Math.round(maxX,1)}</b>&nbsp;мм</span>\n        </label>\n      </div>\n    );\n  }\n}\n\nfunction correctSize(side,min,max){\n  let m = Math.abs(side);\n  if(m < min)\n    return min;\n  else if(m > max)\n    return max;\n  else\n    return m;\n}\n\nfunction DetailPlan(props){\n  let set = props.set;\n  // Раздаём значения\n  let {width,nominalwidth,minWidth,maxWidth,height,nominalheight,minHeight,maxHeight,lt,rt,lb,rb} = set;\n  let m = 70;\n  const o = window.importOptions;\n\n  width = correctSize(width,minWidth,maxWidth);\n  height = correctSize(height,minHeight,maxHeight);\n\n  // Пробуем сохранить пропорции\n  if(nominalwidth >= 500){\n    //## Размеры детали\n    height = set.height = Math.round(500/((Math.round(nominalwidth/nominalheight*10,-1)/10)));\n  }\n\n  if(height < 200)\n    height = set.height = 200;\n  \n  // Выводим фигуру\n  let ltA   = `M ${m} ${lt.x + m} Q ${angleControlDotLT(m,lt)} ${lt.y + m} ${m}`;\n  let top   = ` L ${(width-rt.y + m)} ${m}`;\n  let rtA   = ` Q ${angleControlDotRT(m,rt,set)} ${width+m} ${+rt.x + m}`;\n  let right = ` L ${(width + m)} ${(height - rb.x + m)}`;\n  let rbA   = ` Q ${angleControlDotRB(m,rb,set)} ${(width - rb.y + m)} ${(height + m)}`;\n  let bot   = ` L ${(+lb.y+m)} ${(height + m)}`;\n  let lbA   = ` Q ${angleControlDotLB(m,lb,set)} ${m} ${height-lb.x+m}`;\n\n  let bgWidth = 1169;\n  let bgHeight = 900;\n  let bgVector = set.textureRotate;\n  let color = \"brown\";\n\n  let svg = \n    <svg id={props.id} xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" viewBox={\"0 0 \" + (width+m*2) +' '+ (height+m*2)}>\n      {/* ФОН */}\n      <defs>\n        <pattern \n          id={`bg-${props.id}`} \n          patternUnits=\"userSpaceOnUse\" \n          preserveAspectRatio=\"none\" \n          patternTransform={`rotate(${bgVector}, ${0}, ${0})`}\n          width={bgWidth}\n          height={bgHeight}>\n          <image \n            href={o.TEXTURE_IMAGE_URL}\n            x={m} y={m} \n            opacity=\"0.5\"\n            width={bgWidth} \n            height={bgHeight} />\n        </pattern>\n      </defs>\n      {/* Деталь */}\n      <path d={ltA + top + rtA + right + rbA + bot + lbA + ' z'} stroke=\"#333333\" strokeWidth=\"3\" strokeLinejoin=\"miter\" fill={`url(#bg-${props.id})`} opacity=\"0.7\"/>\n      {/* Размеры углов */}\n      {/* LT */}\n      <path d={`M ${m} ${Math.abs(lt.x) + m} v -${lt.x} h ${lt.y}`} strokeWidth=\"2\" stroke={color} strokeDasharray=\"10\" fill=\"transparent\"/>\n      <text fill={color} fontSize=\"130%\" x={-30} y={135} transform={`rotate(-90,${(20)},${(96)})`}>{lt.nomX}мм</text>\n      <text fill={color} fontSize=\"130%\" x={m+10} y={m-10}>{lt.nomY}мм</text>\n      {/* RT */}\n      <path d={`M ${width+m} ${Math.abs(rt.x) + m} v -${rt.x} h -${rt.y}`} strokeWidth=\"3\" stroke={color} strokeDasharray=\"10\" fill=\"transparent\"/>\n      <text fill={color} fontSize=\"130%\" x={width+m-70} y={m-10}>{rt.nomY}мм</text>\n      <text fill={color} fontSize=\"130%\" x={(width+m-20)} y={m+50} transform={`rotate(-90,${(width+m)+10},${(m+30)})`}>{rt.nomX}мм</text>\n      {/* RB */}\n      <path d={`M ${width+m} ${height - rb.x + m} v ${rb.x} h -${rb.y}`} strokeWidth=\"3\" stroke={color} strokeDasharray=\"10\" fill=\"transparent\"/>\n      <text fill={color} fontSize=\"130%\" x={width+m-70} y={height+m+30}>{rb.nomY}мм</text>\n      <text fill={color} fontSize=\"130%\" x={(width+m-20)} y={height+m+20} transform={`rotate(-90,${(width+m)-20},${(height+m-30)})`}>{rb.nomX}мм</text>\n      {/* LB */}\n      <path d={`M ${m} ${height - lb.x + m} v ${+lb.x} h ${+lb.y}`} strokeWidth=\"3\" stroke={color} strokeDasharray=\"10\" fill=\"transparent\"/>\n      <text fill={color} fontSize=\"130%\" x={m+10} y={height+m+30}>{lb.nomY}мм</text>\n      <text fill={color} fontSize=\"130%\" x={(m-10)} y={height+m-10} transform={`rotate(-90,${m-10},${height+m-10})`}>{lb.nomX}мм</text>\n      {/* Размер детали */}\n      <text fontSize=\"150%\" x={(m+width)/2} y={20}>{nominalwidth}мм</text>\n      <text fontSize=\"150%\" transform={`rotate(-90,${20},${(m+height)/2})`} x={m/2-50} y={(m+height)/2}>{nominalheight}мм</text>\n      {/* Петли */} <Loops set={set} m={m} />\n      {/* Паз */} <Groove set={set} m={m} />\n      {/* Кромка */} <Edge set={set} m={m} />\n    </svg>;\n  return svg;\n}\nexport {DetailPlan};\n\nfunction angleControlDotLT(m,angle){\n  if(angle.type === 'outside')\n    return `${m} ${m}`;\n  else if(angle.type === 'linear')\n    return `${angle.x/2 + m} ${angle.y/2 + m}`;\n  else if(angle.type === 'inside')\n    return `${+angle.x + m} ${+angle.y + m}`;\n}\nfunction angleControlDotRT(m,angle,set){\n  if(angle.type === 'outside')\n    return `${(+set.width + m)} ${m}`;\n  else if(angle.type === 'linear')\n    return `${+set.width - angle.y/2 + m} ${angle.x/2 + m}`;\n  else if(angle.type === 'inside')\n    return `${+set.width - angle.y + m} ${+angle.x + m}`;\n}\nfunction angleControlDotRB(m,angle,set){\n  if(angle.type === 'outside')\n    return `${(+set.width + m)} ${+set.height + m}`;\n  else if(angle.type === 'linear')\n    return `${+set.width - angle.y/2 + m} ${+set.height - angle.x/2 + m}`;\n  else if(angle.type === 'inside')\n    return `${+set.width - angle.y + m} ${+set.height - angle.x + m}`;\n}\nfunction angleControlDotLB(m,angle,set){\n  if(angle.type === 'outside')\n    return `${m} ${+set.height + m}`;\n  else if(angle.type === 'linear')\n    return `${+angle.y/2 + m} ${+set.height - angle.x/2 + m}`;\n  else if(angle.type === 'inside')\n    return `${+angle.y + m} ${+set.height - angle.x + m}`;\n}\n\nfunction FormControls(props){\n  return(\n    <div id=\"calc-form-controlls-wrapper\">\n      <button className=\"btn\" onClick={props.addNewDetailFunc}><b>+</b> Добавить деталь</button>\n      <button className=\"btn\" disabled={props.isDisabled} onClick={props.toCheckoutFunc}>Перейти к оформлению</button>\n    </div>\n  );\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}