{"version":3,"sources":["components/loops.js","components/groove.js","components/edge.js","components/summary.js","components/checkout.js","App.js","reportWebVitals.js","index.js"],"names":["LoopsOptions","state","side","count","before","after","minSpace","error","handleInputChange","e","fieldName","target","name","value","key","closest","dataset","steps","Math","round","setState","props","func","isFree","r","A1","A2","this","set","beforeMin","beforeMax","afterMax","nominalwidth","nominalheight","afterMin","countMax","LTangle","lt","x","RTangle","rt","RBangle","rb","LBangle","lb","reserve","resL","left","resT","top","resR","right","resB","bot","className","onChange","defaultValue","loops","disabled","type","min","max","step","React","Component","Loops","m","indent","radius","undefined","width","height","circles","push","d","stroke","strokeDasharray","fill","Circle","cx","cy","i","circleCX","circleCY","line","numberX","numberY","number","fontSize","y","GrooveOptions","groove","Groove","grooveIndent","grooveWidth","vector","size","strokeWidth","EdgeOptions","handleChange","lta","rta","rba","lba","newValue","edge","edgeMin","edgeMax","Edge","length","lx","ly","rx","getListCount","o","listS","SHEET_WIDTH","SHEET_LENGHT","SHEET_FILLING_AREA","S","listCount","values","detail","Summary","options","summaryOut","summary","SHEET_NAME","SHEET_DEPTH","SHEET_PRICE","SummItem","title","id","summ","MoreOrderDetails","open","onClick","final","sm","lg","angle","edgeSide","edgeSize","edgeSM","EDGE_MULTIPLICATOR","abs","PRICE_EDGE_04","edgeLG","PRICE_EDGE_02","edgeSumm","PRICE_EDGING","material","work","PRICE_SHEET_CUTTING","angles","PRICE_CURVATURE","finalLoops","PRICE_LOOP","finalGrooves","PRICE_GROOVE","pack","finalSumm","Checkout","setRequest","preventDefault","json","createRequestData","data","svgs","url","importOptions","REQUEST_URL","formData","FormData","append","JSON","stringify","fetch","method","body","then","res","console","log","heandleChange","checked","details","onSubmit","required","username","placeholder","userphone","useremail","usercomment","billingaddress","toOrderFunc","form","order","faster","inbox","poddon","Date","toString","ind","forEach","row","CopyDetail","window","prev","next","App","stage","Map","billing","userName","userEmail","userPhone","userComment","packaging","activeDetail","addNewDetailFunc","newDetail","detailKey","getTime","inputOnChange","angleTitle","obj","get","clearReserve","item","handleSetDetailSize","loopChange","loopSide","grooveChange","grooveSide","edgeChange","changeDetailOptions","action","create","forceUpdate","textureRotate","confirm","delete","toCheckoutFunc","saveSVG","toOrder","svgsDOM","document","querySelectorAll","Object","el","arr","outerHTML","hasDetails","rel","href","FormControls","isDisabled","saveSVGfunc","list","loopF","grooveF","edgeF","f","ff","DetailsList","setSizeF","activeKey","dkey","Detail","handleSetSize","classList","add","remove","handleSetTitle","data-key","data-action","DetailPlan","angleName","AngleOptions","active","send","event","breakPoint","break","handleTypeChange","handleInputActive","maxX","maxY","input","closedAngle","reserveL","reserveT","reserveR","reserveB","motive","data-active","data-break","correctSize","minWidth","maxWidth","minHeight","maxHeight","ltA","angleControlDotLT","rtA","angleControlDotRT","rbA","angleControlDotRB","lbA","angleControlDotLB","bgVector","xmlns","version","viewBox","patternUnits","preserveAspectRatio","patternTransform","SHEET_PICTURE_URL","strokeLinejoin","opacity","transform","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.d7cbd76a.chunk.js","sourcesContent":["import React from 'react';\r\nimport '../App.css';\r\n\r\n// ============================================ LOOPS\r\nclass LoopsOptions extends React.Component{\r\n    state = {\r\n      side: 'none',\r\n      count: 2,\r\n      before: 100,\r\n      after: 500,\r\n      minSpace: 50,\r\n      error: false,\r\n    }\r\n  \r\n    handleInputChange = (e) => {\r\n      let fieldName = e.target.name; // Поле формы\r\n      let value = e.target.value; // Значение формы\r\n      let key = e.target.closest('.detail').dataset.key; // Ключ детали\r\n      let steps = this.state.count - 1; // желаемое кол-во отрезков между первой и последней деталью\r\n      let step = Math.round((this.state.after-this.state.before)/steps, 1); // размер одного отрезка\r\n    //  Не позволяем добавлять больше петель, \r\n    //  чем это возможно при сохранении минимального расстояния между центрами петель,\r\n    //  обозначенного как minSpace, не путать с indent(отступ петли от края детали)\r\n      if(step >= this.state.minSpace){\r\n        this.setState({\r\n          [fieldName]: value,\r\n          error: false\r\n        }, () => {\r\n          this.props.func(this.state, key); // отправлем данные в Арр\r\n        })\r\n        \r\n      }\r\n      else{\r\n        this.setState({\r\n          [fieldName]: value,\r\n          error: true\r\n        });\r\n        \r\n      }\r\n    }\r\n\r\n    isFree = (r,A1,A2) => {\r\n        if(r === 'groove' || A1 || A2){\r\n            return true;\r\n        }\r\n        if(!r) return false;\r\n    }\r\n  \r\n    render(){\r\n        let {side,before,after,minSpace} = this.state;\r\n        let set = this.props.set;\r\n        let beforeMin = +minSpace*2;\r\n        let beforeMax = after - minSpace*2;\r\n        let afterMax = side === 'top' || side === 'bot' ? set.nominalwidth - minSpace*2 : set.nominalheight - minSpace*2;\r\n        let afterMin = +minSpace*2 + +before;\r\n        let countMax = Math.round((after-before)/minSpace) + 1;\r\n        let LTangle = +set.lt.x === 0 ? false : true;\r\n        let RTangle = +set.rt.x === 0 ? false : true;\r\n        let RBangle = +set.rb.x === 0 ? false : true;\r\n        let LBangle = +set.lb.x === 0 ? false : true;\r\n        let r = set.reserve;\r\n        let resL = this.isFree(r.left,LTangle,LBangle);\r\n        let resT = this.isFree(r.top,LTangle,RTangle);\r\n        let resR = this.isFree(r.right,RTangle,RBangle);\r\n        let resB = this.isFree(r.bot,RBangle,LBangle);\r\n        \r\n        if(set.nominalwidth < 150)\r\n            resT = resB = true;\r\n        if(set.nominalheight < 150)\r\n            resL = resR = true;\r\n\r\n        if(r.left==='groove' || r.top==='groove' || r.right==='groove' || r.bot==='groove'){\r\n            return(\r\n                <span className=\"fons12 red\">Петли несовместимы с пазами</span>\r\n            )\r\n        }\r\n        if(resL && resT && resR && resB){\r\n            return(\r\n                <span className=\"fons12 red\">Нет вариантов</span>\r\n            )\r\n        }\r\n\r\n        return(\r\n            <>\r\n            <label className=\"flex-column\">\r\n                <span>Сторона</span>\r\n                <select onChange={this.handleInputChange} name=\"side\" defaultValue=\"none\" value={set.loops.side}>\r\n                    <option key=\"loopnone\" value=\"none\">Нет</option>\r\n                    <option key=\"loopleft\" value=\"left\"  disabled={resL}>Слева{resL && ' (занято)'}</option>\r\n                    <option key=\"looptop\" value=\"top\"   disabled={resT}>Сверху{resT && ' (занято)'}</option>\r\n                    <option key=\"loopright\" value=\"right\" disabled={resR}>Справа{resR && ' (занято)'}</option>\r\n                    <option key=\"loopbot\" value=\"bot\"   disabled={resB}>Снизу{resB && ' (занято)'}</option>\r\n                </select>\r\n            </label>\r\n  \r\n            {this.state.side !== 'none' &&\r\n            <>\r\n            <label className=\"flex-column\">\r\n            <span>Кол-во, шт</span>\r\n            <input \r\n                className={this.state.error ? 'error' : ''}\r\n                onChange={this.handleInputChange} \r\n                name=\"count\" \r\n                type=\"number\"\r\n                min=\"2\"\r\n                max={countMax}\r\n                step=\"1\" \r\n                defaultValue=\"2\" />\r\n            </label>\r\n            <label className=\"flex-center ml-a\"><span className=\"fons12\">От верхнего/нижнего края отступ отверстий {beforeMin}мм.</span></label>\r\n            <label className=\"flex-column w100p\">\r\n            <span>До первой петли, мм</span>\r\n            <input \r\n                onChange={this.handleInputChange} \r\n                name=\"before\" \r\n                type=\"range\"\r\n                min={beforeMin}\r\n                max={beforeMax}\r\n                step=\"1\" \r\n                defaultValue={beforeMin} />\r\n            </label>\r\n            <label className=\"flex-column w100p\">\r\n            <span>До последней петли, мм</span>\r\n            <input \r\n                onChange={this.handleInputChange} \r\n                name=\"after\" \r\n                type=\"range\"\r\n                min={afterMin}\r\n                max={afterMax}\r\n                step=\"1\" \r\n                defaultValue={afterMax} />\r\n            </label>\r\n            </>\r\n            }\r\n            </>\r\n        );\r\n    }\r\n  }\r\n\r\nfunction Loops(props){\r\n    let set = props.set;\r\n    let m = props.m;\r\n    let loops = set.loops;\r\n    let indent = 25;\r\n    let radius = 35/2;\r\n\r\n    if(loops.side === undefined || loops.side === 'none') return('');\r\n  \r\n    let width = set.width;\r\n    let height = set.height;\r\n    let circles = [];\r\n\r\n    if(loops.side === 'left'){\r\n        circles.push(<path key=\"lpath\" d={`M ${m+indent} ${m} v ${height}`} stroke=\"#72aee6\" strokeDasharray=\"10\" fill=\"transparent\"/>);\r\n        circles.push(<Circle key={'lbefore'} side={loops.side} cx={m+indent} cy={+loops.before+m} r={radius} m={m} />);\r\n        circles.push(<Circle key={'lafter'} side={loops.side} cx={m+indent} cy={+loops.after+m} r={radius} m={m} />);\r\n    }\r\n    else if(loops.side === 'top'){\r\n        circles.push(<path key=\"tpath\" d={`M ${m} ${m+indent} h ${width}`} stroke=\"#72aee6\" strokeDasharray=\"10\" fill=\"transparent\"/>);\r\n        circles.push(<Circle key={'tbefore'} side={loops.side} cx={+loops.before+m} cy={m+indent} r={radius} m={m} />);\r\n        circles.push(<Circle key={'tafter'} side={loops.side} cx={+loops.after+m} cy={m+indent} r={radius} m={m} />);\r\n    }\r\n    else if(loops.side === 'right'){\r\n        circles.push(<path key=\"rpath\" d={`M ${m+width-indent} ${m} v ${height}`} stroke=\"#72aee6\" strokeDasharray=\"10\" fill=\"transparent\"/>);\r\n        circles.push(<Circle key={'rbefore'} side={loops.side} cx={m+width-indent} cy={+loops.before+m} r={radius} m={m} />);\r\n        circles.push(<Circle key={'rafter'} side={loops.side} cx={m+width-indent} cy={+loops.after+m} r={radius} m={m} />);\r\n    }\r\n    else if(loops.side === 'bot'){\r\n        circles.push(<path key=\"bpath\" d={`M ${m} ${height+m-indent} h ${width}`} stroke=\"#72aee6\" strokeDasharray=\"10\" fill=\"transparent\"/>);\r\n        circles.push(<Circle key={'bbefore'} side={loops.side} cx={+loops.before+m} cy={height+m-indent} r={radius} m={m} />);\r\n        circles.push(<Circle key={'bafter'} side={loops.side} cx={+loops.after+m} cy={height+m-indent} r={radius} m={m} />);\r\n    }\r\n        \r\n\r\n    if(loops.count > 2){\r\n        let steps = loops.count - 1;\r\n        let step = Math.round((loops.after-loops.before)/steps, 1);\r\n        for(let i = 1; i < steps; i++){\r\n            let circleCX = m+indent;\r\n            let circleCY = +loops.before+(step*i)+m;\r\n            if(loops.side === 'top'){\r\n                circleCY = m+indent;\r\n                circleCX = +loops.before+(step*i)+m;\r\n            }\r\n            else if(loops.side === 'right'){\r\n                circleCX = width+m-indent;\r\n                circleCY = +loops.before+(step*i)+m;\r\n            }\r\n            else if(loops.side === 'bot'){\r\n                circleCY = height+m-indent;\r\n                circleCX = +loops.before+(step*i)+m;\r\n            }\r\n            circles.push(    \r\n                <Circle \r\n                    key={`${circleCX}-${circleCY}-${i}`} \r\n                    cx={circleCX} \r\n                    cy={circleCY} \r\n                    r={radius} \r\n                    width={width} \r\n                    height={height} \r\n                    side={loops.side}\r\n                    m={m} />);\r\n        }\r\n    }  \r\n    return circles;\r\n}\r\n  \r\nfunction Circle(props){\r\n    let side = props.side;\r\n    let line = `M ${props.cx} ${props.cy} h ${props.r + 20}`;\r\n    let numberX = props.cx + 45;\r\n    let numberY = props.cy + 8;\r\n    let number = props.cy-props.m;\r\n    if(side === 'top'){\r\n        line = `M ${props.cx} ${props.cy} v ${props.r + 20}`;\r\n        numberX = props.cx - 23;\r\n        numberY = props.cy + 60;\r\n        number = props.cx - props.m;\r\n    }\r\n    else if(side === 'right'){\r\n        line = `M ${props.cx} ${props.cy} h -${props.r + 20}`;\r\n        numberX = props.cx - 90;\r\n        numberY = props.cy + 10;\r\n        number = props.cy-props.m;\r\n    }\r\n    else if(side === 'bot'){\r\n        line = `M ${props.cx} ${props.cy} v -${props.r + 20}`;\r\n        numberX = props.cx - 20;\r\n        numberY = props.cy - 50;\r\n        number = props.cx - props.m;\r\n    }\r\n    return (\r\n      <>\r\n      <circle cx={props.cx} cy={props.cy} r={props.r} stroke=\"#3b8ecc\" fill=\"#3b8ecc\" />\r\n      <path d={line}  stroke=\"#3b8ecc\" />\r\n      <text fontSize=\"150%\" x={numberX} y={numberY}>{number}</text>\r\n      </>\r\n    );\r\n}\r\n\r\nexport {LoopsOptions, Loops};","import React from 'react';\r\nimport '../App.css';\r\n\r\n// ============================================ GROOVE\r\nclass GrooveOptions extends React.Component{\r\n\r\n    handleInputChange = (e) => {\r\n        let fieldName = e.target.name; // Поле формы\r\n        let value = e.target.value; // Значение формы\r\n        let key = e.target.closest('.detail').dataset.key; // Ключ детали\r\n\r\n        this.setState({\r\n            [fieldName]: value,\r\n            error: false\r\n          }, () => {\r\n            this.props.func(this.state.side, key); // отправлем данные в Арр\r\n          }\r\n        )\r\n    }\r\n\r\n    isFree = (r,A1,A2) => {\r\n        if(r === 'loops' || A1 || A2){\r\n            return true;\r\n        }\r\n        if(!r) return false;\r\n    }\r\n\r\n    render(){\r\n        let set = this.props.set;\r\n        let LTangle = +set.lt.x === 0 ? false : true;\r\n        let RTangle = +set.rt.x === 0 ? false : true;\r\n        let RBangle = +set.rb.x === 0 ? false : true;\r\n        let LBangle = +set.lb.x === 0 ? false : true;\r\n        let r = set.reserve;\r\n        let resL = this.isFree(r.left,LTangle,LBangle);\r\n        let resT = this.isFree(r.top,LTangle,RTangle);\r\n        let resR = this.isFree(r.right,RTangle,RBangle);\r\n        let resB = this.isFree(r.bot,RBangle,LBangle);\r\n\r\n        if(r.left==='loops' || r.top==='loops' || r.right==='loops' || r.bot==='loops'){\r\n            return(\r\n                <span className=\"fons12 red\">Пазы несовместимы с петлями</span>\r\n            )\r\n        }\r\n\r\n        if(resL && resT && resR && resB){\r\n            return(\r\n                <span className=\"fons12 red\">Нет вариантов</span>\r\n            )\r\n        }\r\n\r\n        return(\r\n            <div className=\"flex-nowrap flex-center\">\r\n                <label className=\"flex-column\">\r\n                    <span>Сторона</span>\r\n                    <select onChange={this.handleInputChange} name=\"side\" value={set.groove}>\r\n                        <option value=\"none\">Нет</option>\r\n                        <option value=\"left\"  disabled={resL}>Слева{resL && ' (занято)'}</option>\r\n                        <option value=\"top\"   disabled={resT}>Сверху{resT && ' (занято)'}</option>\r\n                        <option value=\"right\" disabled={resR}>Справа{resR && ' (занято)'}</option>\r\n                        <option value=\"bot\"   disabled={resB}>Снизу{resB && ' (занято)'}</option>\r\n                    </select>\r\n                </label>\r\n                <span className=\"fons12\">\r\n                    <b>Параметры паза: </b>\r\n                    глубина 8 мм,\r\n                    ширина 4 мм,\r\n                    расстояние от края 16 мм (20 мм вместе с пазом)\r\n                </span>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport {GrooveOptions};\r\n\r\nfunction Groove(props){\r\n    let set = props.set;\r\n    let m = props.m;\r\n    let side = set.groove;\r\n    \r\n    if(!side) return('');\r\n    \r\n    let indent = set.grooveIndent;\r\n    let width = set.grooveWidth;\r\n    let x = m;\r\n    let y = m;\r\n    let vector = side === 'left' || side === 'right' ? 'v' : 'h';\r\n    let size = vector === 'h' ? set.width : set.height;\r\n    \r\n    if(side === 'left')\r\n        x = m + indent; size = size*-1;\r\n    if(side === 'top')\r\n        y = m + indent;\r\n    if(side === 'right')\r\n        x = m + +set.width - indent;\r\n    if(side === 'bot')\r\n        y = +set.height + m - indent; size = size*-1;\r\n\r\n    return <path d={`M ${x} ${y} ${vector} ${size}`} stroke=\"green\" strokeWidth={width} fill=\"transparent\"/>\r\n}\r\nexport {Groove};","import React from 'react';\r\nimport '../App.css';\r\n\r\n// ============================================ GROOVE\r\nclass EdgeOptions extends React.Component{\r\n\r\n    state = {\r\n        left: '0.0', top: '0.0', right: '0.0', bot: '0.0',\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        let set   = this.props.set;\r\n        let lta = set.lt.x > 0 ? true : false;\r\n        let rta = set.rt.x > 0 ? true : false;\r\n        let rba = set.rb.x > 0 ? true : false;\r\n        let lba = set.lb.x > 0 ? true : false;\r\n\r\n        let fieldName = e.target.name; // Поле формы\r\n        let value = e.target.value; // Значение формы\r\n        let key = e.target.closest('.detail').dataset.key; // Ключ детали\r\n        let newValue = {[fieldName]: value}\r\n\r\n        if(fieldName === 'left' && lta)\r\n            newValue.top = value;\r\n        else if(fieldName === 'left' && lba)\r\n            newValue.bot = value;\r\n        else if(fieldName === 'top' && lta)\r\n            newValue.left = value;\r\n        else if(fieldName === 'top' && rta)\r\n            newValue.right = value;\r\n        else if(fieldName === 'right' && rta)\r\n            newValue.top = value;\r\n        else if(fieldName === 'right' && rba)\r\n            newValue.bot = value;\r\n        else if(fieldName === 'bot' && rba)\r\n            newValue.right = value;\r\n        else if(fieldName === 'bot' && lba)\r\n            newValue.left = value;\r\n\r\n        this.setState( newValue, () => {\r\n            this.props.func(this.state, key); // отправлем данные в Арр\r\n          }\r\n        )\r\n    }\r\n\r\n    render(){\r\n        let set   = this.props.set;\r\n        let left  = set.edge.left;\r\n        let top   = set.edge.top;\r\n        let right = set.edge.right;\r\n        let bot   = set.edge.bot;\r\n        let min   = set.edgeMin;\r\n        let max = set.edgeMax;\r\n        return(\r\n            <>\r\n            <label className=\"flex-column\">\r\n                <span>Слева</span>\r\n                <select onChange={this.handleChange} name=\"left\" value={left}>\r\n                    <option value=\"0.0\">0.0</option>\r\n                    <option value={min}>{min}</option>\r\n                    <option value={max}>{max}</option>\r\n                </select>\r\n            </label>\r\n            <label className=\"flex-column\">\r\n                <span>Сверху</span>\r\n                <select onChange={this.handleChange} name=\"top\" value={top}>\r\n                    <option value=\"0.0\">0.0</option>\r\n                    <option value={min}>{min}</option>\r\n                    <option value={max}>{max}</option>\r\n                </select>\r\n            </label>\r\n            <label className=\"flex-column\">\r\n                <span>Справа</span>\r\n                <select onChange={this.handleChange} name=\"right\" value={right}>\r\n                    <option value=\"0.0\">0.0</option>\r\n                    <option value={min}>{min}</option>\r\n                    <option value={max}>{max}</option>\r\n                </select>\r\n            </label>\r\n            <label className=\"flex-column\">\r\n                <span>Снизу</span>\r\n                <select onChange={this.handleChange} name=\"bot\" value={bot}>\r\n                    <option value=\"0.0\">0.0</option>\r\n                    <option value={min}>{min}</option>\r\n                    <option value={max}>{max}</option>\r\n                </select>\r\n            </label>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport {EdgeOptions};\r\n\r\nfunction Edge(props){\r\n    let {set,m} = props;\r\n    let length = 100;\r\n    let lx = m - 10;\r\n    let ly = m + set.height + 10;\r\n    let rx = m + set.width + 10;\r\n    return(\r\n        <>\r\n        <path d={`M ${lx} ${ly} v -${length}`} stroke=\"brown\" strokeDasharray=\"15,10\" strokeWidth=\"3\" fill=\"transparent\" />\r\n        <text fontSize=\"150%\" x={lx-45} y={ly-25} fill=\"brown\">{set.edge.left}</text>\r\n        <path d={`M ${lx} ${ly} h ${length}`} stroke=\"brown\" strokeDasharray=\"15,10\" strokeWidth=\"3\" fill=\"transparent\" />\r\n        <text fontSize=\"150%\" x={lx+30} y={ly+25} fill=\"brown\">{set.edge.bot}</text>\r\n\r\n        <path d={`M ${rx} ${lx} v ${length}`} stroke=\"brown\" strokeDasharray=\"15,10\" strokeWidth=\"3\" fill=\"transparent\" />\r\n        <text fontSize=\"150%\" x={rx-60} y={lx-10} fill=\"brown\">{set.edge.top}</text>\r\n        <path d={`M ${rx} ${lx} h -${length}`} stroke=\"brown\" strokeDasharray=\"15,10\" strokeWidth=\"3\" fill=\"transparent\" />\r\n        <text fontSize=\"150%\" x={rx+5} y={lx+50} fill=\"brown\">{set.edge.right}</text>\r\n        </>\r\n    );\r\n}\r\nexport {Edge};","import React from 'react';\r\nimport '../App.css';\r\n\r\nfunction getListCount(set,o){\r\n    let listS = o.SHEET_WIDTH*o.SHEET_LENGHT*o.SHEET_FILLING_AREA;\r\n    let S = 0;\r\n    let listCount = set.size > 0 ? 1 : 0;\r\n    for (let detail of set.values()) {\r\n        let width = detail.width;\r\n        let height = detail.height;\r\n        S += width*height; // Считаем площадь детали по чистым размерам\r\n        S > listS*listCount && listCount++;\r\n    }\r\n    return listCount;\r\n}\r\n\r\nfunction Summary(props){\r\n\r\n    let set = props.set;\r\n    let o = props.options;\r\n    let summaryOut = [];\r\n    let summary = {\r\n        'Материал': o.SHEET_NAME,\r\n        'Размер': `${o.SHEET_WIDTH}мм x ${o.SHEET_LENGHT}мм x ${o.SHEET_DEPTH}мм`,\r\n        'Листов в раскрое': getListCount(set,o),\r\n        'Цена за лист': `${o.SHEET_PRICE} руб.`,\r\n        'Всего деталей': set.size,\r\n    }\r\n\r\n    for(let key in summary){\r\n        summaryOut.push(<SummItem key={key} title={key} value={summary[key]} />);\r\n    }\r\n    \r\n    return(\r\n        <div id=\"summary\">\r\n            {summaryOut}\r\n            <div className=\"summ-item\">\r\n                <span><b>Примерная стоимость:</b></span>\r\n                <span><b>{summ(set,o,true)}</b></span>\r\n            </div>\r\n            <MoreOrderDetails set={set} o={o} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport {Summary};\r\n\r\nclass MoreOrderDetails extends React.Component{\r\n\r\n    state = {\r\n        open: false,\r\n    }\r\n\r\n    render(){\r\n        if(this.state.open)\r\n            return(\r\n                <div className=\"summ-item more\">\r\n                    <span onClick={() => this.setState({open:false})} className=\"action-link red w100p\"><b>Свернуть</b></span>\r\n                    {summ(this.props.set, this.props.o)}\r\n                </div>\r\n            );\r\n        else\r\n            return(\r\n                <div className=\"summ-item\">\r\n                    <span onClick={() => this.setState({open:true})} className=\"action-link red\"><b>Подробнее о расчёте</b></span>\r\n                </div>\r\n            );\r\n    }\r\n}\r\n\r\nfunction SummItem(props){\r\n\r\n    return(\r\n        <div className=\"summ-item\">\r\n            <span>{props.title}: </span>\r\n            <span>{props.value}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction summ(set,o,final=false){\r\n    let listS = o.SHEET_WIDTH*o.SHEET_LENGHT*o.SHEET_FILLING_AREA;\r\n    let S = 0;\r\n    let listCount = set.size > 0 ? 1 : 0;\r\n    let edge = {sm:0, lg:0}\r\n    let angle = 0;\r\n    let groove = 0;\r\n    let loops = 0;\r\n    for (let detail of set.values()) {\r\n        let width = detail.width;\r\n        let height = detail.height;\r\n        S += width*height; // Считаем площадь детали по чистым размерам\r\n        S > listS*listCount && listCount++; // Если не хватает площади листа, добавляем лист\r\n        for(let edgeSide in detail.edge){ // Кромление\r\n            let edgeSize = detail.edge[edgeSide];\r\n            if( edgeSize > 0 && edgeSize < 1){\r\n                edgeSide === 'left' || edgeSide === 'right' ? edge.sm += height : edge.sm += width;\r\n            }\r\n            else if(edgeSize > 0 && edgeSize > 2){\r\n                edgeSide === 'left' || edgeSide === 'right' ? edge.lg += height : edge.lg += width;\r\n            }\r\n        }\r\n        // Углы\r\n        if(detail.lt.x > 0 || detail.rt.x > 0 || detail.rb.x > 0 || detail.lb.x > 0)\r\n            angle++;\r\n        // Петли\r\n        if(detail.loops && detail.loops.side !== 'none')\r\n            loops += detail.loops.count;\r\n        // Пазы\r\n        if(detail.groove)\r\n            groove++;\r\n        \r\n    }\r\n    let edgeSM = edge.sm*o.EDGE_MULTIPLICATOR/1000*Math.abs(o.PRICE_EDGE_04);\r\n    let edgeLG = edge.lg*o.EDGE_MULTIPLICATOR/1000*Math.abs(o.PRICE_EDGE_02);\r\n    let edgeSumm = Math.round(edgeSM+edgeLG+((edge.sm+edge.lg)*o.EDGE_MULTIPLICATOR/1000*Math.abs(o.PRICE_EDGING)));\r\n    \r\n    let material = listCount*o.SHEET_PRICE;\r\n    let work = listCount*o.PRICE_SHEET_CUTTING;\r\n    let angles = angle*Math.abs(o.PRICE_CURVATURE);\r\n    let finalLoops = loops*Math.abs(o.PRICE_LOOP);\r\n    let finalGrooves = groove*Math.abs(o.PRICE_GROOVE);\r\n    let pack = listCount> 0 ? 200 : 0;\r\n\r\n    if(final){\r\n        let finalSumm = material+work+edgeSumm+angles+finalLoops+finalGrooves+pack;\r\n        return finalSumm + ' руб.';\r\n    }\r\n    return(\r\n        <table className=\"w100p\">\r\n            <tbody>\r\n                <tr><td>Материал</td><td>{material}</td></tr>\r\n                <tr><td>Рез</td><td>{work}</td></tr>\r\n                <tr><td>Кромление</td><td>{edgeSumm}</td></tr>\r\n                <tr><td>Криволинейность</td><td>{angles}</td></tr>\r\n                <tr><td>Петли</td><td>{finalLoops}</td></tr>\r\n                <tr><td>Пазы</td><td>{finalGrooves}</td></tr>\r\n                <tr><td>Упаковка</td><td>{pack}</td></tr>\r\n            </tbody>\r\n        </table>\r\n    );\r\n}","import React from 'react';\r\nimport '../App.css';\r\nimport {Summary} from './summary';\r\n\r\nclass Checkout extends React.Component{\r\n\r\n    state = {}\r\n\r\n    setRequest = (e) => {\r\n        e.preventDefault()\r\n        let json = createRequestData(this.props.data, this.state);\r\n        let svgs = this.props.svgs;\r\n        let url = this.props.data.importOptions.REQUEST_URL;\r\n        let formData = new FormData();\r\n        formData.append('order', json);\r\n        formData.append('svg', JSON.stringify(svgs));\r\n        fetch(url, { method: 'POST', body: formData })\r\n            .then(\r\n                (res) => {\r\n                    console.log(res);\r\n                },\r\n                (error) => {\r\n                    console.log(error);\r\n                }\r\n            )\r\n    }\r\n\r\n    heandleChange = (e) => {\r\n        let target = e.target;\r\n        let fieldName = target.name;\r\n        const value = target.type === 'checkbox' ? target.checked : target.value;\r\n\r\n        this.setState({[fieldName]: value});\r\n    }\r\n\r\n    render(){\r\n        const data = this.props.data;\r\n        return(\r\n            <>\r\n            <Summary set={data.details} options={data.importOptions} />\r\n            <h4 className=\"tac\">Заполните форму ниже</h4>\r\n            <form onSubmit={this.setRequest} id=\"checkoutForm\">\r\n                <fieldset className=\"flex w100p\">\r\n                    <legend>Ваши данные</legend>\r\n                    <label className=\"\">\r\n                        <input type=\"text\" name=\"username\" required defaultValue={this.state.username} placeholder=\"ФИО\" onChange={this.heandleChange} />\r\n                    </label>\r\n                    <label className=\"\">\r\n                        <input type=\"phone\" name=\"userphone\" required defaultValue={this.state.userphone} placeholder=\"Телефон\" onChange={this.heandleChange} />\r\n                    </label>\r\n                    <label className=\"\">\r\n                        <input type=\"email\" name=\"useremail\" required defaultValue={this.state.useremail} placeholder=\"Ваш email\" onChange={this.heandleChange} />\r\n                    </label>\r\n                    <label className=\"\">\r\n                        <textarea name=\"usercomment\" defaultValue={this.state.usercomment} placeholder=\"Комментарий к заказу\" onChange={this.heandleChange}></textarea>\r\n                    </label>\r\n                </fieldset>\r\n                <fieldset className=\"flex w100p\">\r\n                    <legend>Дополнительно</legend>\r\n                    <label className=\"flex-center\">\r\n                        <span className=\"fons12\">Срочный распил</span>\r\n                        <input type=\"checkbox\" name=\"faster\" onChange={this.heandleChange} />\r\n                    </label>\r\n                    <label className=\"flex-center\">\r\n                        <span className=\"fons12\">Упаковка в плёнку</span>\r\n                        <input type=\"checkbox\" name=\"inbox\" onChange={this.heandleChange} />\r\n                    </label>\r\n                    <label className=\"flex-center\">\r\n                        <span className=\"fons12\">Упаковка на поддон</span>\r\n                        <input type=\"checkbox\" name=\"poddon\" onChange={this.heandleChange} />\r\n                    </label>\r\n                </fieldset>\r\n                <fieldset className=\"w100p\">\r\n                    <legend>Доставка</legend>\r\n                    <label>\r\n                        <input type=\"text\" name=\"billingaddress\" defaultValue={this.state.billingaddress} placeholder=\"Адрес доставки\" onChange={this.heandleChange} />\r\n                    </label>\r\n                </fieldset>\r\n            </form>\r\n            <div id=\"calc-form-controlls-wrapper\">\r\n                <button className=\"btn\" onClick={this.props.toOrderFunc}>Назад к списку</button>\r\n                <button className=\"btn\" onClick={this.setRequest}>Создать заказ</button>\r\n            </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport {Checkout};\r\n\r\nfunction createRequestData(data,form){\r\n    let details = data.details;\r\n    let o = data.importOptions;\r\n\r\n    let order = [\r\n        ['ФИО',form.username],\r\n        ['Email',form.useremail],\r\n        ['Телефон',form.userphone],\r\n        ['Комментарий к заказу',form.usercomment],\r\n        ['Материал',o.SHEET_NAME],\r\n        ['Срочный распил',form.faster ? 'да' : '-'],\r\n        ['Упаковка в плёнку',form.inbox ? 'да' : '-'],\r\n        ['Упаковка в поддон',form.poddon ? 'да' : '-'],\r\n        ['Дата создания', new Date().toString()],\r\n        ['#######','#######'],\r\n        ['#######','<b>Список Деталей</b>'],\r\n        ['#','Комментарий','Ширина','Длина','Кол-во','Крома L1','Крома L2','Крома W1','Крома W2','Паз']\r\n    ]\r\n    let ind = 1;\r\n    details.forEach((d,key) => {\r\n        let row = [\r\n            `#${ind} ${key}`,\r\n            d.title,\r\n            d.nominalwidth,\r\n            d.nominalheight,\r\n            d.count,\r\n            d.edge.left,d.edge.right,d.edge.top,d.edge.bot,\r\n            d.groove,    \r\n        ];\r\n        order.push(row);\r\n        ind++;\r\n    })\r\n    return JSON.stringify(order);\r\n}","import React from 'react';\nimport './App.css';\nimport {LoopsOptions, Loops} from './components/loops';\nimport {GrooveOptions, Groove} from './components/groove';\nimport {EdgeOptions, Edge} from './components/edge';\nimport {Summary} from './components/summary';\nimport {Checkout} from './components/checkout';\n\nclass CopyDetail{\n  constructor(data){\n    this.detail = {\n      'title': data.title + ' (копия)',\n      'width': data.width,\n      'nominalwidth': data.width,\n      'minWidth': 60,\n      'maxWidth': window.importOptions.SHEET_WIDTH,\n      'height': data.height,\n      'nominalheight': data.height,\n      'minHeight': 60,\n      'maxHeight': window.importOptions.SHEET_LENGHT,\n      'count': 1,\n      'reserve':{\n        'left': data.reserve.left,\n        'top': data.reserve.top,\n        'right': data.reserve.right,\n        'bot': data.reserve.bot\n      },\n      'lt': {title:'Левый верхний' , prev:'lb', next:'rt', x:data.lt.x, y:data.lt.y, type:data.lt.type},\n      'rt': {title:'Правый верхний', prev:'lt', next:'rb', x:data.rt.x, y:data.rt.y, type:data.rt.type},\n      'rb': {title:'Правый нижний' , prev:'rt', next:'lb', x:data.rb.x, y:data.rb.y, type:data.rb.type},\n      'lb': {title:'Левый нижний'  , prev:'rb', next:'lt', x:data.lb.x, y:data.lb.y, type:data.lb.type},\n      'loops': data.loops,\n      'groove': data.groove,\n      'grooveIndent': 16,\n      'grooveWidth': 4,\n      'grooveDeep': 8,\n      'edge': data.edge,\n      'edgeMin': 0.4,\n      'edgeMax': 2.0,\n      'textureRotate': 0,\n      'svg': null,\n    }\n  }\n  create(){\n    return this.detail;\n  }\n}\n\nclass App extends React.Component {\n\n  state = {\n    stage: 'setorder',\n    details: new Map(),\n    importOptions: window.importOptions,\n    order: {\n      billing: {\n        userName: null,\n        userEmail: null,\n        userPhone: null,\n        userComment: null,\n      },\n      faster: null,\n      packaging: null,\n    },\n    activeDetail: null,\n  }\n\n  addNewDetailFunc = (e) => {\n    let newDetail = {\n      'title': \"Деталь #\" + (this.state.details.size + 1),\n      'width': 400,\n      'nominalwidth': 400,\n      'minWidth': 60,\n      'maxWidth': 2040,\n      'height': 600,\n      'nominalheight': 600,\n      'minHeight': 60,\n      'maxHeight': 2770,\n      'count': 1,\n      'reserve':{\n        'left': false,\n        'top': false,\n        'right': false,\n        'bot': false    \n      },\n      'lt': {title:'Левый верхний' , prev:'lb', next:'rt', x:0, y:0, type:'outside'},\n      'rt': {title:'Правый верхний', prev:'lt', next:'rb', x:0, y:0, type:'outside'},\n      'rb': {title:'Правый нижний' , prev:'rt', next:'lb', x:0, y:0, type:'outside'},\n      'lb': {title:'Левый нижний'  , prev:'rb', next:'lt', x:0, y:0, type:'outside'},\n      'loops': false,\n      'groove': false,\n      'grooveIndent': 16,\n      'grooveWidth': 4,\n      'grooveDeep': 8,\n      'edge':{\n        'left': 0.0,\n        'top': 0.0,\n        'right': 0.0,\n        'bot': 0.0    \n      },\n      'edgeMin': 0.4,\n      'edgeMax': 2.0,\n      'textureRotate': 0,\n      'svg': null,\n    }\n    let details = this.state.details;\n    let detailKey = 'D-' + new Date().getTime();\n    let activeDetail = detailKey;\n    details.set(detailKey, newDetail);\n    this.setState({details,activeDetail});\n\n    return detailKey;\n  }\n\n  inputOnChange = (angleTitle, obj, detailKey) => {\n    let details = this.state.details;\n    let detail = details.get(detailKey);\n\n    for(let key in obj){\n      detail[angleTitle][key] = obj[key];\n    }\n\n    details.set(detailKey,detail);\n    this.setState({details});\n  }\n\n  clearReserve = (set,item) => {\n    for(let side in set.reserve){\n      if(set.reserve[side] === item)\n        set.reserve[side] = false;\n    }\n    if(item === 'loops')\n      set.loops.side = false;\n    \n    return set;\n  }\n\n  handleSetDetailSize = (detailKey, side, value) => {\n    let details = this.state.details;\n    let detail = details.get(detailKey);\n\n    detail[side] = value;      \n    \n    if(side === 'width' && value > 500){\n      detail[side] = 500;\n    }\n    else if(side === 'width' && value < 150){\n      detail[side] = 150;\n    }\n    else if(side === 'height' && value > 700){\n      detail[side] = 700;\n    }\n    else if(side === 'height' && value < 150){\n      detail[side] = 150;\n    }\n\n    // Сбрасываем петли, если для них нет места\n    if(side === 'width' && value < 150){\n      if(detail.loops){\n        if(detail.loops.side === 'top' || detail.loops.side === 'bot'){\n          detail = this.clearReserve(detail,'loops');\n        }\n      }\n    }\n    if(side === 'height' && value < 150){\n      if(detail.loops){\n        if(detail.loops.side === 'left' || detail.loops.side === 'right'){\n          detail = this.clearReserve(detail,'loops');\n        }\n      }\n    }\n    \n    detail['nominal'+side] = value;\n    details.set(detailKey,detail);\n    this.setState({details});\n  }\n\n  loopChange = (loops, detailKey) => {\n    let details = this.state.details;\n    let detail = details.get(detailKey);\n    let width = detail.width;\n    let height = detail.height;\n\n    // Резервируем сторону детали, если она свободна\n    if(!detail.reserve[loops.side]){\n      for(let loopSide in detail.reserve){\n        if(detail.reserve[loopSide] === 'loops')\n          detail.reserve[loopSide] = false;\n      }\n      detail.reserve[loops.side] = 'loops';\n    }\n    \n    // Здесь пересчитываем расположение последней петли, \n    // если оно дальше границы детали\n    if(loops.side === 'left' || loops.side === 'right'){\n      if(loops.after > height){\n        loops.after = height - 100;\n      }\n    }\n    else{\n      if(loops.after > width){\n        loops.after = width - 100;\n      }\n    }\n    // Перезаписываем объект детали с новыми данными петель\n    detail.loops = loops;\n    details.set(detailKey,detail);\n    this.setState({details});\n  }\n\n  grooveChange = (side, detailKey) => {\n    let details = this.state.details;\n    let detail = details.get(detailKey);\n\n    // Резервируем сторону детали, если она свободна\n    if(!detail.reserve[side]){\n      for(let grooveSide in detail.reserve){\n        if(detail.reserve[grooveSide] === 'groove')\n          detail.reserve[grooveSide] = false;\n      }\n      if(side !== 'none'){\n        detail.reserve[side] = 'groove';\n        detail.groove = side;\n      }\n      else{\n        detail.groove = false;\n      }\n    }\n\n    details.set(detailKey,detail);\n    this.setState({details});\n  }\n\n  edgeChange = (edge,detailKey) => {\n    let details = this.state.details;\n    let detail = details.get(detailKey);\n    detail.edge = edge;\n    details.set(detailKey,detail);\n    this.setState({details});\n  }\n\n  changeDetailOptions = (e) => {\n    let target = e.target;\n    let activeDetail = target.closest('.detail').dataset.key;\n    let action = target.dataset.action;\n    let details = this.state.details;\n    if(action === 'remove'){\n      let confirm = window.confirm('Удалить деталь? Это действие нельзя отменить.');\n      if(confirm){\n        details.delete(activeDetail);\n        this.setState({details});\n      }\n      return;\n    }\n    if(action === 'copy'){\n      let d = new CopyDetail(details.get(activeDetail));\n      let newDetail = d.create();\n      let detailKey = 'D-' + new Date().getTime();\n      activeDetail = detailKey;\n      details.set(detailKey, newDetail);\n      this.setState({details,activeDetail}, this.forceUpdate());\n    }\n    if(action === 'close'){\n      this.setState({activeDetail: null});\n      return;\n    }\n    if(action === 'rotate'){\n      let detail = details.get(this.state.activeDetail);\n      detail.textureRotate = detail.textureRotate > 0 ? 0 : 90;\n      details.set(activeDetail,detail);\n      this.setState({details});\n      return;\n    }\n    this.setState({activeDetail});\n  }\n\n  toCheckoutFunc = () => {\n    this.saveSVG();\n    this.setState({stage: 'checkout'});\n  }\n  toOrder = () => {\n    this.setState({stage: 'setorder'});\n  }\n\n  saveSVG = () => {\n    let svgsDOM = document.querySelectorAll('svg');\n    let svgs = new Object();\n    svgsDOM.forEach((el,ind,arr) => {\n      let key = el.id;\n      svgs[key] = arr[ind].outerHTML;\n    })\n    this.svgs = svgs;\n  }\n  \n  render(){\n    let stage = this.state.stage === 'checkout' ? true : false;\n    let hasDetails = this.state.details.size > 0 ? false: true;\n    \n    if(stage)\n      return(\n      <>\n      <Checkout data={this.state} toOrderFunc={this.toOrder} svgs={this.svgs} />\n      <div className=\"copyright\">\n        Приложение разработано в интернет-агентстве <a rel=\"noreferrer\" target=\"_blank\" href=\"https://alpha-max.ru\">Альфамакс</a>\n      </div>\n      </>\n      )\n\n    return (\n      <>\n      <Summary set={this.state.details} options={this.state.importOptions} />\n      {this.state.details.size > 2 && \n      <FormControls isDisabled={hasDetails} addNewDetailFunc={this.addNewDetailFunc} toCheckoutFunc={this.toCheckoutFunc} />}\n      <DetailsList\n        activeDetail={this.state.activeDetail} \n        changeDetailOptions={this.changeDetailOptions}\n        saveSVGfunc = {this.saveSVG}\n        list={this.state.details}\n        loopF={this.loopChange} \n        grooveF={this.grooveChange} \n        edgeF={this.edgeChange}\n        f={this.inputOnChange} \n        ff={this.handleSetDetailSize} />\n      <FormControls isDisabled={hasDetails} addNewDetailFunc={this.addNewDetailFunc} toCheckoutFunc={this.toCheckoutFunc} />\n      <div className=\"copyright\">\n        Приложение разработано в интернет-агентстве <a rel=\"noreferrer\" target=\"_blank\" href=\"https://alpha-max.ru\">Альфамакс</a>\n      </div>\n      </>\n    );\n  }\n}\nexport default App;\n\nclass DetailsList extends React.Component{\n  state = {}\n\n  render(){\n    let list = [];\n    let set = this.props.f;\n    let setSizeF = this.props.ff;\n    let loopF = this.props.loopF;\n    let grooveF = this.props.grooveF;\n    let edgeF = this.props.edgeF;\n    let activeKey = this.props.activeDetail;\n    let saveSVG = this.props.saveSVGfunc;\n    let changeDetailOptions = this.props.changeDetailOptions;\n    this.props.list.forEach(function(value,key) {\n      list.push( <Detail \n        activeKey={activeKey === key ? 1 : 0}\n        changeDetailOptions={changeDetailOptions}\n        saveSVGfunc={saveSVG}\n        ff={setSizeF} \n        f={set} \n        loopF={loopF} \n        grooveF={grooveF}\n        edgeF={edgeF} \n        key={key} \n        dkey={key} \n        value={value} /> );\n    });\n    return(\n      <>\n      <h2>Список деталей</h2>\n      {list.length > 0 ? list : 'Список пуст'}\n      </>\n    );\n  }\n}\n\nclass Detail extends React.Component{\n  state = {}\n\n  handleSetSize = (e) => {\n    let fieldName = e.target.name;\n    let min = e.target.min;\n    let max = e.target.max;\n    let value = +e.target.value;\n    let key = this.props.dkey;\n\n    if(value < min || value > max)\n      e.target.classList.add('error')\n      if(value > max){\n        value = max;\n        e.target.classList.remove('error')\n      }\n    else\n      e.target.classList.remove('error')\n\n    this.props.ff(key,fieldName,value);\n  }\n  handleSetTitle = (e) => {\n    let fieldName = e.target.name;\n    let value = e.target.value;\n    let key = this.props.dkey;\n\n    this.props.ff(key,fieldName,value);\n  }\n\n  render(){\n    let set = this.props.value;\n    let o = window.importOptions;\n    if(this.props.activeKey === 0){\n      return(\n        <div className=\"detail not-active\" data-key={this.props.dkey}>\n          <div className=\"detail-settings w100p\">\n            <div className=\"flex-nowrap\">\n              <fieldset id=\"detail-size\" className=\"flex\">\n                <legend>Размеры</legend>\n                <label className=\"w100p\">\n                  <input onChange={this.handleSetTitle} type=\"text\" name=\"title\" placeholder=\"Комментарий\" value={set.title} />\n                </label>\n                <label className=\"flex-column\">\n                  <span>Ширина, мм</span>\n                  <input onChange={this.handleSetSize} type=\"number\" name=\"width\" min=\"60\" max={o.SHEET_WIDTH} value={set.nominalwidth} />\n                </label>\n                <label className=\"flex-column\">\n                  <span>Длина, мм</span>\n                  <input onChange={this.handleSetSize} type=\"number\" name=\"height\" min=\"60\" max={o.SHEET_LENGHT} value={set.nominalheight} />\n                </label>\n                <label className=\"flex-column\">\n                  <span>Кол-во, шт</span>\n                  <input onChange={this.handleSetSize} type=\"number\" name=\"count\" min=\"1\" max=\"1000\" value={set.count} />\n                </label>\n              </fieldset>\n              <fieldset className=\"detail-ext-options\">\n                <legend>Опции</legend>\n                <button data-action=\"change\" onClick={this.props.changeDetailOptions} className=\"btn\">Редактировать</button>\n                <button data-action=\"copy\" onClick={this.props.changeDetailOptions} className=\"btn\">Копировать</button>\n              </fieldset>\n            </div>\n          </div>\n          <div className=\"detail-plan\">\n            <DetailPlan id={this.props.dkey} set={this.props.value} saveSVGfunc={this.props.saveSVGfunc} />\n            <button className=\"remove-detail-btn\" data-action=\"remove\" onClick={this.props.changeDetailOptions} title=\"Удалить деталь\"></button>\n          </div>\n        </div>\n      )\n    }\n    return(\n      <div className=\"detail active\" data-key={this.props.dkey}>\n        <div className=\"detail-settings w100p\">\n          <div className=\"flex-nowrap\">\n            <fieldset id=\"detail-size\" className=\"flex\">\n              <legend>Размеры</legend>\n              <label className=\"w100p\">\n                <input onChange={this.handleSetSize} type=\"text\" name=\"title\" placeholder=\"Комментарий\" value={set.title} />\n              </label>\n              <label className=\"flex-column\">\n                <span>Ширина, мм</span>\n                <input onChange={this.handleSetSize} type=\"number\" name=\"width\" min=\"60\" max={o.SHEET_WIDTH} value={set.nominalwidth} />\n              </label>\n              <label className=\"flex-column\">\n                <span>Длина, мм</span>\n                <input onChange={this.handleSetSize} type=\"number\" name=\"height\" min=\"60\" max={o.SHEET_LENGHT} value={set.nominalheight} />\n              </label>\n              <label className=\"flex-column\">\n                <span>Кол-во, шт</span>\n                <input onChange={this.handleSetSize} type=\"number\" name=\"count\"  min=\"1\" max=\"1000\" value={set.count} />\n              </label>\n            </fieldset>\n\n            <fieldset id=\"edge\" className=\"flex\">\n              <legend>Кромка</legend>\n              <EdgeOptions func={this.props.edgeF} set={this.props.value} />\n            </fieldset>\n            \n            <div className=\"detail-ext-options\">\n              <button data-action=\"close\" onClick={this.props.changeDetailOptions} className=\"btn\">Свернуть</button>\n              <button data-action=\"copy\" onClick={this.props.changeDetailOptions} className=\"btn\">Копировать</button>\n              <button data-action=\"rotate\" onClick={this.props.changeDetailOptions} className=\"btn\">Повернуть текстуру</button>\n            </div>\n          </div>\n\n          <fieldset id=\"angles\" className=\"w100p\">\n            <legend>Углы</legend>\n            <AngleOptions angleName='lt' func={this.props.f} set={this.props.value} />\n            <AngleOptions angleName='rt' func={this.props.f} set={this.props.value} />\n            <AngleOptions angleName='rb' func={this.props.f} set={this.props.value} />\n            <AngleOptions angleName='lb' func={this.props.f} set={this.props.value} />\n          </fieldset>\n\n          <fieldset id=\"loops\" className={set.loops && set.loops.side !== 'none' ? 'flex w100p' : 'flex w50p'}>\n            <legend>Петли</legend>\n            <LoopsOptions func={this.props.loopF} set={this.props.value} />\n          </fieldset>\n\n          <fieldset id=\"groove\" className=\"flex w50p\">\n            <legend>Паз</legend>\n            <GrooveOptions func={this.props.grooveF} set={this.props.value} />\n          </fieldset>\n\n        </div>\n        <div className=\"detail-plan\">\n          <DetailPlan id={this.props.dkey} set={this.props.value} />\n          <button className=\"remove-detail-btn\" data-action=\"remove\" onClick={this.props.changeDetailOptions} title=\"Удалить деталь\"></button>\n        </div>\n      </div>\n    )\n  }\n}\n\nclass AngleOptions extends React.Component{\n  state = {\n    active: false,\n    type: 'outside',\n    send: true,\n    x: 30,\n    y: 30,\n  }\n\n  handleInputChange = (event) => {\n    const target = event.target;\n    const value = target.type === 'checkbox' ? target.checked : Math.abs(target.value);\n    const name = target.name;\n\n    if(target.type === 'range' && this.state.send){\n      const breakPoint = target.dataset.break;\n      this.setState({\n        x: value <= breakPoint ? value : breakPoint,\n        y: value,\n      })\n    }\n    else{\n      this.setState({\n        [name]: value\n      });\n    }\n    \n    this.props.func(\n      this.props.angleName,\n      { // Отправляем данные угла назад\n        x:this.state.x,\n        y:this.state.y,\n        type:this.state.type,\n        title:this.props.set[this.props.angleName].title,\n        next:this.props.set[this.props.angleName].next,\n        prev:this.props.set[this.props.angleName].prev\n      },\n      target.closest('.detail').dataset.key\n    );\n  }\n\n  handleTypeChange = (e) => {\n    let type = e.target.name;\n    this.setState(function(state, props){\n      this.props.func( // Отправляем данные угла назад\n        props.angleName,\n        {\n          x:state.x,\n          y:state.y,\n          type:type,\n          title:props.set[props.angleName].title,\n          next:props.set[props.angleName].next,\n          prev:props.set[props.angleName].prev,\n        },\n        e.target.closest('.detail').dataset.key\n      );\n      return {type: type};\n    });\n  }\n\n  handleInputActive = (e) => {\n    const value = e.target.checked;\n    this.setState({\n      active: value\n    })\n    this.props.func(\n      this.props.angleName,\n      { // Отправляем данные угла назад\n        x: value ? this.state.x : 0,\n        y: value ? this.state.y : 0,\n        type:this.state.type,\n        title:this.props.set[this.props.angleName].title,\n        next:this.props.set[this.props.angleName].next,\n        prev:this.props.set[this.props.angleName].prev\n      },\n      e.target.closest('.detail').dataset.key\n    );\n  }\n\n  render(){\n    let set = this.props.set;\n    let next = set[set[this.props.angleName].next];\n    let prev = set[set[this.props.angleName].prev];\n    let maxX = 101;\n    let maxY = 101;\n    \n    if(this.props.angleName === 'lt'){\n      maxY = +set.width - next.y;\n      maxX = +set.height - prev.x;\n    }\n    else if(this.props.angleName === 'rt'){\n      maxY = +set.width - prev.y;\n      maxX = +set.height - next.x;\n    }\n    else if(this.props.angleName === 'rb'){\n      maxY = +set.width - next.y;\n      maxX = +set.height - prev.x;\n    }\n    else{\n      maxY = +set.width - prev.y;\n      maxX = +set.height - next.x;\n    }\n\n    let input = <span><input onChange={this.handleInputActive} type=\"checkbox\" name=\"active\" checked={this.state.active} /></span>;\n    // Если сторона зарезервирована\n    let closedAngle = [];\n    let reserveL = set.reserve.left;\n    let reserveT = set.reserve.top;\n    let reserveR = set.reserve.right;\n    let reserveB = set.reserve.bot;\n    let motive = '';\n    if( reserveL === 'loops' || reserveL === 'groove'){\n      closedAngle = ['lb','lt'];\n      reserveL === \"loops\" ? motive = 'петлями' : motive = 'пазом';\n    }\n    else if(reserveT === 'loops' || reserveT === 'groove'){\n      closedAngle = ['lt','rt'];\n      reserveT === \"loops\" ? motive = 'петлями' : motive = 'пазом';\n    }\n    else if(reserveR === 'loops' || reserveR === 'groove'){\n      closedAngle = ['rt','rb'];\n      reserveR === \"loops\" ? motive = 'петлями' : motive = 'пазом';\n    }\n    else if(reserveB === 'loops' || reserveB === 'groove'){\n      closedAngle = ['rb','lb'];\n      reserveB === \"loops\" ? motive = 'петлями' : motive = 'пазом';\n    }\n\n    closedAngle.forEach((el)=>{\n      if(this.props.angleName === el)\n        input = <span className=\"reserve-notice red\">Сторона занята {motive}</span>;\n    })\n\n    // Закрытое положение\n    if(!this.state.active){\n      return(\n        <div className=\"angle-options-wrapper\">\n          <div className=\"angle-options-type w100p\">\n            <label className=\"angle-title-wrapper\">\n              <span className={`angle-title ${this.props.angleName}`}>{set[this.props.angleName].title}</span>\n              {input}\n            </label>\n          </div>\n        </div>\n      )\n    }\n    // Открытое положение\n    return(\n      <div className={`angle-options-wrapper ${this.state.active && 'active'}`}>\n        <div className=\"angle-options-type w100p\">\n          <label className=\"angle-title-wrapper\">\n            <span className={`angle-title ${this.props.angleName}`}>{set[this.props.angleName].title}</span>\n            <span><input onChange={this.handleInputActive} type=\"checkbox\" name=\"active\" checked={this.state.active} /></span>\n          </label>\n          <button onClick={this.handleTypeChange} name=\"outside\" className=\"angle-type__outside ml-a\" data-active={this.state.type === 'outside' && 'active' }>Наружный</button>\n          <button onClick={this.handleTypeChange} name=\"linear\" className=\"angle-type__linear\" data-active={this.state.type === 'linear' && 'active' }>Прямой</button>\n          <button onClick={this.handleTypeChange} name=\"inside\" className=\"angle-type__inside\" data-active={this.state.type === 'inside' && 'active' }>Внутренний</button>\n        </div>\n        <label className=\"w100p pt10\">\n          X <input onChange={this.handleInputChange} type=\"range\" name=\"y\" min=\"30\" max={maxY} data-break={maxX} step=\"1\" value={this.state.y} />\n            <span><b>{this.state.y}</b>&nbsp;мм</span>\n        </label>\n        <label className=\"switch\">\n          <input onChange={this.handleInputChange} name=\"send\" type=\"checkbox\" checked={this.state.send} />\n        </label>\n        <label className=\"w100p\">\n          Y <input onChange={this.handleInputChange} type=\"range\" name=\"x\" min=\"30\" max={maxX} step=\"1\" value={this.state.x} disabled={this.state.send} />\n            <span><b>{this.state.x}</b>&nbsp;мм</span>\n        </label>\n      </div>\n    );\n  }\n}\n\nfunction correctSize(side,min,max){\n  let m = Math.abs(side);\n  if(m < min)\n    return min;\n  else if(m > max)\n    return max;\n  else\n    return m;\n}\n\nfunction DetailPlan(props){\n  let set = props.set;\n  // Раздаём значения\n  let {width,nominalwidth,minWidth,maxWidth,height,nominalheight,minHeight,maxHeight,lt,rt,lb,rb} = set;\n  let m = 70;\n\n  width = correctSize(width,minWidth,maxWidth);\n  height = correctSize(height,minHeight,maxHeight);\n\n  // Пробуем сохранить пропорции\n  if(nominalwidth >= 500)\n    height = set.height = Math.round(500/((Math.round(nominalwidth/nominalheight*10,-1)/10)));\n  if(height < 200)\n    height = set.height = 200;\n  \n  let ltA   = `M ${m} ${(Math.abs(lt.x) + m)} Q ${angleControlDotLT(m,lt)} ${(Math.abs(lt.y) + m)} ${m}`;\n  let top   = ` L ${(width-rt.y + m)} ${m}`;\n  let rtA   = ` Q ${angleControlDotRT(m,rt,set)} ${width+m} ${+rt.x + m}`;\n  let right = ` L ${(width + m)} ${(height - rb.x + m)}`;\n  let rbA   = ` Q ${angleControlDotRB(m,rb,set)} ${(width - rb.y + m)} ${(height + m)}`;\n  let bot   = ` L ${(+lb.y+m)} ${(height + m)}`;\n  let lbA   = ` Q ${angleControlDotLB(m,lb,set)} ${m} ${height-lb.x+m}`;\n\n  let bgWidth = 200*3;\n  let bgHeight = 133*3;\n  let bgVector = set.textureRotate;\n\n  let svg = \n    <svg id={props.id} xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" viewBox={\"0 0 \" + (width+m*2) +' '+ (height+m*2)}>\n      {/* ФОН */}\n      <defs>\n        <pattern \n          id=\"bg\" \n          patternUnits=\"userSpaceOnUse\" \n          preserveAspectRatio=\"none\" \n          patternTransform={`rotate(${bgVector}, ${width/2}, ${height/2})`}\n          width={bgWidth}\n          height={bgHeight}>\n          <image \n            href={'http://rondo.96min.ru' + window.importOptions.SHEET_PICTURE_URL} \n            x={0} y={0} \n            width={bgWidth} \n            height={bgHeight} />\n        </pattern>\n      </defs>\n      {/* Деталь */}\n      <path d={ltA + top + rtA + right + rbA + bot + lbA + ' z'} stroke=\"#333333\" strokeWidth=\"3\" strokeLinejoin=\"miter\" fill=\"url(#bg)\" opacity=\"0.7\"/>\n      {/* Размеры углов */}\n      <path d={`M ${m} ${Math.abs(lt.x) + m} h ${lt.y} v -${lt.x}`}        stroke=\"red\" strokeDasharray=\"10\" fill=\"transparent\"/>\n      <path d={`M ${width+m} ${Math.abs(rt.x) + m} h -${rt.y} v -${rt.x}`} stroke=\"red\" strokeDasharray=\"10\" fill=\"transparent\"/>\n      <path d={`M ${width+m} ${height - rb.x + m} h -${rb.y} v ${rb.x}`}   stroke=\"red\" strokeDasharray=\"10\" fill=\"transparent\"/>\n      <path d={`M ${m} ${height - lb.x + m} h ${+lb.y} v ${+lb.x}`}        stroke=\"red\" strokeDasharray=\"10\" fill=\"transparent\"/>\n      {/* Размер детали */}\n      <text fontSize=\"150%\" x={(m+width)/2} y={20}>{nominalwidth}мм</text>\n      <text fontSize=\"150%\" transform={`rotate(-90,${20},${(m+height)/2})`} x={m/2-50} y={(m+height)/2}>{nominalheight}мм</text>\n      {/* Петли */} <Loops set={set} m={m} />\n      {/* Паз */} <Groove set={set} m={m} />\n      {/* Кромка */} <Edge set={set} m={m} />\n    </svg>;\n  return svg;\n}\nexport {DetailPlan};\n\nfunction angleControlDotLT(m,angle){\n  if(angle.type === 'outside')\n    return `${m} ${m}`;\n  else if(angle.type === 'linear')\n    return `${angle.x/2 + m} ${angle.y/2 + m}`;\n  else if(angle.type === 'inside')\n    return `${+angle.x + m} ${+angle.y + m}`;\n}\nfunction angleControlDotRT(m,angle,set){\n  if(angle.type === 'outside')\n    return `${(+set.width + m)} ${m}`;\n  else if(angle.type === 'linear')\n    return `${+set.width - angle.y/2 + m} ${angle.x/2 + m}`;\n  else if(angle.type === 'inside')\n    return `${+set.width - angle.y + m} ${+angle.x + m}`;\n}\nfunction angleControlDotRB(m,angle,set){\n  if(angle.type === 'outside')\n    return `${(+set.width + m)} ${+set.height + m}`;\n  else if(angle.type === 'linear')\n    return `${+set.width - angle.y/2 + m} ${+set.height - angle.x/2 + m}`;\n  else if(angle.type === 'inside')\n    return `${+set.width - angle.y + m} ${+set.height - angle.x + m}`;\n}\nfunction angleControlDotLB(m,angle,set){\n  if(angle.type === 'outside')\n    return `${m} ${+set.height + m}`;\n  else if(angle.type === 'linear')\n    return `${+angle.y/2 + m} ${+set.height - angle.x/2 + m}`;\n  else if(angle.type === 'inside')\n    return `${+angle.y + m} ${+set.height - angle.x + m}`;\n}\n\nfunction FormControls(props){\n  return(\n    <div id=\"calc-form-controlls-wrapper\">\n      <button className=\"btn\" onClick={props.addNewDetailFunc}>Добавить деталь</button>\n      <button className=\"btn\" disabled={props.isDisabled} onClick={props.toCheckoutFunc}>Перейти к оформлению</button>\n    </div>\n  );\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}