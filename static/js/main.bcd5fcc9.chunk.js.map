{"version":3,"sources":["components/loops.js","components/groove.js","components/edge.js","App.js","reportWebVitals.js","index.js"],"names":["LoopsOptions","state","side","count","before","after","minSpace","error","handleInputChange","e","fieldName","target","name","value","key","closest","dataset","steps","Math","round","setState","props","func","isFree","r","A1","A2","this","set","beforeMin","beforeMax","afterMax","width","height","afterMin","countMax","LTangle","lt","x","RTangle","rt","RBangle","rb","LBangle","lb","reserve","resL","left","resT","top","resR","right","resB","bot","className","onChange","defaultValue","disabled","type","min","max","step","React","Component","Loops","m","loops","indent","radius","undefined","circles","push","d","stroke","strokeDasharray","fill","Circle","cx","cy","i","circleCX","circleCY","line","numberX","numberY","number","fontSize","y","GrooveOptions","Groove","groove","grooveIndent","grooveWidth","grooveDeep","vector","size","strokeWidth","EdgeOptions","handleChange","lta","rta","rba","lba","newValue","edgeMin","edgeMax","Edge","length","lx","ly","rx","stroke-dasharray","edge","App","details","Map","addNewDetailFunc","Date","getTime","title","prev","next","inputOnChange","angleTitle","obj","detailKey","detail","get","handleSetDetailSize","loopChange","loopSide","grooveChange","grooveSide","edgeChange","list","loopF","grooveF","edgeF","f","ff","FormControls","DetailsList","setSizeF","forEach","dkey","Detail","handleSetSize","classList","add","remove","data-key","placeholder","id","angleName","DetailPlan","AngleOptions","active","send","event","checked","handleTypeChange","handleInputActive","maxX","maxY","input","closedAngle","reserveL","reserveT","reserveR","reserveB","motive","el","onClick","data-active","correctSize","abs","minWidth","maxWidth","minHeight","maxHeight","ltA","angle","angleControlDotLT","rtA","angleControlDotRT","rbA","angleControlDotRB","lbA","angleControlDotLB","xmlns","version","viewBox","strokeLinejoin","transform","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bcd5fcc9.chunk.js","sourcesContent":["import React from 'react';\r\nimport '../App.css';\r\n\r\n// ============================================ LOOPS\r\nclass LoopsOptions extends React.Component{\r\n    state = {\r\n      side: 'none',\r\n      count: 2,\r\n      before: 100,\r\n      after: 500,\r\n      minSpace: 50,\r\n      error: false,\r\n    }\r\n  \r\n    handleInputChange = (e) => {\r\n      let fieldName = e.target.name; // Поле формы\r\n      let value = e.target.value; // Значение формы\r\n      let key = e.target.closest('.detail').dataset.key; // Ключ детали\r\n      let steps = this.state.count - 1; // желаемое кол-во отрезков между первой и последней деталью\r\n      let step = Math.round((this.state.after-this.state.before)/steps, 1); // размер одного отрезка\r\n    //  Не позволяем добавлять больше петель, \r\n    //  чем это возможно при сохранении минимального расстояния между центрами петель,\r\n    //  обозначенного как minSpace, не путать с indent(отступ петли от края детали)\r\n      if(step >= this.state.minSpace){\r\n        this.setState({\r\n          [fieldName]: value,\r\n          error: false\r\n        }, () => {\r\n          this.props.func(this.state, key); // отправлем данные в Арр\r\n        })\r\n        \r\n      }\r\n      else{\r\n        this.setState({\r\n          [fieldName]: value,\r\n          error: true\r\n        });\r\n        \r\n      }\r\n    }\r\n\r\n    isFree = (r,A1,A2) => {\r\n        if(r === 'groove' || A1 || A2){\r\n            return true;\r\n        }\r\n        if(!r) return false;\r\n    }\r\n  \r\n    render(){\r\n        let {side,before,after,minSpace} = this.state;\r\n        let set = this.props.set;\r\n        let beforeMin = +minSpace;\r\n        let beforeMax = after - minSpace;\r\n        let afterMax = side === 'top' || side === 'bot' ? set.width - minSpace : set.height - minSpace;\r\n        let afterMin = +minSpace + +before;\r\n        let countMax = Math.round((after-before)/minSpace) + 1;\r\n        let LTangle = +set.lt.x === 0 ? false : true;\r\n        let RTangle = +set.rt.x === 0 ? false : true;\r\n        let RBangle = +set.rb.x === 0 ? false : true;\r\n        let LBangle = +set.lb.x === 0 ? false : true;\r\n        let r = set.reserve;\r\n        let resL = this.isFree(r.left,LTangle,LBangle);\r\n        let resT = this.isFree(r.top,LTangle,RTangle);\r\n        let resR = this.isFree(r.right,RTangle,RBangle);\r\n        let resB = this.isFree(r.bot,RBangle,LBangle);\r\n        \r\n        if(r.left==='groove' || r.top==='groove' || r.right==='groove' || r.bot==='groove'){\r\n            return(\r\n                <span className=\"fons12 red\">Петли несовместимы с пазами</span>\r\n            )\r\n        }\r\n\r\n        if(resL && resT && resR && resB){\r\n            return(\r\n                <span className=\"fons12 red\">Нет вариантов</span>\r\n            )\r\n        }\r\n\r\n        return(\r\n            <>\r\n            <label className=\"flex-column\">\r\n                <span>Сторона</span>\r\n                <select onChange={this.handleInputChange} name=\"side\" defaultValue=\"none\">\r\n                    <option value=\"none\">Нет</option>\r\n                    <option value=\"left\"  disabled={resL}>Слева{resL && ' (занято)'}</option>\r\n                    <option value=\"top\"   disabled={resT}>Сверху{resT && ' (занято)'}</option>\r\n                    <option value=\"right\" disabled={resR}>Справа{resR && ' (занято)'}</option>\r\n                    <option value=\"bot\"   disabled={resB}>Снизу{resB && ' (занято)'}</option>\r\n                </select>\r\n            </label>\r\n  \r\n            {this.state.side !== 'none' &&\r\n            <>\r\n            <label className=\"flex-column\">\r\n            <span>Кол-во, шт</span>\r\n            <input \r\n                className={this.state.error ? 'error' : ''}\r\n                onChange={this.handleInputChange} \r\n                name=\"count\" \r\n                type=\"number\"\r\n                min=\"2\"\r\n                max={countMax}\r\n                step=\"1\" \r\n                defaultValue=\"2\" />\r\n            </label>\r\n            <label className=\"flex-column w100p\">\r\n            <span>До первой петли, мм</span>\r\n            <input \r\n                onChange={this.handleInputChange} \r\n                name=\"before\" \r\n                type=\"range\"\r\n                min={beforeMin}\r\n                max={beforeMax}\r\n                step=\"1\" \r\n                defaultValue=\"100\" />\r\n            </label>\r\n            <label className=\"flex-column w100p\">\r\n            <span>До последней петли, мм</span>\r\n            <input \r\n                onChange={this.handleInputChange} \r\n                name=\"after\" \r\n                type=\"range\"\r\n                min={afterMin}\r\n                max={afterMax}\r\n                step=\"1\" \r\n                defaultValue=\"500\" />\r\n            </label>\r\n            </>\r\n            }\r\n            </>\r\n        );\r\n    }\r\n  }\r\n\r\nfunction Loops(props){\r\n    let set = props.set;\r\n    let m = props.m;\r\n    let loops = set.loops;\r\n    let indent = 25;\r\n    let radius = 35/2;\r\n\r\n    if(loops.side === undefined || loops.side === 'none') return('');\r\n  \r\n    let width = set.width;\r\n    let height = set.height;\r\n    let circles = [];\r\n\r\n    if(loops.side === 'left'){\r\n        circles.push(<path d={`M ${m+indent} ${m} v ${height}`} stroke=\"#72aee6\" strokeDasharray=\"10\" fill=\"transparent\"/>);\r\n        circles.push(<Circle key={'lbefore'} side={loops.side} cx={m+indent} cy={+loops.before+m} r={radius} m={m} />);\r\n        circles.push(<Circle key={'lafter'} side={loops.side} cx={m+indent} cy={+loops.after+m} r={radius} m={m} />);\r\n    }\r\n    else if(loops.side === 'top'){\r\n        circles.push(<path d={`M ${m} ${m+indent} h ${width}`} stroke=\"#72aee6\" strokeDasharray=\"10\" fill=\"transparent\"/>);\r\n        circles.push(<Circle key={'tbefore'} side={loops.side} cx={+loops.before+m} cy={m+indent} r={radius} m={m} />);\r\n        circles.push(<Circle key={'tafter'} side={loops.side} cx={+loops.after+m} cy={m+indent} r={radius} m={m} />);\r\n    }\r\n    else if(loops.side === 'right'){\r\n        circles.push(<path d={`M ${m+width-indent} ${m} v ${height}`} stroke=\"#72aee6\" strokeDasharray=\"10\" fill=\"transparent\"/>);\r\n        circles.push(<Circle key={'rbefore'} side={loops.side} cx={m+width-indent} cy={+loops.before+m} r={radius} m={m} />);\r\n        circles.push(<Circle key={'rafter'} side={loops.side} cx={m+width-indent} cy={+loops.after+m} r={radius} m={m} />);\r\n    }\r\n    else if(loops.side === 'bot'){\r\n        circles.push(<path d={`M ${m} ${height+m-indent} h ${width}`} stroke=\"#72aee6\" strokeDasharray=\"10\" fill=\"transparent\"/>);\r\n        circles.push(<Circle key={'bbefore'} side={loops.side} cx={+loops.before+m} cy={height+m-indent} r={radius} m={m} />);\r\n        circles.push(<Circle key={'bafter'} side={loops.side} cx={+loops.after+m} cy={height+m-indent} r={radius} m={m} />);\r\n    }\r\n        \r\n\r\n    if(loops.count > 2){\r\n        let steps = loops.count - 1;\r\n        let step = Math.round((loops.after-loops.before)/steps, 1);\r\n        for(let i = 1; i < steps; i++){\r\n            let circleCX = m+indent;\r\n            let circleCY = +loops.before+(step*i)+m;\r\n            if(loops.side === 'top'){\r\n                circleCY = m+indent;\r\n                circleCX = +loops.before+(step*i)+m;\r\n            }\r\n            else if(loops.side === 'right'){\r\n                circleCX = width+m-indent;\r\n                circleCY = +loops.before+(step*i)+m;\r\n            }\r\n            else if(loops.side === 'bot'){\r\n                circleCY = height+m-indent;\r\n                circleCX = +loops.before+(step*i)+m;\r\n            }\r\n            circles.push(    \r\n                <Circle \r\n                    key={`${circleCX}-${circleCY}-${i}`} \r\n                    cx={circleCX} \r\n                    cy={circleCY} \r\n                    r={radius} \r\n                    width={width} \r\n                    height={height} \r\n                    side={loops.side}\r\n                    m={m} />);\r\n        }\r\n    }  \r\n    return circles;\r\n}\r\n  \r\nfunction Circle(props){\r\n    let side = props.side;\r\n    let line = `M ${props.cx} ${props.cy} h ${props.r + 20}`;\r\n    let numberX = props.cx + 45;\r\n    let numberY = props.cy + 8;\r\n    let number = props.cy-props.m;\r\n    if(side === 'top'){\r\n        line = `M ${props.cx} ${props.cy} v ${props.r + 20}`;\r\n        numberX = props.cx - 23;\r\n        numberY = props.cy + 60;\r\n        number = props.cx - props.m;\r\n    }\r\n    else if(side === 'right'){\r\n        line = `M ${props.cx} ${props.cy} h -${props.r + 20}`;\r\n        numberX = props.cx - 90;\r\n        numberY = props.cy + 10;\r\n        number = props.cy-props.m;\r\n    }\r\n    else if(side === 'bot'){\r\n        line = `M ${props.cx} ${props.cy} v -${props.r + 20}`;\r\n        numberX = props.cx - 20;\r\n        numberY = props.cy - 50;\r\n        number = props.cx - props.m;\r\n    }\r\n    return (\r\n      <>\r\n      <circle cx={props.cx} cy={props.cy} r={props.r} stroke=\"#3b8ecc\" fill=\"#3b8ecc\" />\r\n      <path d={line}  stroke=\"#3b8ecc\" />\r\n      <text fontSize=\"150%\" x={numberX} y={numberY}>{number}</text>\r\n      </>\r\n    );\r\n}\r\n\r\nexport {LoopsOptions, Loops};","import React from 'react';\r\nimport '../App.css';\r\n\r\n// ============================================ GROOVE\r\nclass GrooveOptions extends React.Component{\r\n\r\n    handleInputChange = (e) => {\r\n        let fieldName = e.target.name; // Поле формы\r\n        let value = e.target.value; // Значение формы\r\n        let key = e.target.closest('.detail').dataset.key; // Ключ детали\r\n\r\n        this.setState({\r\n            [fieldName]: value,\r\n            error: false\r\n          }, () => {\r\n            this.props.func(this.state.side, key); // отправлем данные в Арр\r\n          }\r\n        )\r\n    }\r\n\r\n    isFree = (r,A1,A2) => {\r\n        if(r === 'loops' || A1 || A2){\r\n            return true;\r\n        }\r\n        if(!r) return false;\r\n    }\r\n\r\n    render(){\r\n        let set = this.props.set;\r\n        let LTangle = +set.lt.x === 0 ? false : true;\r\n        let RTangle = +set.rt.x === 0 ? false : true;\r\n        let RBangle = +set.rb.x === 0 ? false : true;\r\n        let LBangle = +set.lb.x === 0 ? false : true;\r\n        let r = set.reserve;\r\n        let resL = this.isFree(r.left,LTangle,LBangle);\r\n        let resT = this.isFree(r.top,LTangle,RTangle);\r\n        let resR = this.isFree(r.right,RTangle,RBangle);\r\n        let resB = this.isFree(r.bot,RBangle,LBangle);\r\n\r\n        if(r.left==='loops' || r.top==='loops' || r.right==='loops' || r.bot==='loops'){\r\n            return(\r\n                <span className=\"fons12 red\">Пазы несовместимы с петлями</span>\r\n            )\r\n        }\r\n\r\n        if(resL && resT && resR && resB){\r\n            return(\r\n                <span className=\"fons12 red\">Нет вариантов</span>\r\n            )\r\n        }\r\n\r\n        return(\r\n            <>\r\n            <label className=\"flex-column\">\r\n                <span>Сторона</span>\r\n                <select onChange={this.handleInputChange} name=\"side\" defaultValue=\"none\">\r\n                    <option value=\"none\">Нет</option>\r\n                    <option value=\"left\"  disabled={resL}>Слева{resL && ' (занято)'}</option>\r\n                    <option value=\"top\"   disabled={resT}>Сверху{resT && ' (занято)'}</option>\r\n                    <option value=\"right\" disabled={resR}>Справа{resR && ' (занято)'}</option>\r\n                    <option value=\"bot\"   disabled={resB}>Снизу{resB && ' (занято)'}</option>\r\n                </select>\r\n            </label>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport {GrooveOptions};\r\n\r\nfunction Groove(props){\r\n    let set = props.set;\r\n    let m = props.m;\r\n    let side = set.groove;\r\n    \r\n    if(!side) return('');\r\n    \r\n    let indent = set.grooveIndent;\r\n    let width = set.grooveWidth;\r\n    let deep = set.grooveDeep;\r\n    let x = m;\r\n    let y = m;\r\n    let vector = side === 'left' || side === 'right' ? 'v' : 'h';\r\n    let size = vector === 'h' ? set.width : set.height;\r\n    \r\n    if(side === 'left')\r\n        x = m + indent; size = size*-1;\r\n    if(side === 'top')\r\n        y = m + indent;\r\n    if(side === 'right')\r\n        x = m + +set.width - indent;\r\n    if(side === 'bot')\r\n        y = +set.height + m - indent; size = size*-1;\r\n\r\n    return <path d={`M ${x} ${y} ${vector} ${size}`} stroke=\"green\" strokeWidth={width} fill=\"transparent\"/>\r\n}\r\nexport {Groove};","import React from 'react';\r\nimport '../App.css';\r\n\r\n// ============================================ GROOVE\r\nclass EdgeOptions extends React.Component{\r\n\r\n    state = {\r\n        left: '0.0', top: '0.0', right: '0.0', bot: '0.0',\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        let set   = this.props.set;\r\n        let lta = set.lt.x > 0 ? true : false;\r\n        let rta = set.rt.x > 0 ? true : false;\r\n        let rba = set.rb.x > 0 ? true : false;\r\n        let lba = set.lb.x > 0 ? true : false;\r\n\r\n        let fieldName = e.target.name; // Поле формы\r\n        let value = e.target.value; // Значение формы\r\n        let key = e.target.closest('.detail').dataset.key; // Ключ детали\r\n        let newValue = {[fieldName]: value}\r\n\r\n        if(fieldName === 'left' && lta)\r\n            newValue.top = value;\r\n        else if(fieldName === 'left' && lba)\r\n            newValue.bot = value;\r\n        else if(fieldName === 'top' && lta)\r\n            newValue.left = value;\r\n        else if(fieldName === 'top' && rta)\r\n            newValue.right = value;\r\n        else if(fieldName === 'right' && rta)\r\n            newValue.top = value;\r\n        else if(fieldName === 'right' && rba)\r\n            newValue.bot = value;\r\n        else if(fieldName === 'bot' && rba)\r\n            newValue.right = value;\r\n        else if(fieldName === 'bot' && lba)\r\n            newValue.left = value;\r\n\r\n        this.setState( newValue, () => {\r\n            this.props.func(this.state, key); // отправлем данные в Арр\r\n          }\r\n        )\r\n    }\r\n\r\n    render(){\r\n        let set   = this.props.set;\r\n        let left  = this.state.left;\r\n        let top   = this.state.top;\r\n        let right = this.state.right;\r\n        let bot   = this.state.bot;\r\n        let min   = set.edgeMin;\r\n        let max = set.edgeMax;\r\n        return(\r\n            <>\r\n            <label className=\"flex-column\">\r\n                <span>Слева</span>\r\n                <select onChange={this.handleChange} name=\"left\" defaultValue=\"0\" value={left}>\r\n                    <option value=\"0.0\">0.0</option>\r\n                    <option value={min}>{min}</option>\r\n                    <option value={max}>{max}</option>\r\n                </select>\r\n            </label>\r\n            <label className=\"flex-column\">\r\n                <span>Сверху</span>\r\n                <select onChange={this.handleChange} name=\"top\" defaultValue=\"0\" value={top}>\r\n                    <option value=\"0.0\">0.0</option>\r\n                    <option value={min}>{min}</option>\r\n                    <option value={max}>{max}</option>\r\n                </select>\r\n            </label>\r\n            <label className=\"flex-column\">\r\n                <span>Справа</span>\r\n                <select onChange={this.handleChange} name=\"right\" defaultValue=\"0\" value={right}>\r\n                    <option value=\"0.0\">0.0</option>\r\n                    <option value={min}>{min}</option>\r\n                    <option value={max}>{max}</option>\r\n                </select>\r\n            </label>\r\n            <label className=\"flex-column\">\r\n                <span>Снизу</span>\r\n                <select onChange={this.handleChange} name=\"bot\" defaultValue=\"0\" value={bot}>\r\n                    <option value=\"0.0\">0.0</option>\r\n                    <option value={min}>{min}</option>\r\n                    <option value={max}>{max}</option>\r\n                </select>\r\n            </label>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport {EdgeOptions};\r\n\r\nfunction Edge(props){\r\n    let {set,m} = props;\r\n    let length = 100;\r\n    let lx = m - 10;\r\n    let ly = m + set.height + 10;\r\n    let rx = m + set.width + 10;\r\n    return(\r\n        <>\r\n        <path d={`M ${lx} ${ly} v -${length}`} stroke=\"brown\" stroke-dasharray=\"15,10\" strokeWidth=\"3\" fill=\"transparent\" />\r\n        <text fontSize=\"150%\" x={lx-45} y={ly-25} fill=\"brown\">{set.edge.left}</text>\r\n        <path d={`M ${lx} ${ly} h ${length}`} stroke=\"brown\" stroke-dasharray=\"15,10\" strokeWidth=\"3\" fill=\"transparent\" />\r\n        <text fontSize=\"150%\" x={lx+30} y={ly+25} fill=\"brown\">{set.edge.bot}</text>\r\n\r\n        <path d={`M ${rx} ${lx} v ${length}`} stroke=\"brown\" stroke-dasharray=\"15,10\" strokeWidth=\"3\" fill=\"transparent\" />\r\n        <text fontSize=\"150%\" x={rx-60} y={lx-10} fill=\"brown\">{set.edge.top}</text>\r\n        <path d={`M ${rx} ${lx} h -${length}`} stroke=\"brown\" stroke-dasharray=\"15,10\" strokeWidth=\"3\" fill=\"transparent\" />\r\n        <text fontSize=\"150%\" x={rx+5} y={lx+50} fill=\"brown\">{set.edge.right}</text>\r\n        </>\r\n    );\r\n}\r\nexport {Edge};","import React from 'react';\nimport './App.css';\nimport {LoopsOptions, Loops} from './components/loops';\nimport {GrooveOptions, Groove} from './components/groove';\nimport {EdgeOptions, Edge} from './components/edge';\n\nclass App extends React.Component {\n\n  state = {\n    details: new Map(),\n  }\n\n  addNewDetailFunc = () => {\n    let newDetail = {\n      'title': 'Деталь #1',\n      'width': 400,\n      'minWidth': 60,\n      'maxWidth': 2040,\n      'height': 600,\n      'minHeight': 60,\n      'maxHeight': 2770,\n      'count': 1,\n      'reserve':{\n        'left': false,\n        'top': false,\n        'right': false,\n        'bot': false    \n      },\n      'lt': {title:'Левый верхний' , prev:'lb', next:'rt', x:0, y:0, type:'outside'},\n      'rt': {title:'Правый верхний', prev:'lt', next:'rb', x:0, y:0, type:'outside'},\n      'rb': {title:'Правый нижний' , prev:'rt', next:'lb', x:0, y:0, type:'outside'},\n      'lb': {title:'Левый нижний'  , prev:'rb', next:'lt', x:0, y:0, type:'outside'},\n      'loops': false,\n      'groove': false,\n      'grooveIndent': 16,\n      'grooveWidth': 4,\n      'grooveDeep': 8,\n      'edge':{\n        'left': 0.0,\n        'top': 0.0,\n        'right': 0.0,\n        'bot': 0.0    \n      },\n      'edgeMin': 0.4,\n      'edgeMax': 2.4,\n    }\n    let details = this.state.details;\n    details.set('D-' + new Date().getTime(), newDetail);\n    this.setState({details});\n  }\n\n  inputOnChange = (angleTitle, obj, detailKey) => {\n    let details = this.state.details;\n    let detail = details.get(detailKey);\n\n    for(let key in obj){\n      detail[angleTitle][key] = obj[key];\n    }\n\n    details.set(detailKey,detail);\n    this.setState({details});\n  }\n\n  handleSetDetailSize = (detailKey, side, value) => {\n    let details = this.state.details;\n    let detail = details.get(detailKey);\n\n    detail[side] = value;\n\n    details.set(detailKey,detail);\n    this.setState({details});\n  }\n\n  loopChange = (loops, detailKey) => {\n    let details = this.state.details;\n    let detail = details.get(detailKey);\n    let width = detail.width;\n    let height = detail.height;\n\n    // Резервируем сторону детали, если она свободна\n    if(!detail.reserve[loops.side]){\n      for(let loopSide in detail.reserve){\n        if(detail.reserve[loopSide] === 'loops')\n          detail.reserve[loopSide] = false;\n      }\n      detail.reserve[loops.side] = 'loops';\n    }\n    \n    // Здесь пересчитываем расположение последней петли, \n    // если оно дальше границы детали\n    if(loops.side === 'left' || loops.side === 'right'){\n      if(loops.after > height){\n        loops.after = height - 50;\n      }\n    }\n    else{\n      if(loops.after > width){\n        loops.after = width - 50;\n      }\n    }\n    // Перезаписываем объект детали с новыми данными петель\n    detail.loops = loops;\n    details.set(detailKey,detail);\n    this.setState({details});\n  }\n\n  grooveChange = (side, detailKey) => {\n    let details = this.state.details;\n    let detail = details.get(detailKey);\n\n    // Резервируем сторону детали, если она свободна\n    if(!detail.reserve[side]){\n      for(let grooveSide in detail.reserve){\n        if(detail.reserve[grooveSide] === 'groove')\n          detail.reserve[grooveSide] = false;\n      }\n      if(side !== 'none'){\n        detail.reserve[side] = 'groove';\n        detail.groove = side;\n      }\n      else{\n        detail.groove = false;\n      }\n    }\n\n    details.set(detailKey,detail);\n    this.setState({details});\n  }\n\n  edgeChange = (edge,detailKey) => {\n    let details = this.state.details;\n    let detail = details.get(detailKey);\n    detail.edge = edge;\n    details.set(detailKey,detail);\n    this.setState({details});\n  }\n  \n  render(){\n     return (\n      <>\n      <DetailsList \n        list={this.state.details}\n        loopF={this.loopChange} \n        grooveF={this.grooveChange} \n        edgeF={this.edgeChange}\n        f={this.inputOnChange} \n        ff={this.handleSetDetailSize} />\n      <FormControls addNewDetailFunc={this.addNewDetailFunc} />\n      <div className=\"app-caption\">\n        <h4>Особенности приложения:</h4>\n        <ol>\n          <li>Сохраняются пропорции фигуры при масштабировании</li>\n          <li>Все опции углов собраны в одном месте</li>\n          <li>Зависимые углы связаны - максимальные значения расчитываются \"на лету\"</li>\n          <li>При превышении лимитов размеров деталей поля с ошибками подсвечиваются</li>\n          <li>При превышении лимитов размеров деталей чертёж детали не отображает изменения, всегда только допустимые размеры</li>\n        </ol>\n      </div>\n      </>\n    );\n  }\n}\n\nexport default App;\n\nclass DetailsList extends React.Component{\n  state = {}\n\n  render(){\n    let list = [];\n    let set = this.props.f;\n    let setSizeF = this.props.ff;\n    let loopF = this.props.loopF;\n    let grooveF = this.props.grooveF;\n    let edgeF = this.props.edgeF;\n    this.props.list.forEach(function(value,key) {\n      list.push( <Detail \n        ff={setSizeF} \n        f={set} \n        loopF={loopF} \n        grooveF={grooveF}\n        edgeF={edgeF} \n        key={key} \n        dkey={key} \n        value={value} /> );\n    });\n    return(\n      <>\n      <h2>Список деталей</h2>\n      {list.length > 0 ? list : 'Список пуст'}\n      </>\n    );\n  }\n}\n\nclass Detail extends React.Component{\n  state = {}\n\n  handleSetSize = (e) => {\n    let fieldName = e.target.name;\n    let min = e.target.min;\n    let max = e.target.max;\n    let value = +e.target.value;\n    let key = e.target.closest('.detail').dataset.key;\n\n    if(value < min || value > max)\n      e.target.classList.add('error')\n    else\n      e.target.classList.remove('error')\n\n    this.props.ff(key,fieldName,value);\n  }\n\n  render(){\n    let set = this.props.value;\n    return(\n      <div className=\"detail\" data-key={this.props.dkey}>\n        <div className=\"detail-settings w100p\">\n          <fieldset className=\"flex w50p\">\n            <legend>Размеры</legend>\n            <label className=\"w100p\">\n              <input onChange={this.handleSetSize} type=\"text\" name=\"title\" placeholder=\"Комментарий\" value={set.title} />\n            </label>\n             <label className=\"flex-column\">\n              <span>Ширина, мм</span>\n              <input onChange={this.handleSetSize} type=\"number\" name=\"width\" min=\"60\" max=\"2040\" value={set.width} />\n            </label>\n            <label className=\"flex-column\">\n              <span>Длина, мм</span>\n              <input onChange={this.handleSetSize} type=\"number\" name=\"height\" min=\"60\" max=\"2770\" value={set.height} />\n            </label>\n            <label className=\"flex-column\">\n              <span>Кол-во, шт</span>\n              <input onChange={this.handleSetSize} type=\"number\" name=\"count\" value={set.count} />\n            </label>\n          </fieldset>\n\n          <fieldset id=\"edge\" className=\"flex w50p\">\n            <legend>Кромка</legend>\n            <EdgeOptions func={this.props.edgeF} set={this.props.value} />\n          </fieldset>\n\n          <fieldset id=\"angles\" className=\"w100p\">\n            <legend>Углы</legend>\n            <AngleOptions angleName='lt' func={this.props.f} set={this.props.value} />\n            <AngleOptions angleName='rt' func={this.props.f} set={this.props.value} />\n            <AngleOptions angleName='rb' func={this.props.f} set={this.props.value} />\n            <AngleOptions angleName='lb' func={this.props.f} set={this.props.value} />\n          </fieldset>\n\n          <fieldset id=\"loops\" className=\"flex w50p\">\n            <legend>Петли</legend>\n            <LoopsOptions func={this.props.loopF} set={this.props.value} />\n          </fieldset>\n\n          <fieldset id=\"groove\" className=\"flex w50p\">\n            <legend>Паз</legend>\n            <GrooveOptions func={this.props.grooveF} set={this.props.value} />\n          </fieldset>\n\n        </div>\n        <div className=\"detail-plan\">\n          <DetailPlan set={this.props.value} />\n        </div>\n      </div>\n    )\n  }\n}\n\nclass AngleOptions extends React.Component{\n  state = {\n    active: false,\n    type: 'outside',\n    send: true,\n    x: 30,\n    y: 30,\n  }\n\n  handleInputChange = (event) => {\n    const target = event.target;\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n    const name = target.name;\n\n    target.type === 'range' && this.state.send ?\n      this.setState({\n        x: value,\n        y: value,\n      })\n    :\n      this.setState({\n        [name]: value\n      });\n    \n    this.props.func(\n      this.props.angleName,\n      { // Отправляем данные угла назад\n        x:this.state.x,\n        y:this.state.y,\n        type:this.state.type,\n        title:this.props.set[this.props.angleName].title,\n        next:this.props.set[this.props.angleName].next,\n        prev:this.props.set[this.props.angleName].prev\n      },\n      target.closest('.detail').dataset.key\n    );\n  }\n\n  handleTypeChange = (e) => {\n    let type = e.target.name;\n    this.setState(function(state, props){\n      this.props.func( // Отправляем данные угла назад\n        props.angleName,\n        {\n          x:state.x,\n          y:state.y,\n          type:type,\n          title:props.set[props.angleName].title,\n          next:props.set[props.angleName].next,\n          prev:props.set[props.angleName].prev,\n        },\n        e.target.closest('.detail').dataset.key\n      );\n      return {type: type};\n    });\n  }\n\n  handleInputActive = (e) => {\n    const value = e.target.checked;\n    this.setState({\n      active: value\n    })\n    this.props.func(\n      this.props.angleName,\n      { // Отправляем данные угла назад\n        x: value ? this.state.x : 0,\n        y: value ? this.state.y : 0,\n        type:this.state.type,\n        title:this.props.set[this.props.angleName].title,\n        next:this.props.set[this.props.angleName].next,\n        prev:this.props.set[this.props.angleName].prev\n      },\n      e.target.closest('.detail').dataset.key\n    );\n  }\n\n  render(){\n    let set = this.props.set;\n    let next = set[set[this.props.angleName].next];\n    let prev = set[set[this.props.angleName].prev];\n    let maxX = 101;\n    let maxY = 101;\n    \n    if(this.props.angleName === 'lt'){\n      maxY = +set.width - next.y;\n      maxX = +set.height - prev.x;\n    }\n    else if(this.props.angleName === 'rt'){\n      maxY = +set.width - prev.y;\n      maxX = +set.height - next.x;\n    }\n    else if(this.props.angleName === 'rb'){\n      maxY = +set.width - next.y;\n      maxX = +set.height - prev.x;\n    }\n    else{\n      maxY = +set.width - prev.y;\n      maxX = +set.height - next.x;\n    }\n\n    let input = <span><input onChange={this.handleInputActive} type=\"checkbox\" name=\"active\" checked={this.state.active} /></span>;\n    // Если сторона зарезервирована\n    let closedAngle = [];\n    let reserveL = set.reserve.left;\n    let reserveT = set.reserve.top;\n    let reserveR = set.reserve.right;\n    let reserveB = set.reserve.bot;\n    let motive = '';\n    if( reserveL === 'loops' || reserveL === 'groove'){\n      closedAngle = ['lb','lt'];\n      reserveL === \"loops\" ? motive = 'петлями' : motive = 'пазом';\n    }\n    else if(reserveT === 'loops' || reserveT === 'groove'){\n      closedAngle = ['lt','rt'];\n      reserveT === \"loops\" ? motive = 'петлями' : motive = 'пазом';\n    }\n    else if(reserveR === 'loops' || reserveR === 'groove'){\n      closedAngle = ['rt','rb'];\n      reserveR === \"loops\" ? motive = 'петлями' : motive = 'пазом';\n    }\n    else if(reserveB === 'loops' || reserveB === 'groove'){\n      closedAngle = ['rb','lb'];\n      reserveB === \"loops\" ? motive = 'петлями' : motive = 'пазом';\n    }\n\n    closedAngle.forEach((el)=>{\n      if(this.props.angleName === el)\n        input = <span className=\"reserve-notice red\">Сторона занята {motive}</span>;\n    })\n\n    // Закрытое положение\n    if(!this.state.active){\n      return(\n        <div className=\"angle-options-wrapper\">\n          <div className=\"angle-options-type w100p\">\n            <label className=\"angle-title-wrapper\">\n              <span className={`angle-title ${this.props.angleName}`}>{set[this.props.angleName].title}</span>\n              {input}\n            </label>\n          </div>\n        </div>\n      )\n    }\n    // Открытое положение\n    return(\n      <div className={`angle-options-wrapper ${this.state.active && 'active'}`}>\n        <div className=\"angle-options-type w100p\">\n          <label className=\"angle-title-wrapper\">\n            <span className={`angle-title ${this.props.angleName}`}>{set[this.props.angleName].title}</span>\n            <span><input onChange={this.handleInputActive} type=\"checkbox\" name=\"active\" checked={this.state.active} /></span>\n          </label>\n          <button onClick={this.handleTypeChange} name=\"outside\" className=\"angle-type__outside ml-a\" data-active={this.state.type === 'outside' && 'active' }>Наружный</button>\n          <button onClick={this.handleTypeChange} name=\"linear\" className=\"angle-type__linear\" data-active={this.state.type === 'linear' && 'active' }>Прямой</button>\n          <button onClick={this.handleTypeChange} name=\"inside\" className=\"angle-type__inside\" data-active={this.state.type === 'inside' && 'active' }>Внутренний</button>\n        </div>\n        <label className=\"w100p pt10\">\n          X <input onChange={this.handleInputChange} type=\"range\" name=\"y\" min=\"30\" max={maxY} step=\"1\" value={this.state.y} />\n            <span><b>{this.state.y}</b>&nbsp;мм</span>\n        </label>\n        <label className=\"switch\">\n          <input onChange={this.handleInputChange} name=\"send\" type=\"checkbox\" checked={this.state.send} />\n        </label>\n        <label className=\"w100p\">\n          Y <input onChange={this.handleInputChange} type=\"range\" name=\"x\" min=\"30\" max={maxX} step=\"1\" value={this.state.x} disabled={this.state.send} />\n            <span><b>{this.state.x}</b>&nbsp;мм</span>\n        </label>\n      </div>\n    );\n  }\n}\n\nfunction correctSize(side,min,max){\n  let m = Math.abs(side);\n  if(m < min)\n    return min;\n  else if(m > max)\n    return max;\n  else\n    return m;\n}\n\nfunction DetailPlan(props){\n  let set = props.set;\n  let {width,minWidth,maxWidth,height,minHeight,maxHeight,lt,rt,lb,rb} = set;\n  let m = 70;\n\n  width = correctSize(width,minWidth,maxWidth);\n  height = correctSize(height,minHeight,maxHeight);\n\n  let ltA   = `M ${m} ${(Math.abs(lt.x) + m)} Q ${angleControlDotLT(m,lt)} ${(Math.abs(lt.y) + m)} ${m}`;\n  let top   = ` L ${(width-rt.y + m)} ${m}`;\n  let rtA   = ` Q ${angleControlDotRT(m,rt,set)} ${width+m} ${+rt.x + m}`;\n  let right = ` L ${(width + m)} ${(height - rb.x + m)}`;\n  let rbA   = ` Q ${angleControlDotRB(m,rb,set)} ${(width - rb.y + m)} ${(height + m)}`;\n  let bot   = ` L ${(+lb.y+m)} ${(height + m)}`;\n  let lbA   = ` Q ${angleControlDotLB(m,lb,set)} ${m} ${height-lb.x+m}`;\n\n  return(\n    <svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" viewBox={\"0 0 \" + (width+m*2) +' '+ (height+m*2)}>\n      {/* Деталь */}\n      <path d={ltA + top + rtA + right + rbA + bot + lbA + ' z'} stroke=\"#333333\" strokeWidth=\"3\" strokeLinejoin=\"miter\" fill=\"transparent\"/>\n      {/* Размеры углов */}\n      <path d={`M ${m} ${Math.abs(lt.x) + m} h ${lt.y} v -${lt.x}`}        stroke=\"red\" strokeDasharray=\"10\" fill=\"transparent\"/>\n      <path d={`M ${width+m} ${Math.abs(rt.x) + m} h -${rt.y} v -${rt.x}`} stroke=\"red\" strokeDasharray=\"10\" fill=\"transparent\"/>\n      <path d={`M ${width+m} ${height - rb.x + m} h -${rb.y} v ${rb.x}`}   stroke=\"red\" strokeDasharray=\"10\" fill=\"transparent\"/>\n      <path d={`M ${m} ${height - lb.x + m} h ${+lb.y} v ${+lb.x}`}        stroke=\"red\" strokeDasharray=\"10\" fill=\"transparent\"/>\n      {/* Размер детали */}\n      <text fontSize=\"150%\" x={(m+width)/2} y={20}>{width}мм</text>\n      <text fontSize=\"150%\" transform={`rotate(-90,${20},${(m+height)/2})`} x={m/2-50} y={(m+height)/2}>{height}мм</text>\n      {/* Петли */} <Loops key={new Date().getTime()} set={set} m={m} />\n      {/* Паз */} <Groove set={set} m={m} />\n      {/* Кромка */} <Edge set={set} m={m} />\n    </svg>\n  )\n}\n\nfunction angleControlDotLT(m,angle){\n  if(angle.type === 'outside')\n    return `${m} ${m}`;\n  else if(angle.type === 'linear')\n    return `${angle.x/2 + m} ${angle.y/2 + m}`;\n  else if(angle.type === 'inside')\n    return `${+angle.x + m} ${+angle.y + m}`;\n}\nfunction angleControlDotRT(m,angle,set){\n  if(angle.type === 'outside')\n    return `${(+set.width + m)} ${m}`;\n  else if(angle.type === 'linear')\n    return `${+set.width - angle.y/2 + m} ${angle.x/2 + m}`;\n  else if(angle.type === 'inside')\n    return `${+set.width - angle.y + m} ${+angle.x + m}`;\n}\nfunction angleControlDotRB(m,angle,set){\n  if(angle.type === 'outside')\n    return `${(+set.width + m)} ${+set.height + m}`;\n  else if(angle.type === 'linear')\n    return `${+set.width - angle.y/2 + m} ${+set.height - angle.x/2 + m}`;\n  else if(angle.type === 'inside')\n    return `${+set.width - angle.y + m} ${+set.height - angle.x + m}`;\n}\nfunction angleControlDotLB(m,angle,set){\n  if(angle.type === 'outside')\n    return `${m} ${+set.height + m}`;\n  else if(angle.type === 'linear')\n    return `${+angle.y/2 + m} ${+set.height - angle.x/2 + m}`;\n  else if(angle.type === 'inside')\n    return `${+angle.y + m} ${+set.height - angle.x + m}`;\n}\n\nfunction FormControls(props){\n  return(\n    <div id=\"calc-form-controlls-wrapper\">\n      <button className=\"btn\" onClick={props.addNewDetailFunc} >Добавить деталь</button>\n      <button className=\"btn\" disabled>Перейти к оформлению</button>\n    </div>\n  );\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}